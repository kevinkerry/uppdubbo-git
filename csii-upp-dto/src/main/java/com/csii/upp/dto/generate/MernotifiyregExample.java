package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class MernotifiyregExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public MernotifiyregExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected MernotifiyregExample(MernotifiyregExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andMernbrIsNull() {
            addCriterion("MERNBR is null");
            return (Criteria) this;
        }

        public Criteria andMernbrIsNotNull() {
            addCriterion("MERNBR is not null");
            return (Criteria) this;
        }

        public Criteria andMernbrEqualTo(String value) {
            addCriterion("MERNBR =", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotEqualTo(String value) {
            addCriterion("MERNBR <>", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrGreaterThan(String value) {
            addCriterion("MERNBR >", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrGreaterThanOrEqualTo(String value) {
            addCriterion("MERNBR >=", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrLessThan(String value) {
            addCriterion("MERNBR <", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrLessThanOrEqualTo(String value) {
            addCriterion("MERNBR <=", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrLike(String value) {
            addCriterion("MERNBR like", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotLike(String value) {
            addCriterion("MERNBR not like", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrIn(List<String> values) {
            addCriterion("MERNBR in", values, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotIn(List<String> values) {
            addCriterion("MERNBR not in", values, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrBetween(String value1, String value2) {
            addCriterion("MERNBR between", value1, value2, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotBetween(String value1, String value2) {
            addCriterion("MERNBR not between", value1, value2, "mernbr");
            return (Criteria) this;
        }

        public Criteria andTransdateIsNull() {
            addCriterion("TRANSDATE is null");
            return (Criteria) this;
        }

        public Criteria andTransdateIsNotNull() {
            addCriterion("TRANSDATE is not null");
            return (Criteria) this;
        }

        public Criteria andTransdateEqualTo(Date value) {
            addCriterionForJDBCDate("TRANSDATE =", value, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("TRANSDATE <>", value, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateGreaterThan(Date value) {
            addCriterionForJDBCDate("TRANSDATE >", value, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("TRANSDATE >=", value, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateLessThan(Date value) {
            addCriterionForJDBCDate("TRANSDATE <", value, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("TRANSDATE <=", value, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateIn(List<Date> values) {
            addCriterionForJDBCDate("TRANSDATE in", values, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("TRANSDATE not in", values, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("TRANSDATE between", value1, value2, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("TRANSDATE not between", value1, value2, "transdate");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrIsNull() {
            addCriterion("TRANSSEQNBR is null");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrIsNotNull() {
            addCriterion("TRANSSEQNBR is not null");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrEqualTo(String value) {
            addCriterion("TRANSSEQNBR =", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrNotEqualTo(String value) {
            addCriterion("TRANSSEQNBR <>", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrGreaterThan(String value) {
            addCriterion("TRANSSEQNBR >", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrGreaterThanOrEqualTo(String value) {
            addCriterion("TRANSSEQNBR >=", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrLessThan(String value) {
            addCriterion("TRANSSEQNBR <", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrLessThanOrEqualTo(String value) {
            addCriterion("TRANSSEQNBR <=", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrLike(String value) {
            addCriterion("TRANSSEQNBR like", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrNotLike(String value) {
            addCriterion("TRANSSEQNBR not like", value, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrIn(List<String> values) {
            addCriterion("TRANSSEQNBR in", values, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrNotIn(List<String> values) {
            addCriterion("TRANSSEQNBR not in", values, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrBetween(String value1, String value2) {
            addCriterion("TRANSSEQNBR between", value1, value2, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andTransseqnbrNotBetween(String value1, String value2) {
            addCriterion("TRANSSEQNBR not between", value1, value2, "transseqnbr");
            return (Criteria) this;
        }

        public Criteria andPlainIsNull() {
            addCriterion("PLAIN is null");
            return (Criteria) this;
        }

        public Criteria andPlainIsNotNull() {
            addCriterion("PLAIN is not null");
            return (Criteria) this;
        }

        public Criteria andPlainEqualTo(String value) {
            addCriterion("PLAIN =", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainNotEqualTo(String value) {
            addCriterion("PLAIN <>", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainGreaterThan(String value) {
            addCriterion("PLAIN >", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainGreaterThanOrEqualTo(String value) {
            addCriterion("PLAIN >=", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainLessThan(String value) {
            addCriterion("PLAIN <", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainLessThanOrEqualTo(String value) {
            addCriterion("PLAIN <=", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainLike(String value) {
            addCriterion("PLAIN like", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainNotLike(String value) {
            addCriterion("PLAIN not like", value, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainIn(List<String> values) {
            addCriterion("PLAIN in", values, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainNotIn(List<String> values) {
            addCriterion("PLAIN not in", values, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainBetween(String value1, String value2) {
            addCriterion("PLAIN between", value1, value2, "plain");
            return (Criteria) this;
        }

        public Criteria andPlainNotBetween(String value1, String value2) {
            addCriterion("PLAIN not between", value1, value2, "plain");
            return (Criteria) this;
        }

        public Criteria andSignatureIsNull() {
            addCriterion("SIGNATURE is null");
            return (Criteria) this;
        }

        public Criteria andSignatureIsNotNull() {
            addCriterion("SIGNATURE is not null");
            return (Criteria) this;
        }

        public Criteria andSignatureEqualTo(String value) {
            addCriterion("SIGNATURE =", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureNotEqualTo(String value) {
            addCriterion("SIGNATURE <>", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureGreaterThan(String value) {
            addCriterion("SIGNATURE >", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNATURE >=", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureLessThan(String value) {
            addCriterion("SIGNATURE <", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureLessThanOrEqualTo(String value) {
            addCriterion("SIGNATURE <=", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureLike(String value) {
            addCriterion("SIGNATURE like", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureNotLike(String value) {
            addCriterion("SIGNATURE not like", value, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureIn(List<String> values) {
            addCriterion("SIGNATURE in", values, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureNotIn(List<String> values) {
            addCriterion("SIGNATURE not in", values, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureBetween(String value1, String value2) {
            addCriterion("SIGNATURE between", value1, value2, "signature");
            return (Criteria) this;
        }

        public Criteria andSignatureNotBetween(String value1, String value2) {
            addCriterion("SIGNATURE not between", value1, value2, "signature");
            return (Criteria) this;
        }

        public Criteria andMerurlIsNull() {
            addCriterion("MERURL is null");
            return (Criteria) this;
        }

        public Criteria andMerurlIsNotNull() {
            addCriterion("MERURL is not null");
            return (Criteria) this;
        }

        public Criteria andMerurlEqualTo(String value) {
            addCriterion("MERURL =", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlNotEqualTo(String value) {
            addCriterion("MERURL <>", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlGreaterThan(String value) {
            addCriterion("MERURL >", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlGreaterThanOrEqualTo(String value) {
            addCriterion("MERURL >=", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlLessThan(String value) {
            addCriterion("MERURL <", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlLessThanOrEqualTo(String value) {
            addCriterion("MERURL <=", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlLike(String value) {
            addCriterion("MERURL like", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlNotLike(String value) {
            addCriterion("MERURL not like", value, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlIn(List<String> values) {
            addCriterion("MERURL in", values, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlNotIn(List<String> values) {
            addCriterion("MERURL not in", values, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlBetween(String value1, String value2) {
            addCriterion("MERURL between", value1, value2, "merurl");
            return (Criteria) this;
        }

        public Criteria andMerurlNotBetween(String value1, String value2) {
            addCriterion("MERURL not between", value1, value2, "merurl");
            return (Criteria) this;
        }

        public Criteria andSendtimesIsNull() {
            addCriterion("SENDTIMES is null");
            return (Criteria) this;
        }

        public Criteria andSendtimesIsNotNull() {
            addCriterion("SENDTIMES is not null");
            return (Criteria) this;
        }

        public Criteria andSendtimesEqualTo(Long value) {
            addCriterion("SENDTIMES =", value, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesNotEqualTo(Long value) {
            addCriterion("SENDTIMES <>", value, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesGreaterThan(Long value) {
            addCriterion("SENDTIMES >", value, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesGreaterThanOrEqualTo(Long value) {
            addCriterion("SENDTIMES >=", value, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesLessThan(Long value) {
            addCriterion("SENDTIMES <", value, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesLessThanOrEqualTo(Long value) {
            addCriterion("SENDTIMES <=", value, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesIn(List<Long> values) {
            addCriterion("SENDTIMES in", values, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesNotIn(List<Long> values) {
            addCriterion("SENDTIMES not in", values, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesBetween(Long value1, Long value2) {
            addCriterion("SENDTIMES between", value1, value2, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andSendtimesNotBetween(Long value1, Long value2) {
            addCriterion("SENDTIMES not between", value1, value2, "sendtimes");
            return (Criteria) this;
        }

        public Criteria andNotifytypeIsNull() {
            addCriterion("NOTIFYTYPE is null");
            return (Criteria) this;
        }

        public Criteria andNotifytypeIsNotNull() {
            addCriterion("NOTIFYTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andNotifytypeEqualTo(String value) {
            addCriterion("NOTIFYTYPE =", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeNotEqualTo(String value) {
            addCriterion("NOTIFYTYPE <>", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeGreaterThan(String value) {
            addCriterion("NOTIFYTYPE >", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeGreaterThanOrEqualTo(String value) {
            addCriterion("NOTIFYTYPE >=", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeLessThan(String value) {
            addCriterion("NOTIFYTYPE <", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeLessThanOrEqualTo(String value) {
            addCriterion("NOTIFYTYPE <=", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeLike(String value) {
            addCriterion("NOTIFYTYPE like", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeNotLike(String value) {
            addCriterion("NOTIFYTYPE not like", value, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeIn(List<String> values) {
            addCriterion("NOTIFYTYPE in", values, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeNotIn(List<String> values) {
            addCriterion("NOTIFYTYPE not in", values, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeBetween(String value1, String value2) {
            addCriterion("NOTIFYTYPE between", value1, value2, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifytypeNotBetween(String value1, String value2) {
            addCriterion("NOTIFYTYPE not between", value1, value2, "notifytype");
            return (Criteria) this;
        }

        public Criteria andNotifystatusIsNull() {
            addCriterion("NOTIFYSTATUS is null");
            return (Criteria) this;
        }

        public Criteria andNotifystatusIsNotNull() {
            addCriterion("NOTIFYSTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andNotifystatusEqualTo(String value) {
            addCriterion("NOTIFYSTATUS =", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusNotEqualTo(String value) {
            addCriterion("NOTIFYSTATUS <>", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusGreaterThan(String value) {
            addCriterion("NOTIFYSTATUS >", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusGreaterThanOrEqualTo(String value) {
            addCriterion("NOTIFYSTATUS >=", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusLessThan(String value) {
            addCriterion("NOTIFYSTATUS <", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusLessThanOrEqualTo(String value) {
            addCriterion("NOTIFYSTATUS <=", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusLike(String value) {
            addCriterion("NOTIFYSTATUS like", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusNotLike(String value) {
            addCriterion("NOTIFYSTATUS not like", value, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusIn(List<String> values) {
            addCriterion("NOTIFYSTATUS in", values, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusNotIn(List<String> values) {
            addCriterion("NOTIFYSTATUS not in", values, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusBetween(String value1, String value2) {
            addCriterion("NOTIFYSTATUS between", value1, value2, "notifystatus");
            return (Criteria) this;
        }

        public Criteria andNotifystatusNotBetween(String value1, String value2) {
            addCriterion("NOTIFYSTATUS not between", value1, value2, "notifystatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}