package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class QueapplerrorExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public QueapplerrorExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    protected QueapplerrorExample(QueapplerrorExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andQuenbrIsNull() {
            addCriterion("QUENBR is null");
            return (Criteria) this;
        }

        public Criteria andQuenbrIsNotNull() {
            addCriterion("QUENBR is not null");
            return (Criteria) this;
        }

        public Criteria andQuenbrEqualTo(Long value) {
            addCriterion("QUENBR =", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrNotEqualTo(Long value) {
            addCriterion("QUENBR <>", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrGreaterThan(Long value) {
            addCriterion("QUENBR >", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrGreaterThanOrEqualTo(Long value) {
            addCriterion("QUENBR >=", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrLessThan(Long value) {
            addCriterion("QUENBR <", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrLessThanOrEqualTo(Long value) {
            addCriterion("QUENBR <=", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrIn(List<Long> values) {
            addCriterion("QUENBR in", values, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrNotIn(List<Long> values) {
            addCriterion("QUENBR not in", values, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrBetween(Long value1, Long value2) {
            addCriterion("QUENBR between", value1, value2, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrNotBetween(Long value1, Long value2) {
            addCriterion("QUENBR not between", value1, value2, "quenbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrIsNull() {
            addCriterion("APPLNBR is null");
            return (Criteria) this;
        }

        public Criteria andApplnbrIsNotNull() {
            addCriterion("APPLNBR is not null");
            return (Criteria) this;
        }

        public Criteria andApplnbrEqualTo(Long value) {
            addCriterion("APPLNBR =", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrNotEqualTo(Long value) {
            addCriterion("APPLNBR <>", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrGreaterThan(Long value) {
            addCriterion("APPLNBR >", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("APPLNBR >=", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrLessThan(Long value) {
            addCriterion("APPLNBR <", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrLessThanOrEqualTo(Long value) {
            addCriterion("APPLNBR <=", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrIn(List<Long> values) {
            addCriterion("APPLNBR in", values, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrNotIn(List<Long> values) {
            addCriterion("APPLNBR not in", values, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrBetween(Long value1, Long value2) {
            addCriterion("APPLNBR between", value1, value2, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrNotBetween(Long value1, Long value2) {
            addCriterion("APPLNBR not between", value1, value2, "applnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrIsNull() {
            addCriterion("QUESUBNBR is null");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrIsNotNull() {
            addCriterion("QUESUBNBR is not null");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrEqualTo(Long value) {
            addCriterion("QUESUBNBR =", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrNotEqualTo(Long value) {
            addCriterion("QUESUBNBR <>", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrGreaterThan(Long value) {
            addCriterion("QUESUBNBR >", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("QUESUBNBR >=", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrLessThan(Long value) {
            addCriterion("QUESUBNBR <", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrLessThanOrEqualTo(Long value) {
            addCriterion("QUESUBNBR <=", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrIn(List<Long> values) {
            addCriterion("QUESUBNBR in", values, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrNotIn(List<Long> values) {
            addCriterion("QUESUBNBR not in", values, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrBetween(Long value1, Long value2) {
            addCriterion("QUESUBNBR between", value1, value2, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrNotBetween(Long value1, Long value2) {
            addCriterion("QUESUBNBR not between", value1, value2, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrIsNull() {
            addCriterion("RUNSEQNBR is null");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrIsNotNull() {
            addCriterion("RUNSEQNBR is not null");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrEqualTo(Long value) {
            addCriterion("RUNSEQNBR =", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrNotEqualTo(Long value) {
            addCriterion("RUNSEQNBR <>", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrGreaterThan(Long value) {
            addCriterion("RUNSEQNBR >", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("RUNSEQNBR >=", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrLessThan(Long value) {
            addCriterion("RUNSEQNBR <", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrLessThanOrEqualTo(Long value) {
            addCriterion("RUNSEQNBR <=", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrIn(List<Long> values) {
            addCriterion("RUNSEQNBR in", values, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrNotIn(List<Long> values) {
            addCriterion("RUNSEQNBR not in", values, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrBetween(Long value1, Long value2) {
            addCriterion("RUNSEQNBR between", value1, value2, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrNotBetween(Long value1, Long value2) {
            addCriterion("RUNSEQNBR not between", value1, value2, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrIsNull() {
            addCriterion("ERRORSEQNBR is null");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrIsNotNull() {
            addCriterion("ERRORSEQNBR is not null");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrEqualTo(Long value) {
            addCriterion("ERRORSEQNBR =", value, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrNotEqualTo(Long value) {
            addCriterion("ERRORSEQNBR <>", value, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrGreaterThan(Long value) {
            addCriterion("ERRORSEQNBR >", value, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("ERRORSEQNBR >=", value, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrLessThan(Long value) {
            addCriterion("ERRORSEQNBR <", value, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrLessThanOrEqualTo(Long value) {
            addCriterion("ERRORSEQNBR <=", value, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrIn(List<Long> values) {
            addCriterion("ERRORSEQNBR in", values, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrNotIn(List<Long> values) {
            addCriterion("ERRORSEQNBR not in", values, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrBetween(Long value1, Long value2) {
            addCriterion("ERRORSEQNBR between", value1, value2, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andErrorseqnbrNotBetween(Long value1, Long value2) {
            addCriterion("ERRORSEQNBR not between", value1, value2, "errorseqnbr");
            return (Criteria) this;
        }

        public Criteria andRundataIsNull() {
            addCriterion("RUNDATA is null");
            return (Criteria) this;
        }

        public Criteria andRundataIsNotNull() {
            addCriterion("RUNDATA is not null");
            return (Criteria) this;
        }

        public Criteria andRundataEqualTo(String value) {
            addCriterion("RUNDATA =", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataNotEqualTo(String value) {
            addCriterion("RUNDATA <>", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataGreaterThan(String value) {
            addCriterion("RUNDATA >", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataGreaterThanOrEqualTo(String value) {
            addCriterion("RUNDATA >=", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataLessThan(String value) {
            addCriterion("RUNDATA <", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataLessThanOrEqualTo(String value) {
            addCriterion("RUNDATA <=", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataLike(String value) {
            addCriterion("RUNDATA like", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataNotLike(String value) {
            addCriterion("RUNDATA not like", value, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataIn(List<String> values) {
            addCriterion("RUNDATA in", values, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataNotIn(List<String> values) {
            addCriterion("RUNDATA not in", values, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataBetween(String value1, String value2) {
            addCriterion("RUNDATA between", value1, value2, "rundata");
            return (Criteria) this;
        }

        public Criteria andRundataNotBetween(String value1, String value2) {
            addCriterion("RUNDATA not between", value1, value2, "rundata");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNull() {
            addCriterion("DATELASTMAINT is null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNotNull() {
            addCriterion("DATELASTMAINT is not null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintEqualTo(Date value) {
            addCriterion("DATELASTMAINT =", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotEqualTo(Date value) {
            addCriterion("DATELASTMAINT <>", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThan(Date value) {
            addCriterion("DATELASTMAINT >", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT >=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThan(Date value) {
            addCriterion("DATELASTMAINT <", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT <=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIn(List<Date> values) {
            addCriterion("DATELASTMAINT in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotIn(List<Date> values) {
            addCriterion("DATELASTMAINT not in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT not between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andErrornbrIsNull() {
            addCriterion("ERRORNBR is null");
            return (Criteria) this;
        }

        public Criteria andErrornbrIsNotNull() {
            addCriterion("ERRORNBR is not null");
            return (Criteria) this;
        }

        public Criteria andErrornbrEqualTo(Long value) {
            addCriterion("ERRORNBR =", value, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrNotEqualTo(Long value) {
            addCriterion("ERRORNBR <>", value, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrGreaterThan(Long value) {
            addCriterion("ERRORNBR >", value, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrGreaterThanOrEqualTo(Long value) {
            addCriterion("ERRORNBR >=", value, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrLessThan(Long value) {
            addCriterion("ERRORNBR <", value, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrLessThanOrEqualTo(Long value) {
            addCriterion("ERRORNBR <=", value, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrIn(List<Long> values) {
            addCriterion("ERRORNBR in", values, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrNotIn(List<Long> values) {
            addCriterion("ERRORNBR not in", values, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrBetween(Long value1, Long value2) {
            addCriterion("ERRORNBR between", value1, value2, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrornbrNotBetween(Long value1, Long value2) {
            addCriterion("ERRORNBR not between", value1, value2, "errornbr");
            return (Criteria) this;
        }

        public Criteria andErrordetailIsNull() {
            addCriterion("ERRORDETAIL is null");
            return (Criteria) this;
        }

        public Criteria andErrordetailIsNotNull() {
            addCriterion("ERRORDETAIL is not null");
            return (Criteria) this;
        }

        public Criteria andErrordetailEqualTo(String value) {
            addCriterion("ERRORDETAIL =", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailNotEqualTo(String value) {
            addCriterion("ERRORDETAIL <>", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailGreaterThan(String value) {
            addCriterion("ERRORDETAIL >", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailGreaterThanOrEqualTo(String value) {
            addCriterion("ERRORDETAIL >=", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailLessThan(String value) {
            addCriterion("ERRORDETAIL <", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailLessThanOrEqualTo(String value) {
            addCriterion("ERRORDETAIL <=", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailLike(String value) {
            addCriterion("ERRORDETAIL like", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailNotLike(String value) {
            addCriterion("ERRORDETAIL not like", value, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailIn(List<String> values) {
            addCriterion("ERRORDETAIL in", values, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailNotIn(List<String> values) {
            addCriterion("ERRORDETAIL not in", values, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailBetween(String value1, String value2) {
            addCriterion("ERRORDETAIL between", value1, value2, "errordetail");
            return (Criteria) this;
        }

        public Criteria andErrordetailNotBetween(String value1, String value2) {
            addCriterion("ERRORDETAIL not between", value1, value2, "errordetail");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUEAPPLERROR1
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}