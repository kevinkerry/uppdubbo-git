package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class QueapplhistExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public QueapplhistExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    protected QueapplhistExample(QueapplhistExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andQuenbrIsNull() {
            addCriterion("QUENBR is null");
            return (Criteria) this;
        }

        public Criteria andQuenbrIsNotNull() {
            addCriterion("QUENBR is not null");
            return (Criteria) this;
        }

        public Criteria andQuenbrEqualTo(Long value) {
            addCriterion("QUENBR =", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrNotEqualTo(Long value) {
            addCriterion("QUENBR <>", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrGreaterThan(Long value) {
            addCriterion("QUENBR >", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrGreaterThanOrEqualTo(Long value) {
            addCriterion("QUENBR >=", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrLessThan(Long value) {
            addCriterion("QUENBR <", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrLessThanOrEqualTo(Long value) {
            addCriterion("QUENBR <=", value, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrIn(List<Long> values) {
            addCriterion("QUENBR in", values, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrNotIn(List<Long> values) {
            addCriterion("QUENBR not in", values, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrBetween(Long value1, Long value2) {
            addCriterion("QUENBR between", value1, value2, "quenbr");
            return (Criteria) this;
        }

        public Criteria andQuenbrNotBetween(Long value1, Long value2) {
            addCriterion("QUENBR not between", value1, value2, "quenbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrIsNull() {
            addCriterion("APPLNBR is null");
            return (Criteria) this;
        }

        public Criteria andApplnbrIsNotNull() {
            addCriterion("APPLNBR is not null");
            return (Criteria) this;
        }

        public Criteria andApplnbrEqualTo(Long value) {
            addCriterion("APPLNBR =", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrNotEqualTo(Long value) {
            addCriterion("APPLNBR <>", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrGreaterThan(Long value) {
            addCriterion("APPLNBR >", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("APPLNBR >=", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrLessThan(Long value) {
            addCriterion("APPLNBR <", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrLessThanOrEqualTo(Long value) {
            addCriterion("APPLNBR <=", value, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrIn(List<Long> values) {
            addCriterion("APPLNBR in", values, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrNotIn(List<Long> values) {
            addCriterion("APPLNBR not in", values, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrBetween(Long value1, Long value2) {
            addCriterion("APPLNBR between", value1, value2, "applnbr");
            return (Criteria) this;
        }

        public Criteria andApplnbrNotBetween(Long value1, Long value2) {
            addCriterion("APPLNBR not between", value1, value2, "applnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrIsNull() {
            addCriterion("QUESUBNBR is null");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrIsNotNull() {
            addCriterion("QUESUBNBR is not null");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrEqualTo(Long value) {
            addCriterion("QUESUBNBR =", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrNotEqualTo(Long value) {
            addCriterion("QUESUBNBR <>", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrGreaterThan(Long value) {
            addCriterion("QUESUBNBR >", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("QUESUBNBR >=", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrLessThan(Long value) {
            addCriterion("QUESUBNBR <", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrLessThanOrEqualTo(Long value) {
            addCriterion("QUESUBNBR <=", value, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrIn(List<Long> values) {
            addCriterion("QUESUBNBR in", values, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrNotIn(List<Long> values) {
            addCriterion("QUESUBNBR not in", values, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrBetween(Long value1, Long value2) {
            addCriterion("QUESUBNBR between", value1, value2, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andQuesubnbrNotBetween(Long value1, Long value2) {
            addCriterion("QUESUBNBR not between", value1, value2, "quesubnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrIsNull() {
            addCriterion("RUNSEQNBR is null");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrIsNotNull() {
            addCriterion("RUNSEQNBR is not null");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrEqualTo(Long value) {
            addCriterion("RUNSEQNBR =", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrNotEqualTo(Long value) {
            addCriterion("RUNSEQNBR <>", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrGreaterThan(Long value) {
            addCriterion("RUNSEQNBR >", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("RUNSEQNBR >=", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrLessThan(Long value) {
            addCriterion("RUNSEQNBR <", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrLessThanOrEqualTo(Long value) {
            addCriterion("RUNSEQNBR <=", value, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrIn(List<Long> values) {
            addCriterion("RUNSEQNBR in", values, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrNotIn(List<Long> values) {
            addCriterion("RUNSEQNBR not in", values, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrBetween(Long value1, Long value2) {
            addCriterion("RUNSEQNBR between", value1, value2, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andRunseqnbrNotBetween(Long value1, Long value2) {
            addCriterion("RUNSEQNBR not between", value1, value2, "runseqnbr");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeIsNull() {
            addCriterion("STARTDATETIME is null");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeIsNotNull() {
            addCriterion("STARTDATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeEqualTo(Date value) {
            addCriterion("STARTDATETIME =", value, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeNotEqualTo(Date value) {
            addCriterion("STARTDATETIME <>", value, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeGreaterThan(Date value) {
            addCriterion("STARTDATETIME >", value, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("STARTDATETIME >=", value, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeLessThan(Date value) {
            addCriterion("STARTDATETIME <", value, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("STARTDATETIME <=", value, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeIn(List<Date> values) {
            addCriterion("STARTDATETIME in", values, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeNotIn(List<Date> values) {
            addCriterion("STARTDATETIME not in", values, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeBetween(Date value1, Date value2) {
            addCriterion("STARTDATETIME between", value1, value2, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStartdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("STARTDATETIME not between", value1, value2, "startdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeIsNull() {
            addCriterion("STOPDATETIME is null");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeIsNotNull() {
            addCriterion("STOPDATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeEqualTo(Date value) {
            addCriterion("STOPDATETIME =", value, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeNotEqualTo(Date value) {
            addCriterion("STOPDATETIME <>", value, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeGreaterThan(Date value) {
            addCriterion("STOPDATETIME >", value, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("STOPDATETIME >=", value, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeLessThan(Date value) {
            addCriterion("STOPDATETIME <", value, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("STOPDATETIME <=", value, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeIn(List<Date> values) {
            addCriterion("STOPDATETIME in", values, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeNotIn(List<Date> values) {
            addCriterion("STOPDATETIME not in", values, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeBetween(Date value1, Date value2) {
            addCriterion("STOPDATETIME between", value1, value2, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andStopdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("STOPDATETIME not between", value1, value2, "stopdatetime");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrIsNull() {
            addCriterion("RUNNTWKNODENBR is null");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrIsNotNull() {
            addCriterion("RUNNTWKNODENBR is not null");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrEqualTo(Long value) {
            addCriterion("RUNNTWKNODENBR =", value, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrNotEqualTo(Long value) {
            addCriterion("RUNNTWKNODENBR <>", value, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrGreaterThan(Long value) {
            addCriterion("RUNNTWKNODENBR >", value, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrGreaterThanOrEqualTo(Long value) {
            addCriterion("RUNNTWKNODENBR >=", value, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrLessThan(Long value) {
            addCriterion("RUNNTWKNODENBR <", value, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrLessThanOrEqualTo(Long value) {
            addCriterion("RUNNTWKNODENBR <=", value, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrIn(List<Long> values) {
            addCriterion("RUNNTWKNODENBR in", values, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrNotIn(List<Long> values) {
            addCriterion("RUNNTWKNODENBR not in", values, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrBetween(Long value1, Long value2) {
            addCriterion("RUNNTWKNODENBR between", value1, value2, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andRunntwknodenbrNotBetween(Long value1, Long value2) {
            addCriterion("RUNNTWKNODENBR not between", value1, value2, "runntwknodenbr");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNull() {
            addCriterion("DATELASTMAINT is null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNotNull() {
            addCriterion("DATELASTMAINT is not null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintEqualTo(Date value) {
            addCriterion("DATELASTMAINT =", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotEqualTo(Date value) {
            addCriterion("DATELASTMAINT <>", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThan(Date value) {
            addCriterion("DATELASTMAINT >", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT >=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThan(Date value) {
            addCriterion("DATELASTMAINT <", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT <=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIn(List<Date> values) {
            addCriterion("DATELASTMAINT in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotIn(List<Date> values) {
            addCriterion("DATELASTMAINT not in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT not between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andRunningstatusIsNull() {
            addCriterion("RUNNINGSTATUS is null");
            return (Criteria) this;
        }

        public Criteria andRunningstatusIsNotNull() {
            addCriterion("RUNNINGSTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andRunningstatusEqualTo(Short value) {
            addCriterion("RUNNINGSTATUS =", value, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusNotEqualTo(Short value) {
            addCriterion("RUNNINGSTATUS <>", value, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusGreaterThan(Short value) {
            addCriterion("RUNNINGSTATUS >", value, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusGreaterThanOrEqualTo(Short value) {
            addCriterion("RUNNINGSTATUS >=", value, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusLessThan(Short value) {
            addCriterion("RUNNINGSTATUS <", value, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusLessThanOrEqualTo(Short value) {
            addCriterion("RUNNINGSTATUS <=", value, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusIn(List<Short> values) {
            addCriterion("RUNNINGSTATUS in", values, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusNotIn(List<Short> values) {
            addCriterion("RUNNINGSTATUS not in", values, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusBetween(Short value1, Short value2) {
            addCriterion("RUNNINGSTATUS between", value1, value2, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRunningstatusNotBetween(Short value1, Short value2) {
            addCriterion("RUNNINGSTATUS not between", value1, value2, "runningstatus");
            return (Criteria) this;
        }

        public Criteria andRundateIsNull() {
            addCriterion("RUNDATE is null");
            return (Criteria) this;
        }

        public Criteria andRundateIsNotNull() {
            addCriterion("RUNDATE is not null");
            return (Criteria) this;
        }

        public Criteria andRundateEqualTo(Date value) {
            addCriterionForJDBCDate("RUNDATE =", value, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateNotEqualTo(Date value) {
            addCriterionForJDBCDate("RUNDATE <>", value, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateGreaterThan(Date value) {
            addCriterionForJDBCDate("RUNDATE >", value, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RUNDATE >=", value, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateLessThan(Date value) {
            addCriterionForJDBCDate("RUNDATE <", value, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RUNDATE <=", value, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateIn(List<Date> values) {
            addCriterionForJDBCDate("RUNDATE in", values, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateNotIn(List<Date> values) {
            addCriterionForJDBCDate("RUNDATE not in", values, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RUNDATE between", value1, value2, "rundate");
            return (Criteria) this;
        }

        public Criteria andRundateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RUNDATE not between", value1, value2, "rundate");
            return (Criteria) this;
        }

        public Criteria andDetailIsNull() {
            addCriterion("DETAIL is null");
            return (Criteria) this;
        }

        public Criteria andDetailIsNotNull() {
            addCriterion("DETAIL is not null");
            return (Criteria) this;
        }

        public Criteria andDetailEqualTo(String value) {
            addCriterion("DETAIL =", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailNotEqualTo(String value) {
            addCriterion("DETAIL <>", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailGreaterThan(String value) {
            addCriterion("DETAIL >", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailGreaterThanOrEqualTo(String value) {
            addCriterion("DETAIL >=", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailLessThan(String value) {
            addCriterion("DETAIL <", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailLessThanOrEqualTo(String value) {
            addCriterion("DETAIL <=", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailLike(String value) {
            addCriterion("DETAIL like", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailNotLike(String value) {
            addCriterion("DETAIL not like", value, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailIn(List<String> values) {
            addCriterion("DETAIL in", values, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailNotIn(List<String> values) {
            addCriterion("DETAIL not in", values, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailBetween(String value1, String value2) {
            addCriterion("DETAIL between", value1, value2, "detail");
            return (Criteria) this;
        }

        public Criteria andDetailNotBetween(String value1, String value2) {
            addCriterion("DETAIL not between", value1, value2, "detail");
            return (Criteria) this;
        }

        public Criteria andDatacountIsNull() {
            addCriterion("DATACOUNT is null");
            return (Criteria) this;
        }

        public Criteria andDatacountIsNotNull() {
            addCriterion("DATACOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andDatacountEqualTo(Long value) {
            addCriterion("DATACOUNT =", value, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountNotEqualTo(Long value) {
            addCriterion("DATACOUNT <>", value, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountGreaterThan(Long value) {
            addCriterion("DATACOUNT >", value, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountGreaterThanOrEqualTo(Long value) {
            addCriterion("DATACOUNT >=", value, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountLessThan(Long value) {
            addCriterion("DATACOUNT <", value, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountLessThanOrEqualTo(Long value) {
            addCriterion("DATACOUNT <=", value, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountIn(List<Long> values) {
            addCriterion("DATACOUNT in", values, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountNotIn(List<Long> values) {
            addCriterion("DATACOUNT not in", values, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountBetween(Long value1, Long value2) {
            addCriterion("DATACOUNT between", value1, value2, "datacount");
            return (Criteria) this;
        }

        public Criteria andDatacountNotBetween(Long value1, Long value2) {
            addCriterion("DATACOUNT not between", value1, value2, "datacount");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrIsNull() {
            addCriterion("RERUNSEQNBR is null");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrIsNotNull() {
            addCriterion("RERUNSEQNBR is not null");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrEqualTo(Long value) {
            addCriterion("RERUNSEQNBR =", value, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrNotEqualTo(Long value) {
            addCriterion("RERUNSEQNBR <>", value, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrGreaterThan(Long value) {
            addCriterion("RERUNSEQNBR >", value, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrGreaterThanOrEqualTo(Long value) {
            addCriterion("RERUNSEQNBR >=", value, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrLessThan(Long value) {
            addCriterion("RERUNSEQNBR <", value, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrLessThanOrEqualTo(Long value) {
            addCriterion("RERUNSEQNBR <=", value, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrIn(List<Long> values) {
            addCriterion("RERUNSEQNBR in", values, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrNotIn(List<Long> values) {
            addCriterion("RERUNSEQNBR not in", values, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrBetween(Long value1, Long value2) {
            addCriterion("RERUNSEQNBR between", value1, value2, "rerunseqnbr");
            return (Criteria) this;
        }

        public Criteria andRerunseqnbrNotBetween(Long value1, Long value2) {
            addCriterion("RERUNSEQNBR not between", value1, value2, "rerunseqnbr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUEAPPLHIST
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}