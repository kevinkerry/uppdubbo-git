package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class BankinfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public BankinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    protected BankinfoExample(BankinfoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BANKINFO
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andBanknbrIsNull() {
            addCriterion("BANKNBR is null");
            return (Criteria) this;
        }

        public Criteria andBanknbrIsNotNull() {
            addCriterion("BANKNBR is not null");
            return (Criteria) this;
        }

        public Criteria andBanknbrEqualTo(String value) {
            addCriterion("BANKNBR =", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrNotEqualTo(String value) {
            addCriterion("BANKNBR <>", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrGreaterThan(String value) {
            addCriterion("BANKNBR >", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrGreaterThanOrEqualTo(String value) {
            addCriterion("BANKNBR >=", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrLessThan(String value) {
            addCriterion("BANKNBR <", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrLessThanOrEqualTo(String value) {
            addCriterion("BANKNBR <=", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrLike(String value) {
            addCriterion("BANKNBR like", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrNotLike(String value) {
            addCriterion("BANKNBR not like", value, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrIn(List<String> values) {
            addCriterion("BANKNBR in", values, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrNotIn(List<String> values) {
            addCriterion("BANKNBR not in", values, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrBetween(String value1, String value2) {
            addCriterion("BANKNBR between", value1, value2, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknbrNotBetween(String value1, String value2) {
            addCriterion("BANKNBR not between", value1, value2, "banknbr");
            return (Criteria) this;
        }

        public Criteria andBanknameIsNull() {
            addCriterion("BANKNAME is null");
            return (Criteria) this;
        }

        public Criteria andBanknameIsNotNull() {
            addCriterion("BANKNAME is not null");
            return (Criteria) this;
        }

        public Criteria andBanknameEqualTo(String value) {
            addCriterion("BANKNAME =", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameNotEqualTo(String value) {
            addCriterion("BANKNAME <>", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameGreaterThan(String value) {
            addCriterion("BANKNAME >", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameGreaterThanOrEqualTo(String value) {
            addCriterion("BANKNAME >=", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameLessThan(String value) {
            addCriterion("BANKNAME <", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameLessThanOrEqualTo(String value) {
            addCriterion("BANKNAME <=", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameLike(String value) {
            addCriterion("BANKNAME like", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameNotLike(String value) {
            addCriterion("BANKNAME not like", value, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameIn(List<String> values) {
            addCriterion("BANKNAME in", values, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameNotIn(List<String> values) {
            addCriterion("BANKNAME not in", values, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameBetween(String value1, String value2) {
            addCriterion("BANKNAME between", value1, value2, "bankname");
            return (Criteria) this;
        }

        public Criteria andBanknameNotBetween(String value1, String value2) {
            addCriterion("BANKNAME not between", value1, value2, "bankname");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CREATETIME is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CREATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATETIME >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterionForJDBCDate("CREATETIME <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterionForJDBCDate("CREATETIME in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATETIME not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATETIME between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATETIME not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNull() {
            addCriterion("DATELASTMAINT is null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNotNull() {
            addCriterion("DATELASTMAINT is not null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintEqualTo(Date value) {
            addCriterion("DATELASTMAINT =", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotEqualTo(Date value) {
            addCriterion("DATELASTMAINT <>", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThan(Date value) {
            addCriterion("DATELASTMAINT >", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT >=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThan(Date value) {
            addCriterion("DATELASTMAINT <", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT <=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIn(List<Date> values) {
            addCriterion("DATELASTMAINT in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotIn(List<Date> values) {
            addCriterion("DATELASTMAINT not in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT not between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andBankstateIsNull() {
            addCriterion("BANKSTATE is null");
            return (Criteria) this;
        }

        public Criteria andBankstateIsNotNull() {
            addCriterion("BANKSTATE is not null");
            return (Criteria) this;
        }

        public Criteria andBankstateEqualTo(Long value) {
            addCriterion("BANKSTATE =", value, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateNotEqualTo(Long value) {
            addCriterion("BANKSTATE <>", value, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateGreaterThan(Long value) {
            addCriterion("BANKSTATE >", value, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateGreaterThanOrEqualTo(Long value) {
            addCriterion("BANKSTATE >=", value, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateLessThan(Long value) {
            addCriterion("BANKSTATE <", value, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateLessThanOrEqualTo(Long value) {
            addCriterion("BANKSTATE <=", value, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateIn(List<Long> values) {
            addCriterion("BANKSTATE in", values, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateNotIn(List<Long> values) {
            addCriterion("BANKSTATE not in", values, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateBetween(Long value1, Long value2) {
            addCriterion("BANKSTATE between", value1, value2, "bankstate");
            return (Criteria) this;
        }

        public Criteria andBankstateNotBetween(Long value1, Long value2) {
            addCriterion("BANKSTATE not between", value1, value2, "bankstate");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("NOTE is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("NOTE is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("NOTE =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("NOTE <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("NOTE >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("NOTE >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("NOTE <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("NOTE <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("NOTE like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("NOTE not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("NOTE in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("NOTE not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("NOTE between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("NOTE not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrIsNull() {
            addCriterion("BILL99BANKNBR is null");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrIsNotNull() {
            addCriterion("BILL99BANKNBR is not null");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrEqualTo(String value) {
            addCriterion("BILL99BANKNBR =", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrNotEqualTo(String value) {
            addCriterion("BILL99BANKNBR <>", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrGreaterThan(String value) {
            addCriterion("BILL99BANKNBR >", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrGreaterThanOrEqualTo(String value) {
            addCriterion("BILL99BANKNBR >=", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrLessThan(String value) {
            addCriterion("BILL99BANKNBR <", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrLessThanOrEqualTo(String value) {
            addCriterion("BILL99BANKNBR <=", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrLike(String value) {
            addCriterion("BILL99BANKNBR like", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrNotLike(String value) {
            addCriterion("BILL99BANKNBR not like", value, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrIn(List<String> values) {
            addCriterion("BILL99BANKNBR in", values, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrNotIn(List<String> values) {
            addCriterion("BILL99BANKNBR not in", values, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrBetween(String value1, String value2) {
            addCriterion("BILL99BANKNBR between", value1, value2, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andBill99banknbrNotBetween(String value1, String value2) {
            addCriterion("BILL99BANKNBR not between", value1, value2, "bill99banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrIsNull() {
            addCriterion("CNAPS2BANKNBR is null");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrIsNotNull() {
            addCriterion("CNAPS2BANKNBR is not null");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrEqualTo(String value) {
            addCriterion("CNAPS2BANKNBR =", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrNotEqualTo(String value) {
            addCriterion("CNAPS2BANKNBR <>", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrGreaterThan(String value) {
            addCriterion("CNAPS2BANKNBR >", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrGreaterThanOrEqualTo(String value) {
            addCriterion("CNAPS2BANKNBR >=", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrLessThan(String value) {
            addCriterion("CNAPS2BANKNBR <", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrLessThanOrEqualTo(String value) {
            addCriterion("CNAPS2BANKNBR <=", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrLike(String value) {
            addCriterion("CNAPS2BANKNBR like", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrNotLike(String value) {
            addCriterion("CNAPS2BANKNBR not like", value, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrIn(List<String> values) {
            addCriterion("CNAPS2BANKNBR in", values, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrNotIn(List<String> values) {
            addCriterion("CNAPS2BANKNBR not in", values, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrBetween(String value1, String value2) {
            addCriterion("CNAPS2BANKNBR between", value1, value2, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andCnaps2banknbrNotBetween(String value1, String value2) {
            addCriterion("CNAPS2BANKNBR not between", value1, value2, "cnaps2banknbr");
            return (Criteria) this;
        }

        public Criteria andExtfld3IsNull() {
            addCriterion("EXTFLD3 is null");
            return (Criteria) this;
        }

        public Criteria andExtfld3IsNotNull() {
            addCriterion("EXTFLD3 is not null");
            return (Criteria) this;
        }

        public Criteria andExtfld3EqualTo(String value) {
            addCriterion("EXTFLD3 =", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3NotEqualTo(String value) {
            addCriterion("EXTFLD3 <>", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3GreaterThan(String value) {
            addCriterion("EXTFLD3 >", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3GreaterThanOrEqualTo(String value) {
            addCriterion("EXTFLD3 >=", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3LessThan(String value) {
            addCriterion("EXTFLD3 <", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3LessThanOrEqualTo(String value) {
            addCriterion("EXTFLD3 <=", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3Like(String value) {
            addCriterion("EXTFLD3 like", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3NotLike(String value) {
            addCriterion("EXTFLD3 not like", value, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3In(List<String> values) {
            addCriterion("EXTFLD3 in", values, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3NotIn(List<String> values) {
            addCriterion("EXTFLD3 not in", values, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3Between(String value1, String value2) {
            addCriterion("EXTFLD3 between", value1, value2, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld3NotBetween(String value1, String value2) {
            addCriterion("EXTFLD3 not between", value1, value2, "extfld3");
            return (Criteria) this;
        }

        public Criteria andExtfld2IsNull() {
            addCriterion("EXTFLD2 is null");
            return (Criteria) this;
        }

        public Criteria andExtfld2IsNotNull() {
            addCriterion("EXTFLD2 is not null");
            return (Criteria) this;
        }

        public Criteria andExtfld2EqualTo(String value) {
            addCriterion("EXTFLD2 =", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2NotEqualTo(String value) {
            addCriterion("EXTFLD2 <>", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2GreaterThan(String value) {
            addCriterion("EXTFLD2 >", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2GreaterThanOrEqualTo(String value) {
            addCriterion("EXTFLD2 >=", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2LessThan(String value) {
            addCriterion("EXTFLD2 <", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2LessThanOrEqualTo(String value) {
            addCriterion("EXTFLD2 <=", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2Like(String value) {
            addCriterion("EXTFLD2 like", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2NotLike(String value) {
            addCriterion("EXTFLD2 not like", value, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2In(List<String> values) {
            addCriterion("EXTFLD2 in", values, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2NotIn(List<String> values) {
            addCriterion("EXTFLD2 not in", values, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2Between(String value1, String value2) {
            addCriterion("EXTFLD2 between", value1, value2, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld2NotBetween(String value1, String value2) {
            addCriterion("EXTFLD2 not between", value1, value2, "extfld2");
            return (Criteria) this;
        }

        public Criteria andExtfld1IsNull() {
            addCriterion("EXTFLD1 is null");
            return (Criteria) this;
        }

        public Criteria andExtfld1IsNotNull() {
            addCriterion("EXTFLD1 is not null");
            return (Criteria) this;
        }

        public Criteria andExtfld1EqualTo(String value) {
            addCriterion("EXTFLD1 =", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1NotEqualTo(String value) {
            addCriterion("EXTFLD1 <>", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1GreaterThan(String value) {
            addCriterion("EXTFLD1 >", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1GreaterThanOrEqualTo(String value) {
            addCriterion("EXTFLD1 >=", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1LessThan(String value) {
            addCriterion("EXTFLD1 <", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1LessThanOrEqualTo(String value) {
            addCriterion("EXTFLD1 <=", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1Like(String value) {
            addCriterion("EXTFLD1 like", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1NotLike(String value) {
            addCriterion("EXTFLD1 not like", value, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1In(List<String> values) {
            addCriterion("EXTFLD1 in", values, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1NotIn(List<String> values) {
            addCriterion("EXTFLD1 not in", values, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1Between(String value1, String value2) {
            addCriterion("EXTFLD1 between", value1, value2, "extfld1");
            return (Criteria) this;
        }

        public Criteria andExtfld1NotBetween(String value1, String value2) {
            addCriterion("EXTFLD1 not between", value1, value2, "extfld1");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BANKINFO
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}