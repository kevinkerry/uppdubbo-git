package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PaytypExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public PaytypExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	protected PaytypExample(PaytypExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PAYTYP
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andPaytypcdIsNull() {
			addCriterion("PAYTYPCD is null");
			return (Criteria) this;
		}

		public Criteria andPaytypcdIsNotNull() {
			addCriterion("PAYTYPCD is not null");
			return (Criteria) this;
		}

		public Criteria andPaytypcdEqualTo(String value) {
			addCriterion("PAYTYPCD =", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdNotEqualTo(String value) {
			addCriterion("PAYTYPCD <>", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdGreaterThan(String value) {
			addCriterion("PAYTYPCD >", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdGreaterThanOrEqualTo(String value) {
			addCriterion("PAYTYPCD >=", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdLessThan(String value) {
			addCriterion("PAYTYPCD <", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdLessThanOrEqualTo(String value) {
			addCriterion("PAYTYPCD <=", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdLike(String value) {
			addCriterion("PAYTYPCD like", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdNotLike(String value) {
			addCriterion("PAYTYPCD not like", value, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdIn(List<String> values) {
			addCriterion("PAYTYPCD in", values, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdNotIn(List<String> values) {
			addCriterion("PAYTYPCD not in", values, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdBetween(String value1, String value2) {
			addCriterion("PAYTYPCD between", value1, value2, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andPaytypcdNotBetween(String value1, String value2) {
			addCriterion("PAYTYPCD not between", value1, value2, "paytypcd");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrIsNull() {
			addCriterion("DEPARTMENTNBR is null");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrIsNotNull() {
			addCriterion("DEPARTMENTNBR is not null");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrEqualTo(String value) {
			addCriterion("DEPARTMENTNBR =", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrNotEqualTo(String value) {
			addCriterion("DEPARTMENTNBR <>", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrGreaterThan(String value) {
			addCriterion("DEPARTMENTNBR >", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrGreaterThanOrEqualTo(String value) {
			addCriterion("DEPARTMENTNBR >=", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrLessThan(String value) {
			addCriterion("DEPARTMENTNBR <", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrLessThanOrEqualTo(String value) {
			addCriterion("DEPARTMENTNBR <=", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrLike(String value) {
			addCriterion("DEPARTMENTNBR like", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrNotLike(String value) {
			addCriterion("DEPARTMENTNBR not like", value, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrIn(List<String> values) {
			addCriterion("DEPARTMENTNBR in", values, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrNotIn(List<String> values) {
			addCriterion("DEPARTMENTNBR not in", values, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrBetween(String value1, String value2) {
			addCriterion("DEPARTMENTNBR between", value1, value2, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andDepartmentnbrNotBetween(String value1, String value2) {
			addCriterion("DEPARTMENTNBR not between", value1, value2, "departmentnbr");
			return (Criteria) this;
		}

		public Criteria andPaytypdescIsNull() {
			addCriterion("PAYTYPDESC is null");
			return (Criteria) this;
		}

		public Criteria andPaytypdescIsNotNull() {
			addCriterion("PAYTYPDESC is not null");
			return (Criteria) this;
		}

		public Criteria andPaytypdescEqualTo(String value) {
			addCriterion("PAYTYPDESC =", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescNotEqualTo(String value) {
			addCriterion("PAYTYPDESC <>", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescGreaterThan(String value) {
			addCriterion("PAYTYPDESC >", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescGreaterThanOrEqualTo(String value) {
			addCriterion("PAYTYPDESC >=", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescLessThan(String value) {
			addCriterion("PAYTYPDESC <", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescLessThanOrEqualTo(String value) {
			addCriterion("PAYTYPDESC <=", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescLike(String value) {
			addCriterion("PAYTYPDESC like", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescNotLike(String value) {
			addCriterion("PAYTYPDESC not like", value, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescIn(List<String> values) {
			addCriterion("PAYTYPDESC in", values, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescNotIn(List<String> values) {
			addCriterion("PAYTYPDESC not in", values, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescBetween(String value1, String value2) {
			addCriterion("PAYTYPDESC between", value1, value2, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andPaytypdescNotBetween(String value1, String value2) {
			addCriterion("PAYTYPDESC not between", value1, value2, "paytypdesc");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIsNull() {
			addCriterion("DATELASTMAINT is null");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIsNotNull() {
			addCriterion("DATELASTMAINT is not null");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintEqualTo(Date value) {
			addCriterion("DATELASTMAINT =", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotEqualTo(Date value) {
			addCriterion("DATELASTMAINT <>", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintGreaterThan(Date value) {
			addCriterion("DATELASTMAINT >", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
			addCriterion("DATELASTMAINT >=", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintLessThan(Date value) {
			addCriterion("DATELASTMAINT <", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
			addCriterion("DATELASTMAINT <=", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIn(List<Date> values) {
			addCriterion("DATELASTMAINT in", values, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotIn(List<Date> values) {
			addCriterion("DATELASTMAINT not in", values, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintBetween(Date value1, Date value2) {
			addCriterion("DATELASTMAINT between", value1, value2, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
			addCriterion("DATELASTMAINT not between", value1, value2, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andAcctypcdIsNull() {
			addCriterion("ACCTYPCD is null");
			return (Criteria) this;
		}

		public Criteria andAcctypcdIsNotNull() {
			addCriterion("ACCTYPCD is not null");
			return (Criteria) this;
		}

		public Criteria andAcctypcdEqualTo(String value) {
			addCriterion("ACCTYPCD =", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdNotEqualTo(String value) {
			addCriterion("ACCTYPCD <>", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdGreaterThan(String value) {
			addCriterion("ACCTYPCD >", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdGreaterThanOrEqualTo(String value) {
			addCriterion("ACCTYPCD >=", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdLessThan(String value) {
			addCriterion("ACCTYPCD <", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdLessThanOrEqualTo(String value) {
			addCriterion("ACCTYPCD <=", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdLike(String value) {
			addCriterion("ACCTYPCD like", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdNotLike(String value) {
			addCriterion("ACCTYPCD not like", value, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdIn(List<String> values) {
			addCriterion("ACCTYPCD in", values, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdNotIn(List<String> values) {
			addCriterion("ACCTYPCD not in", values, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdBetween(String value1, String value2) {
			addCriterion("ACCTYPCD between", value1, value2, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctypcdNotBetween(String value1, String value2) {
			addCriterion("ACCTYPCD not between", value1, value2, "acctypcd");
			return (Criteria) this;
		}

		public Criteria andAcctkindIsNull() {
			addCriterion("ACCTKIND is null");
			return (Criteria) this;
		}

		public Criteria andAcctkindIsNotNull() {
			addCriterion("ACCTKIND is not null");
			return (Criteria) this;
		}

		public Criteria andAcctkindEqualTo(String value) {
			addCriterion("ACCTKIND =", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindNotEqualTo(String value) {
			addCriterion("ACCTKIND <>", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindGreaterThan(String value) {
			addCriterion("ACCTKIND >", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindGreaterThanOrEqualTo(String value) {
			addCriterion("ACCTKIND >=", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindLessThan(String value) {
			addCriterion("ACCTKIND <", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindLessThanOrEqualTo(String value) {
			addCriterion("ACCTKIND <=", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindLike(String value) {
			addCriterion("ACCTKIND like", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindNotLike(String value) {
			addCriterion("ACCTKIND not like", value, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindIn(List<String> values) {
			addCriterion("ACCTKIND in", values, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindNotIn(List<String> values) {
			addCriterion("ACCTKIND not in", values, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindBetween(String value1, String value2) {
			addCriterion("ACCTKIND between", value1, value2, "acctkind");
			return (Criteria) this;
		}

		public Criteria andAcctkindNotBetween(String value1, String value2) {
			addCriterion("ACCTKIND not between", value1, value2, "acctkind");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("CREATETIME is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("CREATETIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(Date value) {
			addCriterion("CREATETIME =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(Date value) {
			addCriterion("CREATETIME <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(Date value) {
			addCriterion("CREATETIME >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CREATETIME >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(Date value) {
			addCriterion("CREATETIME <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
			addCriterion("CREATETIME <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<Date> values) {
			addCriterion("CREATETIME in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<Date> values) {
			addCriterion("CREATETIME not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(Date value1, Date value2) {
			addCriterion("CREATETIME between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
			addCriterion("CREATETIME not between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andStarttimeIsNull() {
			addCriterion("STARTTIME is null");
			return (Criteria) this;
		}

		public Criteria andStarttimeIsNotNull() {
			addCriterion("STARTTIME is not null");
			return (Criteria) this;
		}

		public Criteria andStarttimeEqualTo(Date value) {
			addCriterion("STARTTIME =", value, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeNotEqualTo(Date value) {
			addCriterion("STARTTIME <>", value, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeGreaterThan(Date value) {
			addCriterion("STARTTIME >", value, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeGreaterThanOrEqualTo(Date value) {
			addCriterion("STARTTIME >=", value, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeLessThan(Date value) {
			addCriterion("STARTTIME <", value, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeLessThanOrEqualTo(Date value) {
			addCriterion("STARTTIME <=", value, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeIn(List<Date> values) {
			addCriterion("STARTTIME in", values, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeNotIn(List<Date> values) {
			addCriterion("STARTTIME not in", values, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeBetween(Date value1, Date value2) {
			addCriterion("STARTTIME between", value1, value2, "starttime");
			return (Criteria) this;
		}

		public Criteria andStarttimeNotBetween(Date value1, Date value2) {
			addCriterion("STARTTIME not between", value1, value2, "starttime");
			return (Criteria) this;
		}

		public Criteria andEndtimeIsNull() {
			addCriterion("ENDTIME is null");
			return (Criteria) this;
		}

		public Criteria andEndtimeIsNotNull() {
			addCriterion("ENDTIME is not null");
			return (Criteria) this;
		}

		public Criteria andEndtimeEqualTo(Date value) {
			addCriterion("ENDTIME =", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeNotEqualTo(Date value) {
			addCriterion("ENDTIME <>", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeGreaterThan(Date value) {
			addCriterion("ENDTIME >", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("ENDTIME >=", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeLessThan(Date value) {
			addCriterion("ENDTIME <", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeLessThanOrEqualTo(Date value) {
			addCriterion("ENDTIME <=", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeIn(List<Date> values) {
			addCriterion("ENDTIME in", values, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeNotIn(List<Date> values) {
			addCriterion("ENDTIME not in", values, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeBetween(Date value1, Date value2) {
			addCriterion("ENDTIME between", value1, value2, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeNotBetween(Date value1, Date value2) {
			addCriterion("ENDTIME not between", value1, value2, "endtime");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("STATUS =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("STATUS <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("STATUS >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("STATUS >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("STATUS <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("STATUS <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("STATUS like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("STATUS not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("STATUS in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("STATUS not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PAYTYP
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}