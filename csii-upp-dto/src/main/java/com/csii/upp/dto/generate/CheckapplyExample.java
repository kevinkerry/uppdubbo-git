package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class CheckapplyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public CheckapplyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    protected CheckapplyExample(CheckapplyExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCheckapplynbrIsNull() {
            addCriterion("CHECKAPPLYNBR is null");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrIsNotNull() {
            addCriterion("CHECKAPPLYNBR is not null");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrEqualTo(String value) {
            addCriterion("CHECKAPPLYNBR =", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrNotEqualTo(String value) {
            addCriterion("CHECKAPPLYNBR <>", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrGreaterThan(String value) {
            addCriterion("CHECKAPPLYNBR >", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrGreaterThanOrEqualTo(String value) {
            addCriterion("CHECKAPPLYNBR >=", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrLessThan(String value) {
            addCriterion("CHECKAPPLYNBR <", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrLessThanOrEqualTo(String value) {
            addCriterion("CHECKAPPLYNBR <=", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrLike(String value) {
            addCriterion("CHECKAPPLYNBR like", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrNotLike(String value) {
            addCriterion("CHECKAPPLYNBR not like", value, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrIn(List<String> values) {
            addCriterion("CHECKAPPLYNBR in", values, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrNotIn(List<String> values) {
            addCriterion("CHECKAPPLYNBR not in", values, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrBetween(String value1, String value2) {
            addCriterion("CHECKAPPLYNBR between", value1, value2, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andCheckapplynbrNotBetween(String value1, String value2) {
            addCriterion("CHECKAPPLYNBR not between", value1, value2, "checkapplynbr");
            return (Criteria) this;
        }

        public Criteria andFilenameIsNull() {
            addCriterion("FILENAME is null");
            return (Criteria) this;
        }

        public Criteria andFilenameIsNotNull() {
            addCriterion("FILENAME is not null");
            return (Criteria) this;
        }

        public Criteria andFilenameEqualTo(String value) {
            addCriterion("FILENAME =", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotEqualTo(String value) {
            addCriterion("FILENAME <>", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameGreaterThan(String value) {
            addCriterion("FILENAME >", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameGreaterThanOrEqualTo(String value) {
            addCriterion("FILENAME >=", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameLessThan(String value) {
            addCriterion("FILENAME <", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameLessThanOrEqualTo(String value) {
            addCriterion("FILENAME <=", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameLike(String value) {
            addCriterion("FILENAME like", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotLike(String value) {
            addCriterion("FILENAME not like", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameIn(List<String> values) {
            addCriterion("FILENAME in", values, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotIn(List<String> values) {
            addCriterion("FILENAME not in", values, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameBetween(String value1, String value2) {
            addCriterion("FILENAME between", value1, value2, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotBetween(String value1, String value2) {
            addCriterion("FILENAME not between", value1, value2, "filename");
            return (Criteria) this;
        }

        public Criteria andCheckdateIsNull() {
            addCriterion("CHECKDATE is null");
            return (Criteria) this;
        }

        public Criteria andCheckdateIsNotNull() {
            addCriterion("CHECKDATE is not null");
            return (Criteria) this;
        }

        public Criteria andCheckdateEqualTo(Date value) {
            addCriterionForJDBCDate("CHECKDATE =", value, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CHECKDATE <>", value, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateGreaterThan(Date value) {
            addCriterionForJDBCDate("CHECKDATE >", value, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CHECKDATE >=", value, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateLessThan(Date value) {
            addCriterionForJDBCDate("CHECKDATE <", value, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CHECKDATE <=", value, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateIn(List<Date> values) {
            addCriterionForJDBCDate("CHECKDATE in", values, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("CHECKDATE not in", values, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CHECKDATE between", value1, value2, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CHECKDATE not between", value1, value2, "checkdate");
            return (Criteria) this;
        }

        public Criteria andCheckflagIsNull() {
            addCriterion("CHECKFLAG is null");
            return (Criteria) this;
        }

        public Criteria andCheckflagIsNotNull() {
            addCriterion("CHECKFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andCheckflagEqualTo(String value) {
            addCriterion("CHECKFLAG =", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagNotEqualTo(String value) {
            addCriterion("CHECKFLAG <>", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagGreaterThan(String value) {
            addCriterion("CHECKFLAG >", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagGreaterThanOrEqualTo(String value) {
            addCriterion("CHECKFLAG >=", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagLessThan(String value) {
            addCriterion("CHECKFLAG <", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagLessThanOrEqualTo(String value) {
            addCriterion("CHECKFLAG <=", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagLike(String value) {
            addCriterion("CHECKFLAG like", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagNotLike(String value) {
            addCriterion("CHECKFLAG not like", value, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagIn(List<String> values) {
            addCriterion("CHECKFLAG in", values, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagNotIn(List<String> values) {
            addCriterion("CHECKFLAG not in", values, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagBetween(String value1, String value2) {
            addCriterion("CHECKFLAG between", value1, value2, "checkflag");
            return (Criteria) this;
        }

        public Criteria andCheckflagNotBetween(String value1, String value2) {
            addCriterion("CHECKFLAG not between", value1, value2, "checkflag");
            return (Criteria) this;
        }

        public Criteria andDealcodeIsNull() {
            addCriterion("DEALCODE is null");
            return (Criteria) this;
        }

        public Criteria andDealcodeIsNotNull() {
            addCriterion("DEALCODE is not null");
            return (Criteria) this;
        }

        public Criteria andDealcodeEqualTo(String value) {
            addCriterion("DEALCODE =", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeNotEqualTo(String value) {
            addCriterion("DEALCODE <>", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeGreaterThan(String value) {
            addCriterion("DEALCODE >", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeGreaterThanOrEqualTo(String value) {
            addCriterion("DEALCODE >=", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeLessThan(String value) {
            addCriterion("DEALCODE <", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeLessThanOrEqualTo(String value) {
            addCriterion("DEALCODE <=", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeLike(String value) {
            addCriterion("DEALCODE like", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeNotLike(String value) {
            addCriterion("DEALCODE not like", value, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeIn(List<String> values) {
            addCriterion("DEALCODE in", values, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeNotIn(List<String> values) {
            addCriterion("DEALCODE not in", values, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeBetween(String value1, String value2) {
            addCriterion("DEALCODE between", value1, value2, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealcodeNotBetween(String value1, String value2) {
            addCriterion("DEALCODE not between", value1, value2, "dealcode");
            return (Criteria) this;
        }

        public Criteria andDealmsgIsNull() {
            addCriterion("DEALMSG is null");
            return (Criteria) this;
        }

        public Criteria andDealmsgIsNotNull() {
            addCriterion("DEALMSG is not null");
            return (Criteria) this;
        }

        public Criteria andDealmsgEqualTo(String value) {
            addCriterion("DEALMSG =", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgNotEqualTo(String value) {
            addCriterion("DEALMSG <>", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgGreaterThan(String value) {
            addCriterion("DEALMSG >", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgGreaterThanOrEqualTo(String value) {
            addCriterion("DEALMSG >=", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgLessThan(String value) {
            addCriterion("DEALMSG <", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgLessThanOrEqualTo(String value) {
            addCriterion("DEALMSG <=", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgLike(String value) {
            addCriterion("DEALMSG like", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgNotLike(String value) {
            addCriterion("DEALMSG not like", value, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgIn(List<String> values) {
            addCriterion("DEALMSG in", values, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgNotIn(List<String> values) {
            addCriterion("DEALMSG not in", values, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgBetween(String value1, String value2) {
            addCriterion("DEALMSG between", value1, value2, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andDealmsgNotBetween(String value1, String value2) {
            addCriterion("DEALMSG not between", value1, value2, "dealmsg");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeIsNull() {
            addCriterion("FUNDCHANNELCODE is null");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeIsNotNull() {
            addCriterion("FUNDCHANNELCODE is not null");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeEqualTo(String value) {
            addCriterion("FUNDCHANNELCODE =", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeNotEqualTo(String value) {
            addCriterion("FUNDCHANNELCODE <>", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeGreaterThan(String value) {
            addCriterion("FUNDCHANNELCODE >", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeGreaterThanOrEqualTo(String value) {
            addCriterion("FUNDCHANNELCODE >=", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeLessThan(String value) {
            addCriterion("FUNDCHANNELCODE <", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeLessThanOrEqualTo(String value) {
            addCriterion("FUNDCHANNELCODE <=", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeLike(String value) {
            addCriterion("FUNDCHANNELCODE like", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeNotLike(String value) {
            addCriterion("FUNDCHANNELCODE not like", value, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeIn(List<String> values) {
            addCriterion("FUNDCHANNELCODE in", values, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeNotIn(List<String> values) {
            addCriterion("FUNDCHANNELCODE not in", values, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeBetween(String value1, String value2) {
            addCriterion("FUNDCHANNELCODE between", value1, value2, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andFundchannelcodeNotBetween(String value1, String value2) {
            addCriterion("FUNDCHANNELCODE not between", value1, value2, "fundchannelcode");
            return (Criteria) this;
        }

        public Criteria andWorkroundIsNull() {
            addCriterion("WORKROUND is null");
            return (Criteria) this;
        }

        public Criteria andWorkroundIsNotNull() {
            addCriterion("WORKROUND is not null");
            return (Criteria) this;
        }

        public Criteria andWorkroundEqualTo(Long value) {
            addCriterion("WORKROUND =", value, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundNotEqualTo(Long value) {
            addCriterion("WORKROUND <>", value, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundGreaterThan(Long value) {
            addCriterion("WORKROUND >", value, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundGreaterThanOrEqualTo(Long value) {
            addCriterion("WORKROUND >=", value, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundLessThan(Long value) {
            addCriterion("WORKROUND <", value, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundLessThanOrEqualTo(Long value) {
            addCriterion("WORKROUND <=", value, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundIn(List<Long> values) {
            addCriterion("WORKROUND in", values, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundNotIn(List<Long> values) {
            addCriterion("WORKROUND not in", values, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundBetween(Long value1, Long value2) {
            addCriterion("WORKROUND between", value1, value2, "workround");
            return (Criteria) this;
        }

        public Criteria andWorkroundNotBetween(Long value1, Long value2) {
            addCriterion("WORKROUND not between", value1, value2, "workround");
            return (Criteria) this;
        }

        public Criteria andTotalnumIsNull() {
            addCriterion("TOTALNUM is null");
            return (Criteria) this;
        }

        public Criteria andTotalnumIsNotNull() {
            addCriterion("TOTALNUM is not null");
            return (Criteria) this;
        }

        public Criteria andTotalnumEqualTo(Long value) {
            addCriterion("TOTALNUM =", value, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumNotEqualTo(Long value) {
            addCriterion("TOTALNUM <>", value, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumGreaterThan(Long value) {
            addCriterion("TOTALNUM >", value, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumGreaterThanOrEqualTo(Long value) {
            addCriterion("TOTALNUM >=", value, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumLessThan(Long value) {
            addCriterion("TOTALNUM <", value, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumLessThanOrEqualTo(Long value) {
            addCriterion("TOTALNUM <=", value, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumIn(List<Long> values) {
            addCriterion("TOTALNUM in", values, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumNotIn(List<Long> values) {
            addCriterion("TOTALNUM not in", values, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumBetween(Long value1, Long value2) {
            addCriterion("TOTALNUM between", value1, value2, "totalnum");
            return (Criteria) this;
        }

        public Criteria andTotalnumNotBetween(Long value1, Long value2) {
            addCriterion("TOTALNUM not between", value1, value2, "totalnum");
            return (Criteria) this;
        }

        public Criteria andSendnumIsNull() {
            addCriterion("SENDNUM is null");
            return (Criteria) this;
        }

        public Criteria andSendnumIsNotNull() {
            addCriterion("SENDNUM is not null");
            return (Criteria) this;
        }

        public Criteria andSendnumEqualTo(Long value) {
            addCriterion("SENDNUM =", value, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumNotEqualTo(Long value) {
            addCriterion("SENDNUM <>", value, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumGreaterThan(Long value) {
            addCriterion("SENDNUM >", value, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumGreaterThanOrEqualTo(Long value) {
            addCriterion("SENDNUM >=", value, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumLessThan(Long value) {
            addCriterion("SENDNUM <", value, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumLessThanOrEqualTo(Long value) {
            addCriterion("SENDNUM <=", value, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumIn(List<Long> values) {
            addCriterion("SENDNUM in", values, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumNotIn(List<Long> values) {
            addCriterion("SENDNUM not in", values, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumBetween(Long value1, Long value2) {
            addCriterion("SENDNUM between", value1, value2, "sendnum");
            return (Criteria) this;
        }

        public Criteria andSendnumNotBetween(Long value1, Long value2) {
            addCriterion("SENDNUM not between", value1, value2, "sendnum");
            return (Criteria) this;
        }

        public Criteria andReceivenumIsNull() {
            addCriterion("RECEIVENUM is null");
            return (Criteria) this;
        }

        public Criteria andReceivenumIsNotNull() {
            addCriterion("RECEIVENUM is not null");
            return (Criteria) this;
        }

        public Criteria andReceivenumEqualTo(Long value) {
            addCriterion("RECEIVENUM =", value, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumNotEqualTo(Long value) {
            addCriterion("RECEIVENUM <>", value, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumGreaterThan(Long value) {
            addCriterion("RECEIVENUM >", value, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumGreaterThanOrEqualTo(Long value) {
            addCriterion("RECEIVENUM >=", value, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumLessThan(Long value) {
            addCriterion("RECEIVENUM <", value, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumLessThanOrEqualTo(Long value) {
            addCriterion("RECEIVENUM <=", value, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumIn(List<Long> values) {
            addCriterion("RECEIVENUM in", values, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumNotIn(List<Long> values) {
            addCriterion("RECEIVENUM not in", values, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumBetween(Long value1, Long value2) {
            addCriterion("RECEIVENUM between", value1, value2, "receivenum");
            return (Criteria) this;
        }

        public Criteria andReceivenumNotBetween(Long value1, Long value2) {
            addCriterion("RECEIVENUM not between", value1, value2, "receivenum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHECKAPPLY
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}