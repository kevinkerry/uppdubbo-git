package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BankoptioncatExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public BankoptioncatExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	protected BankoptioncatExample(BankoptioncatExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table BANKOPTIONCAT
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andBankoptioncatcdIsNull() {
			addCriterion("BANKOPTIONCATCD is null");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdIsNotNull() {
			addCriterion("BANKOPTIONCATCD is not null");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdEqualTo(String value) {
			addCriterion("BANKOPTIONCATCD =", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdNotEqualTo(String value) {
			addCriterion("BANKOPTIONCATCD <>", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdGreaterThan(String value) {
			addCriterion("BANKOPTIONCATCD >", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdGreaterThanOrEqualTo(String value) {
			addCriterion("BANKOPTIONCATCD >=", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdLessThan(String value) {
			addCriterion("BANKOPTIONCATCD <", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdLessThanOrEqualTo(String value) {
			addCriterion("BANKOPTIONCATCD <=", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdLike(String value) {
			addCriterion("BANKOPTIONCATCD like", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdNotLike(String value) {
			addCriterion("BANKOPTIONCATCD not like", value, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdIn(List<String> values) {
			addCriterion("BANKOPTIONCATCD in", values, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdNotIn(List<String> values) {
			addCriterion("BANKOPTIONCATCD not in", values, "bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdBetween(String value1, String value2) {
			addCriterion("BANKOPTIONCATCD between", value1, value2,
					"bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatcdNotBetween(String value1,
				String value2) {
			addCriterion("BANKOPTIONCATCD not between", value1, value2,
					"bankoptioncatcd");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescIsNull() {
			addCriterion("BANKOPTIONCATDESC is null");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescIsNotNull() {
			addCriterion("BANKOPTIONCATDESC is not null");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescEqualTo(String value) {
			addCriterion("BANKOPTIONCATDESC =", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescNotEqualTo(String value) {
			addCriterion("BANKOPTIONCATDESC <>", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescGreaterThan(String value) {
			addCriterion("BANKOPTIONCATDESC >", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescGreaterThanOrEqualTo(String value) {
			addCriterion("BANKOPTIONCATDESC >=", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescLessThan(String value) {
			addCriterion("BANKOPTIONCATDESC <", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescLessThanOrEqualTo(String value) {
			addCriterion("BANKOPTIONCATDESC <=", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescLike(String value) {
			addCriterion("BANKOPTIONCATDESC like", value, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescNotLike(String value) {
			addCriterion("BANKOPTIONCATDESC not like", value,
					"bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescIn(List<String> values) {
			addCriterion("BANKOPTIONCATDESC in", values, "bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescNotIn(List<String> values) {
			addCriterion("BANKOPTIONCATDESC not in", values,
					"bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescBetween(String value1, String value2) {
			addCriterion("BANKOPTIONCATDESC between", value1, value2,
					"bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andBankoptioncatdescNotBetween(String value1,
				String value2) {
			addCriterion("BANKOPTIONCATDESC not between", value1, value2,
					"bankoptioncatdesc");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIsNull() {
			addCriterion("DATELASTMAINT is null");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIsNotNull() {
			addCriterion("DATELASTMAINT is not null");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintEqualTo(Date value) {
			addCriterion("DATELASTMAINT =", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotEqualTo(Date value) {
			addCriterion("DATELASTMAINT <>", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintGreaterThan(Date value) {
			addCriterion("DATELASTMAINT >", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
			addCriterion("DATELASTMAINT >=", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintLessThan(Date value) {
			addCriterion("DATELASTMAINT <", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
			addCriterion("DATELASTMAINT <=", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIn(List<Date> values) {
			addCriterion("DATELASTMAINT in", values, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotIn(List<Date> values) {
			addCriterion("DATELASTMAINT not in", values, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintBetween(Date value1, Date value2) {
			addCriterion("DATELASTMAINT between", value1, value2,
					"datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
			addCriterion("DATELASTMAINT not between", value1, value2,
					"datelastmaint");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BANKOPTIONCAT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}