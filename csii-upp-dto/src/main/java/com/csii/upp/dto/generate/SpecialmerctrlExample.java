package com.csii.upp.dto.generate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SpecialmerctrlExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public SpecialmerctrlExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected SpecialmerctrlExample(SpecialmerctrlExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andMernbrIsNull() {
            addCriterion("MERNBR is null");
            return (Criteria) this;
        }

        public Criteria andMernbrIsNotNull() {
            addCriterion("MERNBR is not null");
            return (Criteria) this;
        }

        public Criteria andMernbrEqualTo(String value) {
            addCriterion("MERNBR =", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotEqualTo(String value) {
            addCriterion("MERNBR <>", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrGreaterThan(String value) {
            addCriterion("MERNBR >", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrGreaterThanOrEqualTo(String value) {
            addCriterion("MERNBR >=", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrLessThan(String value) {
            addCriterion("MERNBR <", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrLessThanOrEqualTo(String value) {
            addCriterion("MERNBR <=", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrLike(String value) {
            addCriterion("MERNBR like", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotLike(String value) {
            addCriterion("MERNBR not like", value, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrIn(List<String> values) {
            addCriterion("MERNBR in", values, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotIn(List<String> values) {
            addCriterion("MERNBR not in", values, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrBetween(String value1, String value2) {
            addCriterion("MERNBR between", value1, value2, "mernbr");
            return (Criteria) this;
        }

        public Criteria andMernbrNotBetween(String value1, String value2) {
            addCriterion("MERNBR not between", value1, value2, "mernbr");
            return (Criteria) this;
        }

        public Criteria andUserperlimitIsNull() {
            addCriterion("USERPERLIMIT is null");
            return (Criteria) this;
        }

        public Criteria andUserperlimitIsNotNull() {
            addCriterion("USERPERLIMIT is not null");
            return (Criteria) this;
        }

        public Criteria andUserperlimitEqualTo(BigDecimal value) {
            addCriterion("USERPERLIMIT =", value, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitNotEqualTo(BigDecimal value) {
            addCriterion("USERPERLIMIT <>", value, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitGreaterThan(BigDecimal value) {
            addCriterion("USERPERLIMIT >", value, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USERPERLIMIT >=", value, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitLessThan(BigDecimal value) {
            addCriterion("USERPERLIMIT <", value, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USERPERLIMIT <=", value, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitIn(List<BigDecimal> values) {
            addCriterion("USERPERLIMIT in", values, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitNotIn(List<BigDecimal> values) {
            addCriterion("USERPERLIMIT not in", values, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERPERLIMIT between", value1, value2, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserperlimitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERPERLIMIT not between", value1, value2, "userperlimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitIsNull() {
            addCriterion("USERDAYLIMIT is null");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitIsNotNull() {
            addCriterion("USERDAYLIMIT is not null");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitEqualTo(BigDecimal value) {
            addCriterion("USERDAYLIMIT =", value, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitNotEqualTo(BigDecimal value) {
            addCriterion("USERDAYLIMIT <>", value, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitGreaterThan(BigDecimal value) {
            addCriterion("USERDAYLIMIT >", value, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USERDAYLIMIT >=", value, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitLessThan(BigDecimal value) {
            addCriterion("USERDAYLIMIT <", value, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USERDAYLIMIT <=", value, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitIn(List<BigDecimal> values) {
            addCriterion("USERDAYLIMIT in", values, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitNotIn(List<BigDecimal> values) {
            addCriterion("USERDAYLIMIT not in", values, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERDAYLIMIT between", value1, value2, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andUserdaylimitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERDAYLIMIT not between", value1, value2, "userdaylimit");
            return (Criteria) this;
        }

        public Criteria andLimitflagIsNull() {
            addCriterion("LIMITFLAG is null");
            return (Criteria) this;
        }

        public Criteria andLimitflagIsNotNull() {
            addCriterion("LIMITFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andLimitflagEqualTo(String value) {
            addCriterion("LIMITFLAG =", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagNotEqualTo(String value) {
            addCriterion("LIMITFLAG <>", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagGreaterThan(String value) {
            addCriterion("LIMITFLAG >", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagGreaterThanOrEqualTo(String value) {
            addCriterion("LIMITFLAG >=", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagLessThan(String value) {
            addCriterion("LIMITFLAG <", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagLessThanOrEqualTo(String value) {
            addCriterion("LIMITFLAG <=", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagLike(String value) {
            addCriterion("LIMITFLAG like", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagNotLike(String value) {
            addCriterion("LIMITFLAG not like", value, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagIn(List<String> values) {
            addCriterion("LIMITFLAG in", values, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagNotIn(List<String> values) {
            addCriterion("LIMITFLAG not in", values, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagBetween(String value1, String value2) {
            addCriterion("LIMITFLAG between", value1, value2, "limitflag");
            return (Criteria) this;
        }

        public Criteria andLimitflagNotBetween(String value1, String value2) {
            addCriterion("LIMITFLAG not between", value1, value2, "limitflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}