package com.csii.upp.dto.generate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class FeeparamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public FeeparamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    protected FeeparamExample(FeeparamExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FEEPARAM
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andFeenbrIsNull() {
            addCriterion("FEENBR is null");
            return (Criteria) this;
        }

        public Criteria andFeenbrIsNotNull() {
            addCriterion("FEENBR is not null");
            return (Criteria) this;
        }

        public Criteria andFeenbrEqualTo(String value) {
            addCriterion("FEENBR =", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotEqualTo(String value) {
            addCriterion("FEENBR <>", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrGreaterThan(String value) {
            addCriterion("FEENBR >", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrGreaterThanOrEqualTo(String value) {
            addCriterion("FEENBR >=", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrLessThan(String value) {
            addCriterion("FEENBR <", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrLessThanOrEqualTo(String value) {
            addCriterion("FEENBR <=", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrLike(String value) {
            addCriterion("FEENBR like", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotLike(String value) {
            addCriterion("FEENBR not like", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrIn(List<String> values) {
            addCriterion("FEENBR in", values, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotIn(List<String> values) {
            addCriterion("FEENBR not in", values, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrBetween(String value1, String value2) {
            addCriterion("FEENBR between", value1, value2, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotBetween(String value1, String value2) {
            addCriterion("FEENBR not between", value1, value2, "feenbr");
            return (Criteria) this;
        }

        public Criteria andTranstypcdIsNull() {
            addCriterion("TRANSTYPCD is null");
            return (Criteria) this;
        }

        public Criteria andTranstypcdIsNotNull() {
            addCriterion("TRANSTYPCD is not null");
            return (Criteria) this;
        }

        public Criteria andTranstypcdEqualTo(String value) {
            addCriterion("TRANSTYPCD =", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdNotEqualTo(String value) {
            addCriterion("TRANSTYPCD <>", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdGreaterThan(String value) {
            addCriterion("TRANSTYPCD >", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdGreaterThanOrEqualTo(String value) {
            addCriterion("TRANSTYPCD >=", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdLessThan(String value) {
            addCriterion("TRANSTYPCD <", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdLessThanOrEqualTo(String value) {
            addCriterion("TRANSTYPCD <=", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdLike(String value) {
            addCriterion("TRANSTYPCD like", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdNotLike(String value) {
            addCriterion("TRANSTYPCD not like", value, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdIn(List<String> values) {
            addCriterion("TRANSTYPCD in", values, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdNotIn(List<String> values) {
            addCriterion("TRANSTYPCD not in", values, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdBetween(String value1, String value2) {
            addCriterion("TRANSTYPCD between", value1, value2, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andTranstypcdNotBetween(String value1, String value2) {
            addCriterion("TRANSTYPCD not between", value1, value2, "transtypcd");
            return (Criteria) this;
        }

        public Criteria andFloatflagIsNull() {
            addCriterion("FLOATFLAG is null");
            return (Criteria) this;
        }

        public Criteria andFloatflagIsNotNull() {
            addCriterion("FLOATFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andFloatflagEqualTo(String value) {
            addCriterion("FLOATFLAG =", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagNotEqualTo(String value) {
            addCriterion("FLOATFLAG <>", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagGreaterThan(String value) {
            addCriterion("FLOATFLAG >", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagGreaterThanOrEqualTo(String value) {
            addCriterion("FLOATFLAG >=", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagLessThan(String value) {
            addCriterion("FLOATFLAG <", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagLessThanOrEqualTo(String value) {
            addCriterion("FLOATFLAG <=", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagLike(String value) {
            addCriterion("FLOATFLAG like", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagNotLike(String value) {
            addCriterion("FLOATFLAG not like", value, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagIn(List<String> values) {
            addCriterion("FLOATFLAG in", values, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagNotIn(List<String> values) {
            addCriterion("FLOATFLAG not in", values, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagBetween(String value1, String value2) {
            addCriterion("FLOATFLAG between", value1, value2, "floatflag");
            return (Criteria) this;
        }

        public Criteria andFloatflagNotBetween(String value1, String value2) {
            addCriterion("FLOATFLAG not between", value1, value2, "floatflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagIsNull() {
            addCriterion("DEDUCTFLAG is null");
            return (Criteria) this;
        }

        public Criteria andDeductflagIsNotNull() {
            addCriterion("DEDUCTFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andDeductflagEqualTo(String value) {
            addCriterion("DEDUCTFLAG =", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagNotEqualTo(String value) {
            addCriterion("DEDUCTFLAG <>", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagGreaterThan(String value) {
            addCriterion("DEDUCTFLAG >", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagGreaterThanOrEqualTo(String value) {
            addCriterion("DEDUCTFLAG >=", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagLessThan(String value) {
            addCriterion("DEDUCTFLAG <", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagLessThanOrEqualTo(String value) {
            addCriterion("DEDUCTFLAG <=", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagLike(String value) {
            addCriterion("DEDUCTFLAG like", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagNotLike(String value) {
            addCriterion("DEDUCTFLAG not like", value, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagIn(List<String> values) {
            addCriterion("DEDUCTFLAG in", values, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagNotIn(List<String> values) {
            addCriterion("DEDUCTFLAG not in", values, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagBetween(String value1, String value2) {
            addCriterion("DEDUCTFLAG between", value1, value2, "deductflag");
            return (Criteria) this;
        }

        public Criteria andDeductflagNotBetween(String value1, String value2) {
            addCriterion("DEDUCTFLAG not between", value1, value2, "deductflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagIsNull() {
            addCriterion("BOUNDFLAG is null");
            return (Criteria) this;
        }

        public Criteria andBoundflagIsNotNull() {
            addCriterion("BOUNDFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andBoundflagEqualTo(String value) {
            addCriterion("BOUNDFLAG =", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagNotEqualTo(String value) {
            addCriterion("BOUNDFLAG <>", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagGreaterThan(String value) {
            addCriterion("BOUNDFLAG >", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagGreaterThanOrEqualTo(String value) {
            addCriterion("BOUNDFLAG >=", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagLessThan(String value) {
            addCriterion("BOUNDFLAG <", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagLessThanOrEqualTo(String value) {
            addCriterion("BOUNDFLAG <=", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagLike(String value) {
            addCriterion("BOUNDFLAG like", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagNotLike(String value) {
            addCriterion("BOUNDFLAG not like", value, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagIn(List<String> values) {
            addCriterion("BOUNDFLAG in", values, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagNotIn(List<String> values) {
            addCriterion("BOUNDFLAG not in", values, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagBetween(String value1, String value2) {
            addCriterion("BOUNDFLAG between", value1, value2, "boundflag");
            return (Criteria) this;
        }

        public Criteria andBoundflagNotBetween(String value1, String value2) {
            addCriterion("BOUNDFLAG not between", value1, value2, "boundflag");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalIsNull() {
            addCriterion("UPPERLIMITVAL is null");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalIsNotNull() {
            addCriterion("UPPERLIMITVAL is not null");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalEqualTo(BigDecimal value) {
            addCriterion("UPPERLIMITVAL =", value, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalNotEqualTo(BigDecimal value) {
            addCriterion("UPPERLIMITVAL <>", value, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalGreaterThan(BigDecimal value) {
            addCriterion("UPPERLIMITVAL >", value, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("UPPERLIMITVAL >=", value, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalLessThan(BigDecimal value) {
            addCriterion("UPPERLIMITVAL <", value, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("UPPERLIMITVAL <=", value, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalIn(List<BigDecimal> values) {
            addCriterion("UPPERLIMITVAL in", values, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalNotIn(List<BigDecimal> values) {
            addCriterion("UPPERLIMITVAL not in", values, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("UPPERLIMITVAL between", value1, value2, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andUpperlimitvalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("UPPERLIMITVAL not between", value1, value2, "upperlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalIsNull() {
            addCriterion("LOWERLIMITVAL is null");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalIsNotNull() {
            addCriterion("LOWERLIMITVAL is not null");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalEqualTo(BigDecimal value) {
            addCriterion("LOWERLIMITVAL =", value, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalNotEqualTo(BigDecimal value) {
            addCriterion("LOWERLIMITVAL <>", value, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalGreaterThan(BigDecimal value) {
            addCriterion("LOWERLIMITVAL >", value, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LOWERLIMITVAL >=", value, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalLessThan(BigDecimal value) {
            addCriterion("LOWERLIMITVAL <", value, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LOWERLIMITVAL <=", value, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalIn(List<BigDecimal> values) {
            addCriterion("LOWERLIMITVAL in", values, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalNotIn(List<BigDecimal> values) {
            addCriterion("LOWERLIMITVAL not in", values, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LOWERLIMITVAL between", value1, value2, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andLowerlimitvalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LOWERLIMITVAL not between", value1, value2, "lowerlimitval");
            return (Criteria) this;
        }

        public Criteria andCalculatetypIsNull() {
            addCriterion("CALCULATETYP is null");
            return (Criteria) this;
        }

        public Criteria andCalculatetypIsNotNull() {
            addCriterion("CALCULATETYP is not null");
            return (Criteria) this;
        }

        public Criteria andCalculatetypEqualTo(String value) {
            addCriterion("CALCULATETYP =", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypNotEqualTo(String value) {
            addCriterion("CALCULATETYP <>", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypGreaterThan(String value) {
            addCriterion("CALCULATETYP >", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypGreaterThanOrEqualTo(String value) {
            addCriterion("CALCULATETYP >=", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypLessThan(String value) {
            addCriterion("CALCULATETYP <", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypLessThanOrEqualTo(String value) {
            addCriterion("CALCULATETYP <=", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypLike(String value) {
            addCriterion("CALCULATETYP like", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypNotLike(String value) {
            addCriterion("CALCULATETYP not like", value, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypIn(List<String> values) {
            addCriterion("CALCULATETYP in", values, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypNotIn(List<String> values) {
            addCriterion("CALCULATETYP not in", values, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypBetween(String value1, String value2) {
            addCriterion("CALCULATETYP between", value1, value2, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculatetypNotBetween(String value1, String value2) {
            addCriterion("CALCULATETYP not between", value1, value2, "calculatetyp");
            return (Criteria) this;
        }

        public Criteria andCalculateparamIsNull() {
            addCriterion("CALCULATEPARAM is null");
            return (Criteria) this;
        }

        public Criteria andCalculateparamIsNotNull() {
            addCriterion("CALCULATEPARAM is not null");
            return (Criteria) this;
        }

        public Criteria andCalculateparamEqualTo(String value) {
            addCriterion("CALCULATEPARAM =", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamNotEqualTo(String value) {
            addCriterion("CALCULATEPARAM <>", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamGreaterThan(String value) {
            addCriterion("CALCULATEPARAM >", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamGreaterThanOrEqualTo(String value) {
            addCriterion("CALCULATEPARAM >=", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamLessThan(String value) {
            addCriterion("CALCULATEPARAM <", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamLessThanOrEqualTo(String value) {
            addCriterion("CALCULATEPARAM <=", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamLike(String value) {
            addCriterion("CALCULATEPARAM like", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamNotLike(String value) {
            addCriterion("CALCULATEPARAM not like", value, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamIn(List<String> values) {
            addCriterion("CALCULATEPARAM in", values, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamNotIn(List<String> values) {
            addCriterion("CALCULATEPARAM not in", values, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamBetween(String value1, String value2) {
            addCriterion("CALCULATEPARAM between", value1, value2, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andCalculateparamNotBetween(String value1, String value2) {
            addCriterion("CALCULATEPARAM not between", value1, value2, "calculateparam");
            return (Criteria) this;
        }

        public Criteria andFloattypIsNull() {
            addCriterion("FLOATTYP is null");
            return (Criteria) this;
        }

        public Criteria andFloattypIsNotNull() {
            addCriterion("FLOATTYP is not null");
            return (Criteria) this;
        }

        public Criteria andFloattypEqualTo(String value) {
            addCriterion("FLOATTYP =", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypNotEqualTo(String value) {
            addCriterion("FLOATTYP <>", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypGreaterThan(String value) {
            addCriterion("FLOATTYP >", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypGreaterThanOrEqualTo(String value) {
            addCriterion("FLOATTYP >=", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypLessThan(String value) {
            addCriterion("FLOATTYP <", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypLessThanOrEqualTo(String value) {
            addCriterion("FLOATTYP <=", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypLike(String value) {
            addCriterion("FLOATTYP like", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypNotLike(String value) {
            addCriterion("FLOATTYP not like", value, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypIn(List<String> values) {
            addCriterion("FLOATTYP in", values, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypNotIn(List<String> values) {
            addCriterion("FLOATTYP not in", values, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypBetween(String value1, String value2) {
            addCriterion("FLOATTYP between", value1, value2, "floattyp");
            return (Criteria) this;
        }

        public Criteria andFloattypNotBetween(String value1, String value2) {
            addCriterion("FLOATTYP not between", value1, value2, "floattyp");
            return (Criteria) this;
        }

        public Criteria andProgressflagIsNull() {
            addCriterion("PROGRESSFLAG is null");
            return (Criteria) this;
        }

        public Criteria andProgressflagIsNotNull() {
            addCriterion("PROGRESSFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andProgressflagEqualTo(String value) {
            addCriterion("PROGRESSFLAG =", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagNotEqualTo(String value) {
            addCriterion("PROGRESSFLAG <>", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagGreaterThan(String value) {
            addCriterion("PROGRESSFLAG >", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagGreaterThanOrEqualTo(String value) {
            addCriterion("PROGRESSFLAG >=", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagLessThan(String value) {
            addCriterion("PROGRESSFLAG <", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagLessThanOrEqualTo(String value) {
            addCriterion("PROGRESSFLAG <=", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagLike(String value) {
            addCriterion("PROGRESSFLAG like", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagNotLike(String value) {
            addCriterion("PROGRESSFLAG not like", value, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagIn(List<String> values) {
            addCriterion("PROGRESSFLAG in", values, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagNotIn(List<String> values) {
            addCriterion("PROGRESSFLAG not in", values, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagBetween(String value1, String value2) {
            addCriterion("PROGRESSFLAG between", value1, value2, "progressflag");
            return (Criteria) this;
        }

        public Criteria andProgressflagNotBetween(String value1, String value2) {
            addCriterion("PROGRESSFLAG not between", value1, value2, "progressflag");
            return (Criteria) this;
        }

        public Criteria andContainflagIsNull() {
            addCriterion("CONTAINFLAG is null");
            return (Criteria) this;
        }

        public Criteria andContainflagIsNotNull() {
            addCriterion("CONTAINFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andContainflagEqualTo(String value) {
            addCriterion("CONTAINFLAG =", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagNotEqualTo(String value) {
            addCriterion("CONTAINFLAG <>", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagGreaterThan(String value) {
            addCriterion("CONTAINFLAG >", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagGreaterThanOrEqualTo(String value) {
            addCriterion("CONTAINFLAG >=", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagLessThan(String value) {
            addCriterion("CONTAINFLAG <", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagLessThanOrEqualTo(String value) {
            addCriterion("CONTAINFLAG <=", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagLike(String value) {
            addCriterion("CONTAINFLAG like", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagNotLike(String value) {
            addCriterion("CONTAINFLAG not like", value, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagIn(List<String> values) {
            addCriterion("CONTAINFLAG in", values, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagNotIn(List<String> values) {
            addCriterion("CONTAINFLAG not in", values, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagBetween(String value1, String value2) {
            addCriterion("CONTAINFLAG between", value1, value2, "containflag");
            return (Criteria) this;
        }

        public Criteria andContainflagNotBetween(String value1, String value2) {
            addCriterion("CONTAINFLAG not between", value1, value2, "containflag");
            return (Criteria) this;
        }

        public Criteria andStartparamIsNull() {
            addCriterion("STARTPARAM is null");
            return (Criteria) this;
        }

        public Criteria andStartparamIsNotNull() {
            addCriterion("STARTPARAM is not null");
            return (Criteria) this;
        }

        public Criteria andStartparamEqualTo(String value) {
            addCriterion("STARTPARAM =", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamNotEqualTo(String value) {
            addCriterion("STARTPARAM <>", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamGreaterThan(String value) {
            addCriterion("STARTPARAM >", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamGreaterThanOrEqualTo(String value) {
            addCriterion("STARTPARAM >=", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamLessThan(String value) {
            addCriterion("STARTPARAM <", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamLessThanOrEqualTo(String value) {
            addCriterion("STARTPARAM <=", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamLike(String value) {
            addCriterion("STARTPARAM like", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamNotLike(String value) {
            addCriterion("STARTPARAM not like", value, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamIn(List<String> values) {
            addCriterion("STARTPARAM in", values, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamNotIn(List<String> values) {
            addCriterion("STARTPARAM not in", values, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamBetween(String value1, String value2) {
            addCriterion("STARTPARAM between", value1, value2, "startparam");
            return (Criteria) this;
        }

        public Criteria andStartparamNotBetween(String value1, String value2) {
            addCriterion("STARTPARAM not between", value1, value2, "startparam");
            return (Criteria) this;
        }

        public Criteria andEndparamIsNull() {
            addCriterion("ENDPARAM is null");
            return (Criteria) this;
        }

        public Criteria andEndparamIsNotNull() {
            addCriterion("ENDPARAM is not null");
            return (Criteria) this;
        }

        public Criteria andEndparamEqualTo(String value) {
            addCriterion("ENDPARAM =", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamNotEqualTo(String value) {
            addCriterion("ENDPARAM <>", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamGreaterThan(String value) {
            addCriterion("ENDPARAM >", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamGreaterThanOrEqualTo(String value) {
            addCriterion("ENDPARAM >=", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamLessThan(String value) {
            addCriterion("ENDPARAM <", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamLessThanOrEqualTo(String value) {
            addCriterion("ENDPARAM <=", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamLike(String value) {
            addCriterion("ENDPARAM like", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamNotLike(String value) {
            addCriterion("ENDPARAM not like", value, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamIn(List<String> values) {
            addCriterion("ENDPARAM in", values, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamNotIn(List<String> values) {
            addCriterion("ENDPARAM not in", values, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamBetween(String value1, String value2) {
            addCriterion("ENDPARAM between", value1, value2, "endparam");
            return (Criteria) this;
        }

        public Criteria andEndparamNotBetween(String value1, String value2) {
            addCriterion("ENDPARAM not between", value1, value2, "endparam");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("MEMO is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("MEMO is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("MEMO =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("MEMO <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("MEMO >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("MEMO >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("MEMO <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("MEMO <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("MEMO like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("MEMO not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("MEMO in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("MEMO not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("MEMO between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("MEMO not between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNull() {
            addCriterion("DATELASTMAINT is null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNotNull() {
            addCriterion("DATELASTMAINT is not null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintEqualTo(Date value) {
            addCriterion("DATELASTMAINT =", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotEqualTo(Date value) {
            addCriterion("DATELASTMAINT <>", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThan(Date value) {
            addCriterion("DATELASTMAINT >", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT >=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThan(Date value) {
            addCriterion("DATELASTMAINT <", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT <=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIn(List<Date> values) {
            addCriterion("DATELASTMAINT in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotIn(List<Date> values) {
            addCriterion("DATELASTMAINT not in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT not between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andSeqnbrIsNull() {
            addCriterion("SEQNBR is null");
            return (Criteria) this;
        }

        public Criteria andSeqnbrIsNotNull() {
            addCriterion("SEQNBR is not null");
            return (Criteria) this;
        }

        public Criteria andSeqnbrEqualTo(String value) {
            addCriterion("SEQNBR =", value, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrNotEqualTo(String value) {
        	addCriterion("SEQNBR <>", value, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrGreaterThan(String value) {
        	addCriterion("SEQNBR >", value, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrGreaterThanOrEqualTo(String value) {
        	addCriterion("SEQNBR >=", value, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrLessThan(String value) {
        	addCriterion("SEQNBR <", value, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrLessThanOrEqualTo(String value) {
        	addCriterion("SEQNBR <=", value, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrIn(List<String> values) {
        	addCriterion("SEQNBR in", values, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrNotIn(List<String> values) {
        	addCriterion("SEQNBR not in", values, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrBetween(String value1, String value2) {
        	addCriterion("SEQNBR between", value1, value2, "seqnbr");
            return (Criteria) this;
        }

        public Criteria andSeqnbrNotBetween(String value1, String value2) {
        	addCriterion("SEQNBR not between", value1, value2, "seqnbr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FEEPARAM
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}