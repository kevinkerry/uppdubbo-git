package com.csii.upp.dto.generate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class CusttransctrlExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public CusttransctrlExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected CusttransctrlExample(CusttransctrlExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSignnbrIsNull() {
            addCriterion("SIGNNBR is null");
            return (Criteria) this;
        }

        public Criteria andSignnbrIsNotNull() {
            addCriterion("SIGNNBR is not null");
            return (Criteria) this;
        }

        public Criteria andSignnbrEqualTo(String value) {
            addCriterion("SIGNNBR =", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrNotEqualTo(String value) {
            addCriterion("SIGNNBR <>", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrGreaterThan(String value) {
            addCriterion("SIGNNBR >", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNNBR >=", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrLessThan(String value) {
            addCriterion("SIGNNBR <", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrLessThanOrEqualTo(String value) {
            addCriterion("SIGNNBR <=", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrLike(String value) {
            addCriterion("SIGNNBR like", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrNotLike(String value) {
            addCriterion("SIGNNBR not like", value, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrIn(List<String> values) {
            addCriterion("SIGNNBR in", values, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrNotIn(List<String> values) {
            addCriterion("SIGNNBR not in", values, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrBetween(String value1, String value2) {
            addCriterion("SIGNNBR between", value1, value2, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSignnbrNotBetween(String value1, String value2) {
            addCriterion("SIGNNBR not between", value1, value2, "signnbr");
            return (Criteria) this;
        }

        public Criteria andSigntypcdIsNull() {
            addCriterion("SIGNTYPCD is null");
            return (Criteria) this;
        }

        public Criteria andSigntypcdIsNotNull() {
            addCriterion("SIGNTYPCD is not null");
            return (Criteria) this;
        }

        public Criteria andSigntypcdEqualTo(String value) {
            addCriterion("SIGNTYPCD =", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdNotEqualTo(String value) {
            addCriterion("SIGNTYPCD <>", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdGreaterThan(String value) {
            addCriterion("SIGNTYPCD >", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNTYPCD >=", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdLessThan(String value) {
            addCriterion("SIGNTYPCD <", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdLessThanOrEqualTo(String value) {
            addCriterion("SIGNTYPCD <=", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdLike(String value) {
            addCriterion("SIGNTYPCD like", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdNotLike(String value) {
            addCriterion("SIGNTYPCD not like", value, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdIn(List<String> values) {
            addCriterion("SIGNTYPCD in", values, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdNotIn(List<String> values) {
            addCriterion("SIGNTYPCD not in", values, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdBetween(String value1, String value2) {
            addCriterion("SIGNTYPCD between", value1, value2, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andSigntypcdNotBetween(String value1, String value2) {
            addCriterion("SIGNTYPCD not between", value1, value2, "signtypcd");
            return (Criteria) this;
        }

        public Criteria andPertranslimitIsNull() {
            addCriterion("PERTRANSLIMIT is null");
            return (Criteria) this;
        }

        public Criteria andPertranslimitIsNotNull() {
            addCriterion("PERTRANSLIMIT is not null");
            return (Criteria) this;
        }

        public Criteria andPertranslimitEqualTo(BigDecimal value) {
            addCriterion("PERTRANSLIMIT =", value, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitNotEqualTo(BigDecimal value) {
            addCriterion("PERTRANSLIMIT <>", value, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitGreaterThan(BigDecimal value) {
            addCriterion("PERTRANSLIMIT >", value, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PERTRANSLIMIT >=", value, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitLessThan(BigDecimal value) {
            addCriterion("PERTRANSLIMIT <", value, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PERTRANSLIMIT <=", value, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitIn(List<BigDecimal> values) {
            addCriterion("PERTRANSLIMIT in", values, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitNotIn(List<BigDecimal> values) {
            addCriterion("PERTRANSLIMIT not in", values, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PERTRANSLIMIT between", value1, value2, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPertranslimitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PERTRANSLIMIT not between", value1, value2, "pertranslimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitIsNull() {
            addCriterion("PERDAYLIMIT is null");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitIsNotNull() {
            addCriterion("PERDAYLIMIT is not null");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitEqualTo(BigDecimal value) {
            addCriterion("PERDAYLIMIT =", value, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitNotEqualTo(BigDecimal value) {
            addCriterion("PERDAYLIMIT <>", value, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitGreaterThan(BigDecimal value) {
            addCriterion("PERDAYLIMIT >", value, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PERDAYLIMIT >=", value, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitLessThan(BigDecimal value) {
            addCriterion("PERDAYLIMIT <", value, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PERDAYLIMIT <=", value, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitIn(List<BigDecimal> values) {
            addCriterion("PERDAYLIMIT in", values, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitNotIn(List<BigDecimal> values) {
            addCriterion("PERDAYLIMIT not in", values, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PERDAYLIMIT between", value1, value2, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andPerdaylimitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PERDAYLIMIT not between", value1, value2, "perdaylimit");
            return (Criteria) this;
        }

        public Criteria andDayamtIsNull() {
            addCriterion("DAYAMT is null");
            return (Criteria) this;
        }

        public Criteria andDayamtIsNotNull() {
            addCriterion("DAYAMT is not null");
            return (Criteria) this;
        }

        public Criteria andDayamtEqualTo(BigDecimal value) {
            addCriterion("DAYAMT =", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtNotEqualTo(BigDecimal value) {
            addCriterion("DAYAMT <>", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtGreaterThan(BigDecimal value) {
            addCriterion("DAYAMT >", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DAYAMT >=", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtLessThan(BigDecimal value) {
            addCriterion("DAYAMT <", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DAYAMT <=", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtIn(List<BigDecimal> values) {
            addCriterion("DAYAMT in", values, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtNotIn(List<BigDecimal> values) {
            addCriterion("DAYAMT not in", values, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DAYAMT between", value1, value2, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DAYAMT not between", value1, value2, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtdateIsNull() {
            addCriterion("DAYAMTDATE is null");
            return (Criteria) this;
        }

        public Criteria andDayamtdateIsNotNull() {
            addCriterion("DAYAMTDATE is not null");
            return (Criteria) this;
        }

        public Criteria andDayamtdateEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE =", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE <>", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateGreaterThan(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE >", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE >=", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateLessThan(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE <", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE <=", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateIn(List<Date> values) {
            addCriterionForJDBCDate("DAYAMTDATE in", values, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("DAYAMTDATE not in", values, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DAYAMTDATE between", value1, value2, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DAYAMTDATE not between", value1, value2, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNull() {
            addCriterion("DATELASTMAINT is null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIsNotNull() {
            addCriterion("DATELASTMAINT is not null");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintEqualTo(Date value) {
            addCriterion("DATELASTMAINT =", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotEqualTo(Date value) {
            addCriterion("DATELASTMAINT <>", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThan(Date value) {
            addCriterion("DATELASTMAINT >", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT >=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThan(Date value) {
            addCriterion("DATELASTMAINT <", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
            addCriterion("DATELASTMAINT <=", value, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintIn(List<Date> values) {
            addCriterion("DATELASTMAINT in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotIn(List<Date> values) {
            addCriterion("DATELASTMAINT not in", values, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }

        public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
            addCriterion("DATELASTMAINT not between", value1, value2, "datelastmaint");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CUSTTRANSCTRL
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}