package com.csii.upp.dto.generate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class PaytypetransctrlExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public PaytypetransctrlExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected PaytypetransctrlExample(PaytypetransctrlExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPaytypeIsNull() {
            addCriterion("PAYTYPE is null");
            return (Criteria) this;
        }

        public Criteria andPaytypeIsNotNull() {
            addCriterion("PAYTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andPaytypeEqualTo(String value) {
            addCriterion("PAYTYPE =", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotEqualTo(String value) {
            addCriterion("PAYTYPE <>", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeGreaterThan(String value) {
            addCriterion("PAYTYPE >", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeGreaterThanOrEqualTo(String value) {
            addCriterion("PAYTYPE >=", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeLessThan(String value) {
            addCriterion("PAYTYPE <", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeLessThanOrEqualTo(String value) {
            addCriterion("PAYTYPE <=", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeLike(String value) {
            addCriterion("PAYTYPE like", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotLike(String value) {
            addCriterion("PAYTYPE not like", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeIn(List<String> values) {
            addCriterion("PAYTYPE in", values, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotIn(List<String> values) {
            addCriterion("PAYTYPE not in", values, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeBetween(String value1, String value2) {
            addCriterion("PAYTYPE between", value1, value2, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotBetween(String value1, String value2) {
            addCriterion("PAYTYPE not between", value1, value2, "paytype");
            return (Criteria) this;
        }

        public Criteria andFeenbrIsNull() {
            addCriterion("FEENBR is null");
            return (Criteria) this;
        }

        public Criteria andFeenbrIsNotNull() {
            addCriterion("FEENBR is not null");
            return (Criteria) this;
        }

        public Criteria andFeenbrEqualTo(String value) {
            addCriterion("FEENBR =", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotEqualTo(String value) {
            addCriterion("FEENBR <>", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrGreaterThan(String value) {
            addCriterion("FEENBR >", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrGreaterThanOrEqualTo(String value) {
            addCriterion("FEENBR >=", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrLessThan(String value) {
            addCriterion("FEENBR <", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrLessThanOrEqualTo(String value) {
            addCriterion("FEENBR <=", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrLike(String value) {
            addCriterion("FEENBR like", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotLike(String value) {
            addCriterion("FEENBR not like", value, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrIn(List<String> values) {
            addCriterion("FEENBR in", values, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotIn(List<String> values) {
            addCriterion("FEENBR not in", values, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrBetween(String value1, String value2) {
            addCriterion("FEENBR between", value1, value2, "feenbr");
            return (Criteria) this;
        }

        public Criteria andFeenbrNotBetween(String value1, String value2) {
            addCriterion("FEENBR not between", value1, value2, "feenbr");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtIsNull() {
            addCriterion("PERLIMITAMT is null");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtIsNotNull() {
            addCriterion("PERLIMITAMT is not null");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtEqualTo(BigDecimal value) {
            addCriterion("PERLIMITAMT =", value, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtNotEqualTo(BigDecimal value) {
            addCriterion("PERLIMITAMT <>", value, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtGreaterThan(BigDecimal value) {
            addCriterion("PERLIMITAMT >", value, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PERLIMITAMT >=", value, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtLessThan(BigDecimal value) {
            addCriterion("PERLIMITAMT <", value, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PERLIMITAMT <=", value, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtIn(List<BigDecimal> values) {
            addCriterion("PERLIMITAMT in", values, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtNotIn(List<BigDecimal> values) {
            addCriterion("PERLIMITAMT not in", values, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PERLIMITAMT between", value1, value2, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andPerlimitamtNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PERLIMITAMT not between", value1, value2, "perlimitamt");
            return (Criteria) this;
        }

        public Criteria andDayamtIsNull() {
            addCriterion("DAYAMT is null");
            return (Criteria) this;
        }

        public Criteria andDayamtIsNotNull() {
            addCriterion("DAYAMT is not null");
            return (Criteria) this;
        }

        public Criteria andDayamtEqualTo(BigDecimal value) {
            addCriterion("DAYAMT =", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtNotEqualTo(BigDecimal value) {
            addCriterion("DAYAMT <>", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtGreaterThan(BigDecimal value) {
            addCriterion("DAYAMT >", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DAYAMT >=", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtLessThan(BigDecimal value) {
            addCriterion("DAYAMT <", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DAYAMT <=", value, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtIn(List<BigDecimal> values) {
            addCriterion("DAYAMT in", values, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtNotIn(List<BigDecimal> values) {
            addCriterion("DAYAMT not in", values, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DAYAMT between", value1, value2, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DAYAMT not between", value1, value2, "dayamt");
            return (Criteria) this;
        }

        public Criteria andDayamtdateIsNull() {
            addCriterion("DAYAMTDATE is null");
            return (Criteria) this;
        }

        public Criteria andDayamtdateIsNotNull() {
            addCriterion("DAYAMTDATE is not null");
            return (Criteria) this;
        }

        public Criteria andDayamtdateEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE =", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE <>", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateGreaterThan(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE >", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE >=", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateLessThan(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE <", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DAYAMTDATE <=", value, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateIn(List<Date> values) {
            addCriterionForJDBCDate("DAYAMTDATE in", values, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("DAYAMTDATE not in", values, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DAYAMTDATE between", value1, value2, "dayamtdate");
            return (Criteria) this;
        }

        public Criteria andDayamtdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DAYAMTDATE not between", value1, value2, "dayamtdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}