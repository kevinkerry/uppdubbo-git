package com.csii.upp.dto.generate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BonuspointparamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public BonuspointparamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected BonuspointparamExample(BonuspointparamExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateIsNull() {
            addCriterion("BONUSEXCHANGERATE is null");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateIsNotNull() {
            addCriterion("BONUSEXCHANGERATE is not null");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateEqualTo(BigDecimal value) {
            addCriterion("BONUSEXCHANGERATE =", value, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateNotEqualTo(BigDecimal value) {
            addCriterion("BONUSEXCHANGERATE <>", value, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateGreaterThan(BigDecimal value) {
            addCriterion("BONUSEXCHANGERATE >", value, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BONUSEXCHANGERATE >=", value, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateLessThan(BigDecimal value) {
            addCriterion("BONUSEXCHANGERATE <", value, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BONUSEXCHANGERATE <=", value, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateIn(List<BigDecimal> values) {
            addCriterion("BONUSEXCHANGERATE in", values, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateNotIn(List<BigDecimal> values) {
            addCriterion("BONUSEXCHANGERATE not in", values, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BONUSEXCHANGERATE between", value1, value2, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonusexchangerateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BONUSEXCHANGERATE not between", value1, value2, "bonusexchangerate");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitIsNull() {
            addCriterion("BONUSEFFECTIVEUNIT is null");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitIsNotNull() {
            addCriterion("BONUSEFFECTIVEUNIT is not null");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitEqualTo(String value) {
            addCriterion("BONUSEFFECTIVEUNIT =", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitNotEqualTo(String value) {
            addCriterion("BONUSEFFECTIVEUNIT <>", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitGreaterThan(String value) {
            addCriterion("BONUSEFFECTIVEUNIT >", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitGreaterThanOrEqualTo(String value) {
            addCriterion("BONUSEFFECTIVEUNIT >=", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitLessThan(String value) {
            addCriterion("BONUSEFFECTIVEUNIT <", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitLessThanOrEqualTo(String value) {
            addCriterion("BONUSEFFECTIVEUNIT <=", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitLike(String value) {
            addCriterion("BONUSEFFECTIVEUNIT like", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitNotLike(String value) {
            addCriterion("BONUSEFFECTIVEUNIT not like", value, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitIn(List<String> values) {
            addCriterion("BONUSEFFECTIVEUNIT in", values, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitNotIn(List<String> values) {
            addCriterion("BONUSEFFECTIVEUNIT not in", values, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitBetween(String value1, String value2) {
            addCriterion("BONUSEFFECTIVEUNIT between", value1, value2, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBonuseffectiveunitNotBetween(String value1, String value2) {
            addCriterion("BONUSEFFECTIVEUNIT not between", value1, value2, "bonuseffectiveunit");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueIsNull() {
            addCriterion("BOUNSEFFECTIVEVALUE is null");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueIsNotNull() {
            addCriterion("BOUNSEFFECTIVEVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueEqualTo(Long value) {
            addCriterion("BOUNSEFFECTIVEVALUE =", value, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueNotEqualTo(Long value) {
            addCriterion("BOUNSEFFECTIVEVALUE <>", value, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueGreaterThan(Long value) {
            addCriterion("BOUNSEFFECTIVEVALUE >", value, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueGreaterThanOrEqualTo(Long value) {
            addCriterion("BOUNSEFFECTIVEVALUE >=", value, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueLessThan(Long value) {
            addCriterion("BOUNSEFFECTIVEVALUE <", value, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueLessThanOrEqualTo(Long value) {
            addCriterion("BOUNSEFFECTIVEVALUE <=", value, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueIn(List<Long> values) {
            addCriterion("BOUNSEFFECTIVEVALUE in", values, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueNotIn(List<Long> values) {
            addCriterion("BOUNSEFFECTIVEVALUE not in", values, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueBetween(Long value1, Long value2) {
            addCriterion("BOUNSEFFECTIVEVALUE between", value1, value2, "bounseffectivevalue");
            return (Criteria) this;
        }

        public Criteria andBounseffectivevalueNotBetween(Long value1, Long value2) {
            addCriterion("BOUNSEFFECTIVEVALUE not between", value1, value2, "bounseffectivevalue");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}