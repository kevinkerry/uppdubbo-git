package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChannelinfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public ChannelinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    protected ChannelinfoExample(ChannelinfoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHANNELINFO
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andChannelnbrIsNull() {
            addCriterion("CHANNELNBR is null");
            return (Criteria) this;
        }

        public Criteria andChannelnbrIsNotNull() {
            addCriterion("CHANNELNBR is not null");
            return (Criteria) this;
        }

        public Criteria andChannelnbrEqualTo(String value) {
            addCriterion("CHANNELNBR =", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrNotEqualTo(String value) {
            addCriterion("CHANNELNBR <>", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrGreaterThan(String value) {
            addCriterion("CHANNELNBR >", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrGreaterThanOrEqualTo(String value) {
            addCriterion("CHANNELNBR >=", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrLessThan(String value) {
            addCriterion("CHANNELNBR <", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrLessThanOrEqualTo(String value) {
            addCriterion("CHANNELNBR <=", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrLike(String value) {
            addCriterion("CHANNELNBR like", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrNotLike(String value) {
            addCriterion("CHANNELNBR not like", value, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrIn(List<String> values) {
            addCriterion("CHANNELNBR in", values, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrNotIn(List<String> values) {
            addCriterion("CHANNELNBR not in", values, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrBetween(String value1, String value2) {
            addCriterion("CHANNELNBR between", value1, value2, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChannelnbrNotBetween(String value1, String value2) {
            addCriterion("CHANNELNBR not between", value1, value2, "channelnbr");
            return (Criteria) this;
        }

        public Criteria andChanneldescIsNull() {
            addCriterion("CHANNELDESC is null");
            return (Criteria) this;
        }

        public Criteria andChanneldescIsNotNull() {
            addCriterion("CHANNELDESC is not null");
            return (Criteria) this;
        }

        public Criteria andChanneldescEqualTo(String value) {
            addCriterion("CHANNELDESC =", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescNotEqualTo(String value) {
            addCriterion("CHANNELDESC <>", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescGreaterThan(String value) {
            addCriterion("CHANNELDESC >", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescGreaterThanOrEqualTo(String value) {
            addCriterion("CHANNELDESC >=", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescLessThan(String value) {
            addCriterion("CHANNELDESC <", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescLessThanOrEqualTo(String value) {
            addCriterion("CHANNELDESC <=", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescLike(String value) {
            addCriterion("CHANNELDESC like", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescNotLike(String value) {
            addCriterion("CHANNELDESC not like", value, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescIn(List<String> values) {
            addCriterion("CHANNELDESC in", values, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescNotIn(List<String> values) {
            addCriterion("CHANNELDESC not in", values, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescBetween(String value1, String value2) {
            addCriterion("CHANNELDESC between", value1, value2, "channeldesc");
            return (Criteria) this;
        }

        public Criteria andChanneldescNotBetween(String value1, String value2) {
            addCriterion("CHANNELDESC not between", value1, value2, "channeldesc");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CHANNELINFO
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}