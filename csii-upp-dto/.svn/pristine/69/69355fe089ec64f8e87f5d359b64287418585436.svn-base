package com.csii.upp.dto.generate;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class QueapplExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public QueapplExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	protected QueapplExample(QueapplExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table QUEAPPL
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andQuenbrIsNull() {
			addCriterion("QUENBR is null");
			return (Criteria) this;
		}

		public Criteria andQuenbrIsNotNull() {
			addCriterion("QUENBR is not null");
			return (Criteria) this;
		}

		public Criteria andQuenbrEqualTo(Long value) {
			addCriterion("QUENBR =", value, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrNotEqualTo(Long value) {
			addCriterion("QUENBR <>", value, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrGreaterThan(Long value) {
			addCriterion("QUENBR >", value, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrGreaterThanOrEqualTo(Long value) {
			addCriterion("QUENBR >=", value, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrLessThan(Long value) {
			addCriterion("QUENBR <", value, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrLessThanOrEqualTo(Long value) {
			addCriterion("QUENBR <=", value, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrIn(List<Long> values) {
			addCriterion("QUENBR in", values, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrNotIn(List<Long> values) {
			addCriterion("QUENBR not in", values, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrBetween(Long value1, Long value2) {
			addCriterion("QUENBR between", value1, value2, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuenbrNotBetween(Long value1, Long value2) {
			addCriterion("QUENBR not between", value1, value2, "quenbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrIsNull() {
			addCriterion("QUESUBNBR is null");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrIsNotNull() {
			addCriterion("QUESUBNBR is not null");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrEqualTo(Long value) {
			addCriterion("QUESUBNBR =", value, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrNotEqualTo(Long value) {
			addCriterion("QUESUBNBR <>", value, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrGreaterThan(Long value) {
			addCriterion("QUESUBNBR >", value, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrGreaterThanOrEqualTo(Long value) {
			addCriterion("QUESUBNBR >=", value, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrLessThan(Long value) {
			addCriterion("QUESUBNBR <", value, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrLessThanOrEqualTo(Long value) {
			addCriterion("QUESUBNBR <=", value, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrIn(List<Long> values) {
			addCriterion("QUESUBNBR in", values, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrNotIn(List<Long> values) {
			addCriterion("QUESUBNBR not in", values, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrBetween(Long value1, Long value2) {
			addCriterion("QUESUBNBR between", value1, value2, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andQuesubnbrNotBetween(Long value1, Long value2) {
			addCriterion("QUESUBNBR not between", value1, value2, "quesubnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrIsNull() {
			addCriterion("APPLNBR is null");
			return (Criteria) this;
		}

		public Criteria andApplnbrIsNotNull() {
			addCriterion("APPLNBR is not null");
			return (Criteria) this;
		}

		public Criteria andApplnbrEqualTo(Long value) {
			addCriterion("APPLNBR =", value, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrNotEqualTo(Long value) {
			addCriterion("APPLNBR <>", value, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrGreaterThan(Long value) {
			addCriterion("APPLNBR >", value, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrGreaterThanOrEqualTo(Long value) {
			addCriterion("APPLNBR >=", value, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrLessThan(Long value) {
			addCriterion("APPLNBR <", value, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrLessThanOrEqualTo(Long value) {
			addCriterion("APPLNBR <=", value, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrIn(List<Long> values) {
			addCriterion("APPLNBR in", values, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrNotIn(List<Long> values) {
			addCriterion("APPLNBR not in", values, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrBetween(Long value1, Long value2) {
			addCriterion("APPLNBR between", value1, value2, "applnbr");
			return (Criteria) this;
		}

		public Criteria andApplnbrNotBetween(Long value1, Long value2) {
			addCriterion("APPLNBR not between", value1, value2, "applnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrIsNull() {
			addCriterion("SEQNBR is null");
			return (Criteria) this;
		}

		public Criteria andSeqnbrIsNotNull() {
			addCriterion("SEQNBR is not null");
			return (Criteria) this;
		}

		public Criteria andSeqnbrEqualTo(Long value) {
			addCriterion("SEQNBR =", value, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrNotEqualTo(Long value) {
			addCriterion("SEQNBR <>", value, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrGreaterThan(Long value) {
			addCriterion("SEQNBR >", value, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrGreaterThanOrEqualTo(Long value) {
			addCriterion("SEQNBR >=", value, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrLessThan(Long value) {
			addCriterion("SEQNBR <", value, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrLessThanOrEqualTo(Long value) {
			addCriterion("SEQNBR <=", value, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrIn(List<Long> values) {
			addCriterion("SEQNBR in", values, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrNotIn(List<Long> values) {
			addCriterion("SEQNBR not in", values, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrBetween(Long value1, Long value2) {
			addCriterion("SEQNBR between", value1, value2, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andSeqnbrNotBetween(Long value1, Long value2) {
			addCriterion("SEQNBR not between", value1, value2, "seqnbr");
			return (Criteria) this;
		}

		public Criteria andCriticalynIsNull() {
			addCriterion("CRITICALYN is null");
			return (Criteria) this;
		}

		public Criteria andCriticalynIsNotNull() {
			addCriterion("CRITICALYN is not null");
			return (Criteria) this;
		}

		public Criteria andCriticalynEqualTo(String value) {
			addCriterion("CRITICALYN =", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynNotEqualTo(String value) {
			addCriterion("CRITICALYN <>", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynGreaterThan(String value) {
			addCriterion("CRITICALYN >", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynGreaterThanOrEqualTo(String value) {
			addCriterion("CRITICALYN >=", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynLessThan(String value) {
			addCriterion("CRITICALYN <", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynLessThanOrEqualTo(String value) {
			addCriterion("CRITICALYN <=", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynLike(String value) {
			addCriterion("CRITICALYN like", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynNotLike(String value) {
			addCriterion("CRITICALYN not like", value, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynIn(List<String> values) {
			addCriterion("CRITICALYN in", values, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynNotIn(List<String> values) {
			addCriterion("CRITICALYN not in", values, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynBetween(String value1, String value2) {
			addCriterion("CRITICALYN between", value1, value2, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andCriticalynNotBetween(String value1, String value2) {
			addCriterion("CRITICALYN not between", value1, value2, "criticalyn");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIsNull() {
			addCriterion("DATELASTMAINT is null");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIsNotNull() {
			addCriterion("DATELASTMAINT is not null");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintEqualTo(Date value) {
			addCriterion("DATELASTMAINT =", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotEqualTo(Date value) {
			addCriterion("DATELASTMAINT <>", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintGreaterThan(Date value) {
			addCriterion("DATELASTMAINT >", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintGreaterThanOrEqualTo(Date value) {
			addCriterion("DATELASTMAINT >=", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintLessThan(Date value) {
			addCriterion("DATELASTMAINT <", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintLessThanOrEqualTo(Date value) {
			addCriterion("DATELASTMAINT <=", value, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintIn(List<Date> values) {
			addCriterion("DATELASTMAINT in", values, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotIn(List<Date> values) {
			addCriterion("DATELASTMAINT not in", values, "datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintBetween(Date value1, Date value2) {
			addCriterion("DATELASTMAINT between", value1, value2,
					"datelastmaint");
			return (Criteria) this;
		}

		public Criteria andDatelastmaintNotBetween(Date value1, Date value2) {
			addCriterion("DATELASTMAINT not between", value1, value2,
					"datelastmaint");
			return (Criteria) this;
		}

		public Criteria andOnynIsNull() {
			addCriterion("ONYN is null");
			return (Criteria) this;
		}

		public Criteria andOnynIsNotNull() {
			addCriterion("ONYN is not null");
			return (Criteria) this;
		}

		public Criteria andOnynEqualTo(String value) {
			addCriterion("ONYN =", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynNotEqualTo(String value) {
			addCriterion("ONYN <>", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynGreaterThan(String value) {
			addCriterion("ONYN >", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynGreaterThanOrEqualTo(String value) {
			addCriterion("ONYN >=", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynLessThan(String value) {
			addCriterion("ONYN <", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynLessThanOrEqualTo(String value) {
			addCriterion("ONYN <=", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynLike(String value) {
			addCriterion("ONYN like", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynNotLike(String value) {
			addCriterion("ONYN not like", value, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynIn(List<String> values) {
			addCriterion("ONYN in", values, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynNotIn(List<String> values) {
			addCriterion("ONYN not in", values, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynBetween(String value1, String value2) {
			addCriterion("ONYN between", value1, value2, "onyn");
			return (Criteria) this;
		}

		public Criteria andOnynNotBetween(String value1, String value2) {
			addCriterion("ONYN not between", value1, value2, "onyn");
			return (Criteria) this;
		}

		public Criteria andCornexperessIsNull() {
			addCriterion("CORNEXPERESS is null");
			return (Criteria) this;
		}

		public Criteria andCornexperessIsNotNull() {
			addCriterion("CORNEXPERESS is not null");
			return (Criteria) this;
		}

		public Criteria andCornexperessEqualTo(String value) {
			addCriterion("CORNEXPERESS =", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessNotEqualTo(String value) {
			addCriterion("CORNEXPERESS <>", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessGreaterThan(String value) {
			addCriterion("CORNEXPERESS >", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessGreaterThanOrEqualTo(String value) {
			addCriterion("CORNEXPERESS >=", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessLessThan(String value) {
			addCriterion("CORNEXPERESS <", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessLessThanOrEqualTo(String value) {
			addCriterion("CORNEXPERESS <=", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessLike(String value) {
			addCriterion("CORNEXPERESS like", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessNotLike(String value) {
			addCriterion("CORNEXPERESS not like", value, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessIn(List<String> values) {
			addCriterion("CORNEXPERESS in", values, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessNotIn(List<String> values) {
			addCriterion("CORNEXPERESS not in", values, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessBetween(String value1, String value2) {
			addCriterion("CORNEXPERESS between", value1, value2, "cornexperess");
			return (Criteria) this;
		}

		public Criteria andCornexperessNotBetween(String value1, String value2) {
			addCriterion("CORNEXPERESS not between", value1, value2,
					"cornexperess");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUEAPPL
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}