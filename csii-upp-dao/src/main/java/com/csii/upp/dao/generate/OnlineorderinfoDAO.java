package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Onlineorderinfo;
import com.csii.upp.dto.generate.OnlineorderinfoExample;

public class OnlineorderinfoDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int countByExample(OnlineorderinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("ONLINEORDERINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(OnlineorderinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("ONLINEORDERINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String mernbr, String merseqnbr) throws SQLException {
        Onlineorderinfo _key = new Onlineorderinfo();
        _key.setMernbr(mernbr);
        _key.setMerseqnbr(merseqnbr);
        int rows = getSqlMap().delete("ONLINEORDERINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static void insert(Onlineorderinfo record) throws SQLException {
        getSqlMap().insert("ONLINEORDERINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Onlineorderinfo record) throws SQLException {
        getSqlMap().insert("ONLINEORDERINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Onlineorderinfo> selectByExample(OnlineorderinfoExample example) throws SQLException {
        List<Onlineorderinfo> list = getSqlMap().queryForList("ONLINEORDERINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static Onlineorderinfo selectByPrimaryKey(String mernbr, String merseqnbr) throws SQLException {
        Onlineorderinfo _key = new Onlineorderinfo();
        _key.setMernbr(mernbr);
        _key.setMerseqnbr(merseqnbr);
        Onlineorderinfo record = (Onlineorderinfo) getSqlMap().queryForObject("ONLINEORDERINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Onlineorderinfo record, OnlineorderinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ONLINEORDERINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Onlineorderinfo record, OnlineorderinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ONLINEORDERINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Onlineorderinfo record) throws SQLException {
        int rows = getSqlMap().update("ONLINEORDERINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Onlineorderinfo record) throws SQLException {
        int rows = getSqlMap().update("ONLINEORDERINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEORDERINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OnlineorderinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, OnlineorderinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}