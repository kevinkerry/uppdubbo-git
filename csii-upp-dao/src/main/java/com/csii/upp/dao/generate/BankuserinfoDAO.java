package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Bankuserinfo;
import com.csii.upp.dto.generate.BankuserinfoExample;

public class BankuserinfoDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int countByExample(BankuserinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BANKUSERINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(BankuserinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("BANKUSERINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String usernbr) throws SQLException {
        Bankuserinfo _key = new Bankuserinfo();
        _key.setUsernbr(usernbr);
        int rows = getSqlMap().delete("BANKUSERINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static void insert(Bankuserinfo record) throws SQLException {
        getSqlMap().insert("BANKUSERINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Bankuserinfo record) throws SQLException {
        getSqlMap().insert("BANKUSERINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Bankuserinfo> selectByExample(BankuserinfoExample example) throws SQLException {
        List<Bankuserinfo> list = getSqlMap().queryForList("BANKUSERINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static Bankuserinfo selectByPrimaryKey(String usernbr) throws SQLException {
        Bankuserinfo _key = new Bankuserinfo();
        _key.setUsernbr(usernbr);
        Bankuserinfo record = (Bankuserinfo) getSqlMap().queryForObject("BANKUSERINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Bankuserinfo record, BankuserinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BANKUSERINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Bankuserinfo record, BankuserinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BANKUSERINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Bankuserinfo record) throws SQLException {
        int rows = getSqlMap().update("BANKUSERINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Bankuserinfo record) throws SQLException {
        int rows = getSqlMap().update("BANKUSERINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BANKUSERINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BankuserinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, BankuserinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}