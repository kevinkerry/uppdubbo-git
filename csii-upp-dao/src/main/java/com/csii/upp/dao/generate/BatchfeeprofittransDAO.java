package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Batchfeeprofittrans;
import com.csii.upp.dto.generate.BatchfeeprofittransExample;

public class BatchfeeprofittransDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int countByExample(BatchfeeprofittransExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BATCHFEEPROFITTRANS.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int deleteByExample(BatchfeeprofittransExample example) throws SQLException {
        int rows = getSqlMap().delete("BATCHFEEPROFITTRANS.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String profitcleartransnbr) throws SQLException {
        Batchfeeprofittrans _key = new Batchfeeprofittrans();
        _key.setProfitcleartransnbr(profitcleartransnbr);
        int rows = getSqlMap().delete("BATCHFEEPROFITTRANS.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static void insert(Batchfeeprofittrans record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITTRANS.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static void insertSelective(Batchfeeprofittrans record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITTRANS.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Batchfeeprofittrans> selectByExample(BatchfeeprofittransExample example) throws SQLException {
        List<Batchfeeprofittrans> list = getSqlMap().queryForList("BATCHFEEPROFITTRANS.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static Batchfeeprofittrans selectByPrimaryKey(String profitcleartransnbr) throws SQLException {
        Batchfeeprofittrans _key = new Batchfeeprofittrans();
        _key.setProfitcleartransnbr(profitcleartransnbr);
        Batchfeeprofittrans record = (Batchfeeprofittrans) getSqlMap().queryForObject("BATCHFEEPROFITTRANS.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Batchfeeprofittrans record, BatchfeeprofittransExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITTRANS.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int updateByExample(Batchfeeprofittrans record, BatchfeeprofittransExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITTRANS.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Batchfeeprofittrans record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITTRANS.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Batchfeeprofittrans record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITTRANS.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BATCHFEEPROFITTRANS
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BatchfeeprofittransExample {
        private Object record;

        public UpdateByExampleParms(Object record, BatchfeeprofittransExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}