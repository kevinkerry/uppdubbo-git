package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Fundchannelcleartrans;
import com.csii.upp.dto.generate.FundchannelcleartransExample;

public class FundchannelcleartransDAO extends BasePayDAO {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int countByExample(FundchannelcleartransExample example)
			throws SQLException {
		Integer count = (Integer) getSqlMap().queryForObject(
				"FUNDCHANNELCLEARTRANS.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int deleteByExample(FundchannelcleartransExample example)
			throws SQLException {
		int rows = getSqlMap().delete("FUNDCHANNELCLEARTRANS.deleteByExample",
				example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int deleteByPrimaryKey(String cleartransnbr) throws SQLException {
		Fundchannelcleartrans _key = new Fundchannelcleartrans();
		_key.setCleartransnbr(cleartransnbr);
		int rows = getSqlMap().delete(
				"FUNDCHANNELCLEARTRANS.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static void insert(Fundchannelcleartrans record) throws SQLException {
		getSqlMap().insert("FUNDCHANNELCLEARTRANS.insert", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static void insertSelective(Fundchannelcleartrans record)
			throws SQLException {
		getSqlMap().insert("FUNDCHANNELCLEARTRANS.insertSelective", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public List<Fundchannelcleartrans> selectByExample(
			FundchannelcleartransExample example) throws SQLException {
		List<Fundchannelcleartrans> list = getSqlMap().queryForList(
				"FUNDCHANNELCLEARTRANS.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static Fundchannelcleartrans selectByPrimaryKey(String cleartransnbr)
			throws SQLException {
		Fundchannelcleartrans _key = new Fundchannelcleartrans();
		_key.setCleartransnbr(cleartransnbr);
		Fundchannelcleartrans record = (Fundchannelcleartrans) getSqlMap()
				.queryForObject("FUNDCHANNELCLEARTRANS.selectByPrimaryKey",
						_key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int updateByExampleSelective(Fundchannelcleartrans record,
			FundchannelcleartransExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update(
				"FUNDCHANNELCLEARTRANS.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int updateByExample(Fundchannelcleartrans record,
			FundchannelcleartransExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("FUNDCHANNELCLEARTRANS.updateByExample",
				parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeySelective(Fundchannelcleartrans record)
			throws SQLException {
		int rows = getSqlMap().update(
				"FUNDCHANNELCLEARTRANS.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	public static int updateByPrimaryKey(Fundchannelcleartrans record)
			throws SQLException {
		int rows = getSqlMap().update(
				"FUNDCHANNELCLEARTRANS.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FUNDCHANNELCLEARTRANS
	 * @mbggenerated
	 */
	protected static class UpdateByExampleParms extends
			FundchannelcleartransExample {
		private Object record;

		public UpdateByExampleParms(Object record,
				FundchannelcleartransExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}