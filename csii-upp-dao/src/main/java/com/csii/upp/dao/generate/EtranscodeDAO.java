package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Etranscode;
import com.csii.upp.dto.generate.EtranscodeExample;

public class EtranscodeDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int countByExample(EtranscodeExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("ETRANSCODE.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int deleteByExample(EtranscodeExample example) throws SQLException {
        int rows = getSqlMap().delete("ETRANSCODE.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String transcode) throws SQLException {
        Etranscode _key = new Etranscode();
        _key.setTranscode(transcode);
        int rows = getSqlMap().delete("ETRANSCODE.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static void insert(Etranscode record) throws SQLException {
        getSqlMap().insert("ETRANSCODE.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static void insertSelective(Etranscode record) throws SQLException {
        getSqlMap().insert("ETRANSCODE.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Etranscode> selectByExample(EtranscodeExample example) throws SQLException {
        List<Etranscode> list = getSqlMap().queryForList("ETRANSCODE.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static Etranscode selectByPrimaryKey(String transcode) throws SQLException {
        Etranscode _key = new Etranscode();
        _key.setTranscode(transcode);
        Etranscode record = (Etranscode) getSqlMap().queryForObject("ETRANSCODE.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Etranscode record, EtranscodeExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ETRANSCODE.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int updateByExample(Etranscode record, EtranscodeExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ETRANSCODE.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Etranscode record) throws SQLException {
        int rows = getSqlMap().update("ETRANSCODE.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Etranscode record) throws SQLException {
        int rows = getSqlMap().update("ETRANSCODE.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ETRANSCODE
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends EtranscodeExample {
        private Object record;

        public UpdateByExampleParms(Object record, EtranscodeExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}