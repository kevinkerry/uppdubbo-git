package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Onlinetransfer;
import com.csii.upp.dto.generate.OnlinetransferExample;

public class OnlinetransferDAO extends BasePayDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int countByExample(OnlinetransferExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("ONLINETRANSFER.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int deleteByExample(OnlinetransferExample example) throws SQLException {
        int rows = getSqlMap().delete("ONLINETRANSFER.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String transseqnbr) throws SQLException {
        Onlinetransfer _key = new Onlinetransfer();
        _key.setTransseqnbr(transseqnbr);
        int rows = getSqlMap().delete("ONLINETRANSFER.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static void insert(Onlinetransfer record) throws SQLException {
        getSqlMap().insert("ONLINETRANSFER.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static void insertSelective(Onlinetransfer record) throws SQLException {
        getSqlMap().insert("ONLINETRANSFER.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Onlinetransfer> selectByExample(OnlinetransferExample example) throws SQLException {
        List<Onlinetransfer> list = getSqlMap().queryForList("ONLINETRANSFER.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static Onlinetransfer selectByPrimaryKey(String transseqnbr) throws SQLException {
        Onlinetransfer _key = new Onlinetransfer();
        _key.setTransseqnbr(transseqnbr);
        Onlinetransfer record = (Onlinetransfer) getSqlMap().queryForObject("ONLINETRANSFER.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Onlinetransfer record, OnlinetransferExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ONLINETRANSFER.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int updateByExample(Onlinetransfer record, OnlinetransferExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ONLINETRANSFER.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Onlinetransfer record) throws SQLException {
        int rows = getSqlMap().update("ONLINETRANSFER.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Onlinetransfer record) throws SQLException {
        int rows = getSqlMap().update("ONLINETRANSFER.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINETRANSFER
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OnlinetransferExample {
        private Object record;

        public UpdateByExampleParms(Object record, OnlinetransferExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}