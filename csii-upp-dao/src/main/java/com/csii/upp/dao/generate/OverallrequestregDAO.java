package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Overallrequestreg;
import com.csii.upp.dto.generate.OverallrequestregExample;

public class OverallrequestregDAO extends BasePayDAO {
	   /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int countByExample(OverallrequestregExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("OVERALLREQUESTREG.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int deleteByExample(OverallrequestregExample example) throws SQLException {
        int rows = getSqlMap().delete("OVERALLREQUESTREG.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String overallreqnbr) throws SQLException {
        Overallrequestreg _key = new Overallrequestreg();
        _key.setOverallreqnbr(overallreqnbr);
        int rows = getSqlMap().delete("OVERALLREQUESTREG.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static void insert(Overallrequestreg record) throws SQLException {
        getSqlMap().insert("OVERALLREQUESTREG.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static void insertSelective(Overallrequestreg record) throws SQLException {
        getSqlMap().insert("OVERALLREQUESTREG.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Overallrequestreg> selectByExample(OverallrequestregExample example) throws SQLException {
        List<Overallrequestreg> list = getSqlMap().queryForList("OVERALLREQUESTREG.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static Overallrequestreg selectByPrimaryKey(String overallreqnbr) throws SQLException {
        Overallrequestreg _key = new Overallrequestreg();
        _key.setOverallreqnbr(overallreqnbr);
        Overallrequestreg record = (Overallrequestreg) getSqlMap().queryForObject("OVERALLREQUESTREG.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Overallrequestreg record, OverallrequestregExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLREQUESTREG.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int updateByExample(Overallrequestreg record, OverallrequestregExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLREQUESTREG.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Overallrequestreg record) throws SQLException {
        int rows = getSqlMap().update("OVERALLREQUESTREG.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Overallrequestreg record) throws SQLException {
        int rows = getSqlMap().update("OVERALLREQUESTREG.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table OVERALLREQUESTREG
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OverallrequestregExample {
        private Object record;

        public UpdateByExampleParms(Object record, OverallrequestregExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}