package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.Date;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Downsysfundtranshist;
import com.csii.upp.dto.generate.DownsysfundtranshistExample;

public class DownsysfundtranshistDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int countByExample(DownsysfundtranshistExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("DOWNSYSFUNDTRANSHIST.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int deleteByExample(DownsysfundtranshistExample example) throws SQLException {
        int rows = getSqlMap().delete("DOWNSYSFUNDTRANSHIST.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String innerfundtransnbr, Date transdate) throws SQLException {
        Downsysfundtranshist _key = new Downsysfundtranshist();
        _key.setInnerfundtransnbr(innerfundtransnbr);
        _key.setTransdate(transdate);
        int rows = getSqlMap().delete("DOWNSYSFUNDTRANSHIST.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static void insert(Downsysfundtranshist record) throws SQLException {
        getSqlMap().insert("DOWNSYSFUNDTRANSHIST.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static void insertSelective(Downsysfundtranshist record) throws SQLException {
        getSqlMap().insert("DOWNSYSFUNDTRANSHIST.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Downsysfundtranshist> selectByExample(DownsysfundtranshistExample example) throws SQLException {
        List<Downsysfundtranshist> list = getSqlMap().queryForList("DOWNSYSFUNDTRANSHIST.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static Downsysfundtranshist selectByPrimaryKey(String innerfundtransnbr, Date transdate) throws SQLException {
        Downsysfundtranshist _key = new Downsysfundtranshist();
        _key.setInnerfundtransnbr(innerfundtransnbr);
        _key.setTransdate(transdate);
        Downsysfundtranshist record = (Downsysfundtranshist) getSqlMap().queryForObject("DOWNSYSFUNDTRANSHIST.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Downsysfundtranshist record, DownsysfundtranshistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("DOWNSYSFUNDTRANSHIST.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByExample(Downsysfundtranshist record, DownsysfundtranshistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("DOWNSYSFUNDTRANSHIST.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Downsysfundtranshist record) throws SQLException {
        int rows = getSqlMap().update("DOWNSYSFUNDTRANSHIST.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Downsysfundtranshist record) throws SQLException {
        int rows = getSqlMap().update("DOWNSYSFUNDTRANSHIST.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DOWNSYSFUNDTRANSHIST
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends DownsysfundtranshistExample {
        private Object record;

        public UpdateByExampleParms(Object record, DownsysfundtranshistExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}