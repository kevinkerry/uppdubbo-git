package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Onlineorderinfohist;
import com.csii.upp.dto.generate.OnlineorderinfohistExample;

public class OnlineorderinfohistDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int countByExample(OnlineorderinfohistExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("ONLINEORDERINFOHIST.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int deleteByExample(OnlineorderinfohistExample example) throws SQLException {
        int rows = getSqlMap().delete("ONLINEORDERINFOHIST.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int deleteByPrimaryKey(String merseqnbr, String mernbr) throws SQLException {
        Onlineorderinfohist _key = new Onlineorderinfohist();
        _key.setMerseqnbr(merseqnbr);
        _key.setMernbr(mernbr);
        int rows = getSqlMap().delete("ONLINEORDERINFOHIST.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  void insert(Onlineorderinfohist record) throws SQLException {
        getSqlMap().insert("ONLINEORDERINFOHIST.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  void insertSelective(Onlineorderinfohist record) throws SQLException {
        getSqlMap().insert("ONLINEORDERINFOHIST.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static  List<Onlineorderinfohist> selectByExample(OnlineorderinfohistExample example) throws SQLException {
        List<Onlineorderinfohist> list = getSqlMap().queryForList("ONLINEORDERINFOHIST.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  Onlineorderinfohist selectByPrimaryKey(String merseqnbr, String mernbr) throws SQLException {
        Onlineorderinfohist _key = new Onlineorderinfohist();
        _key.setMerseqnbr(merseqnbr);
        _key.setMernbr(mernbr);
        Onlineorderinfohist record = (Onlineorderinfohist) getSqlMap().queryForObject("ONLINEORDERINFOHIST.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int updateByExampleSelective(Onlineorderinfohist record, OnlineorderinfohistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ONLINEORDERINFOHIST.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int updateByExample(Onlineorderinfohist record, OnlineorderinfohistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("ONLINEORDERINFOHIST.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKeySelective(Onlineorderinfohist record) throws SQLException {
        int rows = getSqlMap().update("ONLINEORDERINFOHIST.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKey(Onlineorderinfohist record) throws SQLException {
        int rows = getSqlMap().update("ONLINEORDERINFOHIST.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEORDERINFOHIST
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OnlineorderinfohistExample {
        private Object record;

        public UpdateByExampleParms(Object record, OnlineorderinfohistExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}