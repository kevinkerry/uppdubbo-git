package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Menuinfo;
import com.csii.upp.dto.generate.MenuinfoExample;

public class MenuinfoDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int countByExample(MenuinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MENUINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(MenuinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("MENUINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String funcnbr) throws SQLException {
        Menuinfo _key = new Menuinfo();
        _key.setFuncnbr(funcnbr);
        int rows = getSqlMap().delete("MENUINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static void insert(Menuinfo record) throws SQLException {
        getSqlMap().insert("MENUINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Menuinfo record) throws SQLException {
        getSqlMap().insert("MENUINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Menuinfo> selectByExample(MenuinfoExample example) throws SQLException {
        List<Menuinfo> list = getSqlMap().queryForList("MENUINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static Menuinfo selectByPrimaryKey(String funcnbr) throws SQLException {
        Menuinfo _key = new Menuinfo();
        _key.setFuncnbr(funcnbr);
        Menuinfo record = (Menuinfo) getSqlMap().queryForObject("MENUINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Menuinfo record, MenuinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MENUINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Menuinfo record, MenuinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MENUINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Menuinfo record) throws SQLException {
        int rows = getSqlMap().update("MENUINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Menuinfo record) throws SQLException {
        int rows = getSqlMap().update("MENUINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MENUINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MenuinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, MenuinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}