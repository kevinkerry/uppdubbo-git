package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Appl;
import com.csii.upp.dto.generate.ApplExample;

public class ApplDAO extends BasePayDAO {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int countByExample(ApplExample example) throws SQLException {
		Integer count = (Integer) getSqlMap().queryForObject(
				"APPL.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int deleteByExample(ApplExample example) throws SQLException {
		int rows = getSqlMap().delete("APPL.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int deleteByPrimaryKey(Long applnbr) throws SQLException {
		Appl _key = new Appl();
		_key.setApplnbr(applnbr);
		int rows = getSqlMap().delete("APPL.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static void insert(Appl record) throws SQLException {
		getSqlMap().insert("APPL.insert", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static void insertSelective(Appl record) throws SQLException {
		getSqlMap().insert("APPL.insertSelective", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Appl> selectByExample(ApplExample example) throws SQLException {
		List<Appl> list = getSqlMap().queryForList("APPL.selectByExample",
				example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static Appl selectByPrimaryKey(Long applnbr) throws SQLException {
		Appl _key = new Appl();
		_key.setApplnbr(applnbr);
		Appl record = (Appl) getSqlMap().queryForObject(
				"APPL.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int updateByExampleSelective(Appl record, ApplExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("APPL.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int updateByExample(Appl record, ApplExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("APPL.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeySelective(Appl record) throws SQLException {
		int rows = getSqlMap().update("APPL.updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table APPL
	 * @mbggenerated
	 */
	public static int updateByPrimaryKey(Appl record) throws SQLException {
		int rows = getSqlMap().update("APPL.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table APPL
	 * @mbggenerated
	 */
	protected static class UpdateByExampleParms extends ApplExample {
		private Object record;

		public UpdateByExampleParms(Object record, ApplExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}