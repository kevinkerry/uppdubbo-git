package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Paytypetransctrl;
import com.csii.upp.dto.generate.PaytypetransctrlExample;

public class PaytypetransctrlDAO extends BasePayDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static int countByExample(PaytypetransctrlExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("PAYTYPETRANSCTRL.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static int deleteByExample(PaytypetransctrlExample example) throws SQLException {
        int rows = getSqlMap().delete("PAYTYPETRANSCTRL.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String paytype) throws SQLException {
        Paytypetransctrl _key = new Paytypetransctrl();
        _key.setPaytype(paytype);
        int rows = getSqlMap().delete("PAYTYPETRANSCTRL.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static void insert(Paytypetransctrl record) throws SQLException {
        getSqlMap().insert("PAYTYPETRANSCTRL.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static void insertSelective(Paytypetransctrl record) throws SQLException {
        getSqlMap().insert("PAYTYPETRANSCTRL.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Paytypetransctrl> selectByExample(PaytypetransctrlExample example) throws SQLException {
        List<Paytypetransctrl> list = getSqlMap().queryForList("PAYTYPETRANSCTRL.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static Paytypetransctrl selectByPrimaryKey(String paytype) throws SQLException {
        Paytypetransctrl _key = new Paytypetransctrl();
        _key.setPaytype(paytype);
        Paytypetransctrl record = (Paytypetransctrl) getSqlMap().queryForObject("PAYTYPETRANSCTRL.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Paytypetransctrl record, PaytypetransctrlExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("PAYTYPETRANSCTRL.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByExample(Paytypetransctrl record, PaytypetransctrlExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("PAYTYPETRANSCTRL.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public int updateByPrimaryKeySelective(Paytypetransctrl record) throws SQLException {
        int rows = getSqlMap().update("PAYTYPETRANSCTRL.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Paytypetransctrl record) throws SQLException {
        int rows = getSqlMap().update("PAYTYPETRANSCTRL.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PAYTYPETRANSCTRL
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends PaytypetransctrlExample {
        private Object record;

        public UpdateByExampleParms(Object record, PaytypetransctrlExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}