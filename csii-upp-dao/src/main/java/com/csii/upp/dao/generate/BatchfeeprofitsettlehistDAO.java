package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Batchfeeprofitsettlehist;
import com.csii.upp.dto.generate.BatchfeeprofitsettlehistExample;

public class BatchfeeprofitsettlehistDAO  extends BasePayDAO {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int countByExample(BatchfeeprofitsettlehistExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BATCHFEEPROFITSETTLEHIST.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int deleteByExample(BatchfeeprofitsettlehistExample example) throws SQLException {
        int rows = getSqlMap().delete("BATCHFEEPROFITSETTLEHIST.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int deleteByPrimaryKey(String settleseqnbr) throws SQLException {
        Batchfeeprofitsettlehist _key = new Batchfeeprofitsettlehist();
        _key.setSettleseqnbr(settleseqnbr);
        int rows = getSqlMap().delete("BATCHFEEPROFITSETTLEHIST.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  void insert(Batchfeeprofitsettlehist record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITSETTLEHIST.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  void insertSelective(Batchfeeprofitsettlehist record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITSETTLEHIST.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static  List<Batchfeeprofitsettlehist> selectByExample(BatchfeeprofitsettlehistExample example) throws SQLException {
        List<Batchfeeprofitsettlehist> list = getSqlMap().queryForList("BATCHFEEPROFITSETTLEHIST.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  Batchfeeprofitsettlehist selectByPrimaryKey(String settleseqnbr) throws SQLException {
        Batchfeeprofitsettlehist _key = new Batchfeeprofitsettlehist();
        _key.setSettleseqnbr(settleseqnbr);
        Batchfeeprofitsettlehist record = (Batchfeeprofitsettlehist) getSqlMap().queryForObject("BATCHFEEPROFITSETTLEHIST.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int updateByExampleSelective(Batchfeeprofitsettlehist record, BatchfeeprofitsettlehistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLEHIST.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int updateByExample(Batchfeeprofitsettlehist record, BatchfeeprofitsettlehistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLEHIST.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKeySelective(Batchfeeprofitsettlehist record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLEHIST.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKey(Batchfeeprofitsettlehist record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLEHIST.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BATCHFEEPROFITSETTLEHIST
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BatchfeeprofitsettlehistExample {
        private Object record;

        public UpdateByExampleParms(Object record, BatchfeeprofitsettlehistExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}