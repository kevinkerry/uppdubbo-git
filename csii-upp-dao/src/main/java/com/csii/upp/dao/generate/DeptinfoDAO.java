package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Deptinfo;
import com.csii.upp.dto.generate.DeptinfoExample;

public class DeptinfoDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int countByExample(DeptinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("DEPTINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(DeptinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("DEPTINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String deptnbr) throws SQLException {
        Deptinfo _key = new Deptinfo();
        _key.setDeptnbr(deptnbr);
        int rows = getSqlMap().delete("DEPTINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static void insert(Deptinfo record) throws SQLException {
        getSqlMap().insert("DEPTINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Deptinfo record) throws SQLException {
        getSqlMap().insert("DEPTINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Deptinfo> selectByExample(DeptinfoExample example) throws SQLException {
        List<Deptinfo> list = getSqlMap().queryForList("DEPTINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static Deptinfo selectByPrimaryKey(String deptnbr) throws SQLException {
        Deptinfo _key = new Deptinfo();
        _key.setDeptnbr(deptnbr);
        Deptinfo record = (Deptinfo) getSqlMap().queryForObject("DEPTINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Deptinfo record, DeptinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("DEPTINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Deptinfo record, DeptinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("DEPTINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Deptinfo record) throws SQLException {
        int rows = getSqlMap().update("DEPTINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Deptinfo record) throws SQLException {
        int rows = getSqlMap().update("DEPTINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEPTINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends DeptinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, DeptinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}