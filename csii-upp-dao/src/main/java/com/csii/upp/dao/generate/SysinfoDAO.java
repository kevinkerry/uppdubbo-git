package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Sysinfo;
import com.csii.upp.dto.generate.SysinfoExample;

public class SysinfoDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int countByExample(SysinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("SYSINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(SysinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("SYSINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String fundchannelcode) throws SQLException {
        Sysinfo _key = new Sysinfo();
        _key.setFundchannelcode(fundchannelcode);
        int rows = getSqlMap().delete("SYSINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static void insert(Sysinfo record) throws SQLException {
        getSqlMap().insert("SYSINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Sysinfo record) throws SQLException {
        getSqlMap().insert("SYSINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Sysinfo> selectByExample(SysinfoExample example) throws SQLException {
        List<Sysinfo> list = getSqlMap().queryForList("SYSINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static Sysinfo selectByPrimaryKey(String fundchannelcode) throws SQLException {
        Sysinfo _key = new Sysinfo();
        _key.setFundchannelcode(fundchannelcode);
        Sysinfo record = (Sysinfo) getSqlMap().queryForObject("SYSINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Sysinfo record, SysinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("SYSINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Sysinfo record, SysinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("SYSINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Sysinfo record) throws SQLException {
        int rows = getSqlMap().update("SYSINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Sysinfo record) throws SQLException {
        int rows = getSqlMap().update("SYSINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYSINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends SysinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, SysinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}