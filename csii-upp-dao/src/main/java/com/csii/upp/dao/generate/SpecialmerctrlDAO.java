package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Specialmerctrl;
import com.csii.upp.dto.generate.SpecialmerctrlExample;

public class SpecialmerctrlDAO extends BasePayDAO {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int countByExample(SpecialmerctrlExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("SPECIALMERCTRL.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int deleteByExample(SpecialmerctrlExample example) throws SQLException {
        int rows = getSqlMap().delete("SPECIALMERCTRL.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String mernbr) throws SQLException {
        Specialmerctrl _key = new Specialmerctrl();
        _key.setMernbr(mernbr);
        int rows = getSqlMap().delete("SPECIALMERCTRL.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static void insert(Specialmerctrl record) throws SQLException {
        getSqlMap().insert("SPECIALMERCTRL.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static void insertSelective(Specialmerctrl record) throws SQLException {
        getSqlMap().insert("SPECIALMERCTRL.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Specialmerctrl> selectByExample(SpecialmerctrlExample example) throws SQLException {
        List<Specialmerctrl> list = getSqlMap().queryForList("SPECIALMERCTRL.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static Specialmerctrl selectByPrimaryKey(String mernbr) throws SQLException {
        Specialmerctrl _key = new Specialmerctrl();
        _key.setMernbr(mernbr);
        Specialmerctrl record = (Specialmerctrl) getSqlMap().queryForObject("SPECIALMERCTRL.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Specialmerctrl record, SpecialmerctrlExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("SPECIALMERCTRL.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int updateByExample(Specialmerctrl record, SpecialmerctrlExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("SPECIALMERCTRL.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Specialmerctrl record) throws SQLException {
        int rows = getSqlMap().update("SPECIALMERCTRL.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Specialmerctrl record) throws SQLException {
        int rows = getSqlMap().update("SPECIALMERCTRL.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SPECIALMERCTRL
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends SpecialmerctrlExample {
        private Object record;

        public UpdateByExampleParms(Object record, SpecialmerctrlExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}