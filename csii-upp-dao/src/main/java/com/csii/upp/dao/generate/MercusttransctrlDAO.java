package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Mercusttransctrl;
import com.csii.upp.dto.generate.MercusttransctrlExample;

public class MercusttransctrlDAO extends BasePayDAO {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int countByExample(MercusttransctrlExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERCUSTTRANSCTRL.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int deleteByExample(MercusttransctrlExample example) throws SQLException {
        int rows = getSqlMap().delete("MERCUSTTRANSCTRL.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String mernbr, String signnbr, String signtypcd) throws SQLException {
        Mercusttransctrl _key = new Mercusttransctrl();
        _key.setMernbr(mernbr);
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        int rows = getSqlMap().delete("MERCUSTTRANSCTRL.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static void insert(Mercusttransctrl record) throws SQLException {
        getSqlMap().insert("MERCUSTTRANSCTRL.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static void insertSelective(Mercusttransctrl record) throws SQLException {
        getSqlMap().insert("MERCUSTTRANSCTRL.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Mercusttransctrl> selectByExample(MercusttransctrlExample example) throws SQLException {
        List<Mercusttransctrl> list = getSqlMap().queryForList("MERCUSTTRANSCTRL.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static Mercusttransctrl selectByPrimaryKey(String mernbr, String signnbr, String signtypcd) throws SQLException {
        Mercusttransctrl _key = new Mercusttransctrl();
        _key.setMernbr(mernbr);
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        Mercusttransctrl record = (Mercusttransctrl) getSqlMap().queryForObject("MERCUSTTRANSCTRL.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Mercusttransctrl record, MercusttransctrlExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERCUSTTRANSCTRL.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByExample(Mercusttransctrl record, MercusttransctrlExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERCUSTTRANSCTRL.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Mercusttransctrl record) throws SQLException {
        int rows = getSqlMap().update("MERCUSTTRANSCTRL.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Mercusttransctrl record) throws SQLException {
        int rows = getSqlMap().update("MERCUSTTRANSCTRL.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCUSTTRANSCTRL
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MercusttransctrlExample {
        private Object record;

        public UpdateByExampleParms(Object record, MercusttransctrlExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}