package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Batchconfirmsubcleartrans;
import com.csii.upp.dto.generate.BatchconfirmsubcleartransExample;

public class BatchconfirmsubcleartransDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int countByExample(BatchconfirmsubcleartransExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BATCHCONFIRMSUBCLEARTRANS.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int deleteByExample(BatchconfirmsubcleartransExample example) throws SQLException {
        int rows = getSqlMap().delete("BATCHCONFIRMSUBCLEARTRANS.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String subtransseqnbr, String transseqnbr) throws SQLException {
        Batchconfirmsubcleartrans _key = new Batchconfirmsubcleartrans();
        _key.setSubtransseqnbr(subtransseqnbr);
        _key.setTransseqnbr(transseqnbr);
        int rows = getSqlMap().delete("BATCHCONFIRMSUBCLEARTRANS.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static void insert(Batchconfirmsubcleartrans record) throws SQLException {
        getSqlMap().insert("BATCHCONFIRMSUBCLEARTRANS.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static void insertSelective(Batchconfirmsubcleartrans record) throws SQLException {
        getSqlMap().insert("BATCHCONFIRMSUBCLEARTRANS.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Batchconfirmsubcleartrans> selectByExample(BatchconfirmsubcleartransExample example) throws SQLException {
        List<Batchconfirmsubcleartrans> list = getSqlMap().queryForList("BATCHCONFIRMSUBCLEARTRANS.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static Batchconfirmsubcleartrans selectByPrimaryKey(String subtransseqnbr, String transseqnbr) throws SQLException {
        Batchconfirmsubcleartrans _key = new Batchconfirmsubcleartrans();
        _key.setSubtransseqnbr(subtransseqnbr);
        _key.setTransseqnbr(transseqnbr);
        Batchconfirmsubcleartrans record = (Batchconfirmsubcleartrans) getSqlMap().queryForObject("BATCHCONFIRMSUBCLEARTRANS.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Batchconfirmsubcleartrans record, BatchconfirmsubcleartransExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHCONFIRMSUBCLEARTRANS.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int updateByExample(Batchconfirmsubcleartrans record, BatchconfirmsubcleartransExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHCONFIRMSUBCLEARTRANS.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Batchconfirmsubcleartrans record) throws SQLException {
        int rows = getSqlMap().update("BATCHCONFIRMSUBCLEARTRANS.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Batchconfirmsubcleartrans record) throws SQLException {
        int rows = getSqlMap().update("BATCHCONFIRMSUBCLEARTRANS.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BATCHCONFIRMSUBCLEARTRANS
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BatchconfirmsubcleartransExample {
        private Object record;

        public UpdateByExampleParms(Object record, BatchconfirmsubcleartransExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}