package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Bankoption;
import com.csii.upp.dto.generate.BankoptionExample;

public class BankoptionDAO extends BasePayDAO {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int countByExample(BankoptionExample example) throws SQLException {
		Integer count = (Integer) getSqlMap().queryForObject(
				"BANKOPTION.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int deleteByExample(BankoptionExample example) throws SQLException {
		int rows = getSqlMap().delete("BANKOPTION.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int deleteByPrimaryKey(String bankoptioncd, Long bankorgnbr)
			throws SQLException {
		Bankoption _key = new Bankoption();
		_key.setBankoptioncd(bankoptioncd);
		_key.setBankorgnbr(bankorgnbr);
		int rows = getSqlMap().delete("BANKOPTION.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static void insert(Bankoption record) throws SQLException {
		getSqlMap().insert("BANKOPTION.insert", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static void insertSelective(Bankoption record) throws SQLException {
		getSqlMap().insert("BANKOPTION.insertSelective", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Bankoption> selectByExample(BankoptionExample example)
			throws SQLException {
		List<Bankoption> list = getSqlMap().queryForList(
				"BANKOPTION.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static Bankoption selectByPrimaryKey(String bankoptioncd, Long bankorgnbr)
			throws SQLException {
		Bankoption _key = new Bankoption();
		_key.setBankoptioncd(bankoptioncd);
		_key.setBankorgnbr(bankorgnbr);
		Bankoption record = (Bankoption) getSqlMap().queryForObject(
				"BANKOPTION.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int updateByExampleSelective(Bankoption record,
			BankoptionExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("BANKOPTION.updateByExampleSelective",
				parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int updateByExample(Bankoption record, BankoptionExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("BANKOPTION.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeySelective(Bankoption record)
			throws SQLException {
		int rows = getSqlMap().update(
				"BANKOPTION.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	public static int updateByPrimaryKey(Bankoption record) throws SQLException {
		int rows = getSqlMap().update("BANKOPTION.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table BANKOPTION
	 * @mbggenerated
	 */
	protected static class UpdateByExampleParms extends BankoptionExample {
		private Object record;

		public UpdateByExampleParms(Object record, BankoptionExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}