package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Bonuspointparam;
import com.csii.upp.dto.generate.BonuspointparamExample;

public class BonuspointparamDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int countByExample(BonuspointparamExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BONUSPOINTPARAM.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int deleteByExample(BonuspointparamExample example) throws SQLException {
        int rows = getSqlMap().delete("BONUSPOINTPARAM.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String id) throws SQLException {
        Bonuspointparam _key = new Bonuspointparam();
        _key.setId(id);
        int rows = getSqlMap().delete("BONUSPOINTPARAM.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static void insert(Bonuspointparam record) throws SQLException {
        getSqlMap().insert("BONUSPOINTPARAM.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static void insertSelective(Bonuspointparam record) throws SQLException {
        getSqlMap().insert("BONUSPOINTPARAM.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Bonuspointparam> selectByExample(BonuspointparamExample example) throws SQLException {
        List<Bonuspointparam> list = getSqlMap().queryForList("BONUSPOINTPARAM.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static Bonuspointparam selectByPrimaryKey(String id) throws SQLException {
        Bonuspointparam _key = new Bonuspointparam();
        _key.setId(id);
        Bonuspointparam record = (Bonuspointparam) getSqlMap().queryForObject("BONUSPOINTPARAM.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Bonuspointparam record, BonuspointparamExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BONUSPOINTPARAM.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int updateByExample(Bonuspointparam record, BonuspointparamExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BONUSPOINTPARAM.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Bonuspointparam record) throws SQLException {
        int rows = getSqlMap().update("BONUSPOINTPARAM.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Bonuspointparam record) throws SQLException {
        int rows = getSqlMap().update("BONUSPOINTPARAM.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BONUSPOINTPARAM
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BonuspointparamExample {
        private Object record;

        public UpdateByExampleParms(Object record, BonuspointparamExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}