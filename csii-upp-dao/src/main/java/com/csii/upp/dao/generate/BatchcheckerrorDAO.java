package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Batchcheckerror;
import com.csii.upp.dto.generate.BatchcheckerrorExample;

public class BatchcheckerrorDAO extends BasePayDAO {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int countByExample(BatchcheckerrorExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BATCHCHECKERROR.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int deleteByExample(BatchcheckerrorExample example) throws SQLException {
        int rows = getSqlMap().delete("BATCHCHECKERROR.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String errornbr) throws SQLException {
        Batchcheckerror _key = new Batchcheckerror();
        _key.setErrornbr(errornbr);
        int rows = getSqlMap().delete("BATCHCHECKERROR.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static void insert(Batchcheckerror record) throws SQLException {
        getSqlMap().insert("BATCHCHECKERROR.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static void insertSelective(Batchcheckerror record) throws SQLException {
        getSqlMap().insert("BATCHCHECKERROR.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Batchcheckerror> selectByExample(BatchcheckerrorExample example) throws SQLException {
        List<Batchcheckerror> list = getSqlMap().queryForList("BATCHCHECKERROR.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static Batchcheckerror selectByPrimaryKey(String errornbr) throws SQLException {
        Batchcheckerror _key = new Batchcheckerror();
        _key.setErrornbr(errornbr);
        Batchcheckerror record = (Batchcheckerror) getSqlMap().queryForObject("BATCHCHECKERROR.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Batchcheckerror record, BatchcheckerrorExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHCHECKERROR.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int updateByExample(Batchcheckerror record, BatchcheckerrorExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHCHECKERROR.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Batchcheckerror record) throws SQLException {
        int rows = getSqlMap().update("BATCHCHECKERROR.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Batchcheckerror record) throws SQLException {
        int rows = getSqlMap().update("BATCHCHECKERROR.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BATCHCHECKERROR
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BatchcheckerrorExample {
        private Object record;

        public UpdateByExampleParms(Object record, BatchcheckerrorExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}