package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Userlogininfo;
import com.csii.upp.dto.generate.UserlogininfoExample;

public class UserlogininfoDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int countByExample(UserlogininfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("USERLOGININFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(UserlogininfoExample example) throws SQLException {
        int rows = getSqlMap().delete("USERLOGININFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String usernbr) throws SQLException {
        Userlogininfo _key = new Userlogininfo();
        _key.setUsernbr(usernbr);
        int rows = getSqlMap().delete("USERLOGININFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static void insert(Userlogininfo record) throws SQLException {
        getSqlMap().insert("USERLOGININFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Userlogininfo record) throws SQLException {
        getSqlMap().insert("USERLOGININFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Userlogininfo> selectByExample(UserlogininfoExample example) throws SQLException {
        List<Userlogininfo> list = getSqlMap().queryForList("USERLOGININFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static Userlogininfo selectByPrimaryKey(String usernbr) throws SQLException {
        Userlogininfo _key = new Userlogininfo();
        _key.setUsernbr(usernbr);
        Userlogininfo record = (Userlogininfo) getSqlMap().queryForObject("USERLOGININFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Userlogininfo record, UserlogininfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("USERLOGININFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Userlogininfo record, UserlogininfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("USERLOGININFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Userlogininfo record) throws SQLException {
        int rows = getSqlMap().update("USERLOGININFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Userlogininfo record) throws SQLException {
        int rows = getSqlMap().update("USERLOGININFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USERLOGININFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends UserlogininfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, UserlogininfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}