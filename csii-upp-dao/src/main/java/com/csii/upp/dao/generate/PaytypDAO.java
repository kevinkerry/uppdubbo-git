package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Paytyp;
import com.csii.upp.dto.generate.PaytypExample;

public class PaytypDAO extends BasePayDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int countByExample(PaytypExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("PAYTYP.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int deleteByExample(PaytypExample example) throws SQLException {
        int rows = getSqlMap().delete("PAYTYP.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String paytypcd) throws SQLException {
        Paytyp _key = new Paytyp();
        _key.setPaytypcd(paytypcd);
        int rows = getSqlMap().delete("PAYTYP.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static void insert(Paytyp record) throws SQLException {
        getSqlMap().insert("PAYTYP.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static void insertSelective(Paytyp record) throws SQLException {
        getSqlMap().insert("PAYTYP.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Paytyp> selectByExample(PaytypExample example) throws SQLException {
        List<Paytyp> list = getSqlMap().queryForList("PAYTYP.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static Paytyp selectByPrimaryKey(String paytypcd) throws SQLException {
        Paytyp _key = new Paytyp();
        _key.setPaytypcd(paytypcd);
        Paytyp record = (Paytyp) getSqlMap().queryForObject("PAYTYP.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Paytyp record, PaytypExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("PAYTYP.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int updateByExample(Paytyp record, PaytypExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("PAYTYP.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Paytyp record) throws SQLException {
        int rows = getSqlMap().update("PAYTYP.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Paytyp record) throws SQLException {
        int rows = getSqlMap().update("PAYTYP.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PAYTYP
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends PaytypExample {
        private Object record;

        public UpdateByExampleParms(Object record, PaytypExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}