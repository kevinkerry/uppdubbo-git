package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Merplatformuserpaytypsign;
import com.csii.upp.dto.generate.MerplatformuserpaytypsignExample;

public class MerplatformuserpaytypsignDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int countByExample(MerplatformuserpaytypsignExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERPLATFORMUSERPAYTYPSIGN.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int deleteByExample(MerplatformuserpaytypsignExample example) throws SQLException {
        int rows = getSqlMap().delete("MERPLATFORMUSERPAYTYPSIGN.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String signnbr, String signtypcd) throws SQLException {
        Merplatformuserpaytypsign _key = new Merplatformuserpaytypsign();
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        int rows = getSqlMap().delete("MERPLATFORMUSERPAYTYPSIGN.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static void insert(Merplatformuserpaytypsign record) throws SQLException {
        getSqlMap().insert("MERPLATFORMUSERPAYTYPSIGN.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static void insertSelective(Merplatformuserpaytypsign record) throws SQLException {
        getSqlMap().insert("MERPLATFORMUSERPAYTYPSIGN.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Merplatformuserpaytypsign> selectByExample(MerplatformuserpaytypsignExample example) throws SQLException {
        List<Merplatformuserpaytypsign> list = getSqlMap().queryForList("MERPLATFORMUSERPAYTYPSIGN.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static Merplatformuserpaytypsign selectByPrimaryKey(String signnbr, String signtypcd) throws SQLException {
        Merplatformuserpaytypsign _key = new Merplatformuserpaytypsign();
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        Merplatformuserpaytypsign record = (Merplatformuserpaytypsign) getSqlMap().queryForObject("MERPLATFORMUSERPAYTYPSIGN.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Merplatformuserpaytypsign record, MerplatformuserpaytypsignExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERPLATFORMUSERPAYTYPSIGN.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int updateByExample(Merplatformuserpaytypsign record, MerplatformuserpaytypsignExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERPLATFORMUSERPAYTYPSIGN.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Merplatformuserpaytypsign record) throws SQLException {
        int rows = getSqlMap().update("MERPLATFORMUSERPAYTYPSIGN.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Merplatformuserpaytypsign record) throws SQLException {
        int rows = getSqlMap().update("MERPLATFORMUSERPAYTYPSIGN.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERPLATFORMUSERPAYTYPSIGN
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MerplatformuserpaytypsignExample {
        private Object record;

        public UpdateByExampleParms(Object record, MerplatformuserpaytypsignExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}