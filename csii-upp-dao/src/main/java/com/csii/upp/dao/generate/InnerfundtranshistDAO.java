package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Innerfundtranshist;
import com.csii.upp.dto.generate.InnerfundtranshistExample;

public class InnerfundtranshistDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int countByExample(InnerfundtranshistExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("INNERFUNDTRANSHIST.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int deleteByExample(InnerfundtranshistExample example) throws SQLException {
        int rows = getSqlMap().delete("INNERFUNDTRANSHIST.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String innerfundtransnbr) throws SQLException {
        Innerfundtranshist _key = new Innerfundtranshist();
        _key.setInnerfundtransnbr(innerfundtransnbr);
        int rows = getSqlMap().delete("INNERFUNDTRANSHIST.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static void insert(Innerfundtranshist record) throws SQLException {
        getSqlMap().insert("INNERFUNDTRANSHIST.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static void insertSelective(Innerfundtranshist record) throws SQLException {
        getSqlMap().insert("INNERFUNDTRANSHIST.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Innerfundtranshist> selectByExample(InnerfundtranshistExample example) throws SQLException {
        List<Innerfundtranshist> list = getSqlMap().queryForList("INNERFUNDTRANSHIST.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static Innerfundtranshist selectByPrimaryKey(String innerfundtransnbr) throws SQLException {
        Innerfundtranshist _key = new Innerfundtranshist();
        _key.setInnerfundtransnbr(innerfundtransnbr);
        Innerfundtranshist record = (Innerfundtranshist) getSqlMap().queryForObject("INNERFUNDTRANSHIST.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Innerfundtranshist record, InnerfundtranshistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("INNERFUNDTRANSHIST.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByExample(Innerfundtranshist record, InnerfundtranshistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("INNERFUNDTRANSHIST.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Innerfundtranshist record) throws SQLException {
        int rows = getSqlMap().update("INNERFUNDTRANSHIST.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Innerfundtranshist record) throws SQLException {
        int rows = getSqlMap().update("INNERFUNDTRANSHIST.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNERFUNDTRANSHIST
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends InnerfundtranshistExample {
        private Object record;

        public UpdateByExampleParms(Object record, InnerfundtranshistExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}