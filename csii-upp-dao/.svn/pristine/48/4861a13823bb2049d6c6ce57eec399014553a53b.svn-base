package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Queapplerror;
import com.csii.upp.dto.generate.QueapplerrorExample;

public class QueapplerrorDAO extends BasePayDAO {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int countByExample(QueapplerrorExample example) throws SQLException {
		Integer count = (Integer) getSqlMap().queryForObject(
				"QUEAPPLERROR.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int deleteByExample(QueapplerrorExample example) throws SQLException {
		int rows = getSqlMap().delete("QUEAPPLERROR.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int deleteByPrimaryKey(Long quenbr, Long applnbr, Long quesubnbr,
			Long runseqnbr, Long errorseqnbr) throws SQLException {
		Queapplerror _key = new Queapplerror();
		_key.setQuenbr(quenbr);
		_key.setApplnbr(applnbr);
		_key.setQuesubnbr(quesubnbr);
		_key.setRunseqnbr(runseqnbr);
		_key.setErrorseqnbr(errorseqnbr);
		int rows = getSqlMap().delete("QUEAPPLERROR.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static void insert(Queapplerror record) throws SQLException {
		getSqlMap().insert("QUEAPPLERROR.insert", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static void insertSelective(Queapplerror record) throws SQLException {
		getSqlMap().insert("QUEAPPLERROR.insertSelective", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Queapplerror> selectByExampleWithBLOBs(
			QueapplerrorExample example) throws SQLException {
		List<Queapplerror> list = getSqlMap().queryForList(
				"QUEAPPLERROR.selectByExampleWithBLOBs", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Queapplerror> selectByExampleWithoutBLOBs(
			QueapplerrorExample example) throws SQLException {
		List<Queapplerror> list = getSqlMap().queryForList(
				"QUEAPPLERROR.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static Queapplerror selectByPrimaryKey(Long quenbr, Long applnbr,
			Long quesubnbr, Long runseqnbr, Long errorseqnbr)
			throws SQLException {
		Queapplerror _key = new Queapplerror();
		_key.setQuenbr(quenbr);
		_key.setApplnbr(applnbr);
		_key.setQuesubnbr(quesubnbr);
		_key.setRunseqnbr(runseqnbr);
		_key.setErrorseqnbr(errorseqnbr);
		Queapplerror record = (Queapplerror) getSqlMap().queryForObject(
				"QUEAPPLERROR.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int updateByExampleSelective(Queapplerror record,
			QueapplerrorExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUEAPPLERROR.updateByExampleSelective",
				parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int updateByExampleWithBLOBs(Queapplerror record,
			QueapplerrorExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUEAPPLERROR.updateByExampleWithBLOBs",
				parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int updateByExampleWithoutBLOBs(Queapplerror record,
			QueapplerrorExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUEAPPLERROR.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeySelective(Queapplerror record)
			throws SQLException {
		int rows = getSqlMap().update(
				"QUEAPPLERROR.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeyWithBLOBs(Queapplerror record)
			throws SQLException {
		int rows = getSqlMap().update(
				"QUEAPPLERROR.updateByPrimaryKeyWithBLOBs", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeyWithoutBLOBs(Queapplerror record)
			throws SQLException {
		int rows = getSqlMap().update("QUEAPPLERROR.updateByPrimaryKey",
				record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table QUEAPPLERROR
	 * @mbggenerated
	 */
	protected static class UpdateByExampleParms extends QueapplerrorExample {
		private Object record;

		public UpdateByExampleParms(Object record, QueapplerrorExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}