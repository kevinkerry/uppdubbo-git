package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Que;
import com.csii.upp.dto.generate.QueExample;

public class QueDAO extends BasePayDAO {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int countByExample(QueExample example) throws SQLException {
		Integer count = (Integer) getSqlMap().queryForObject(
				"QUE.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int deleteByExample(QueExample example) throws SQLException {
		int rows = getSqlMap().delete("QUE.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int deleteByPrimaryKey(Long quenbr) throws SQLException {
		Que _key = new Que();
		_key.setQuenbr(quenbr);
		int rows = getSqlMap().delete("QUE.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static void insert(Que record) throws SQLException {
		getSqlMap().insert("QUE.insert", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static void insertSelective(Que record) throws SQLException {
		getSqlMap().insert("QUE.insertSelective", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Que> selectByExample(QueExample example) throws SQLException {
		List<Que> list = getSqlMap().queryForList("QUE.selectByExample",
				example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static Que selectByPrimaryKey(Long quenbr) throws SQLException {
		Que _key = new Que();
		_key.setQuenbr(quenbr);
		Que record = (Que) getSqlMap().queryForObject(
				"QUE.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int updateByExampleSelective(Que record, QueExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUE.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int updateByExample(Que record, QueExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUE.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeySelective(Que record) throws SQLException {
		int rows = getSqlMap().update("QUE.updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUE
	 * @mbggenerated
	 */
	public static int updateByPrimaryKey(Que record) throws SQLException {
		int rows = getSqlMap().update("QUE.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table QUE
	 * @mbggenerated
	 */
	protected static class UpdateByExampleParms extends QueExample {
		private Object record;

		public UpdateByExampleParms(Object record, QueExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}