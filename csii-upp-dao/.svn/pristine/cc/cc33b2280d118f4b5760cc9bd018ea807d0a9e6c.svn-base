package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Fundchannel;
import com.csii.upp.dto.generate.FundchannelExample;

public class FundchannelDAO extends BasePayDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int countByExample(FundchannelExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("FUNDCHANNEL.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int deleteByExample(FundchannelExample example) throws SQLException {
        int rows = getSqlMap().delete("FUNDCHANNEL.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String fundchannelcode) throws SQLException {
        Fundchannel _key = new Fundchannel();
        _key.setFundchannelcode(fundchannelcode);
        int rows = getSqlMap().delete("FUNDCHANNEL.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static void insert(Fundchannel record) throws SQLException {
        getSqlMap().insert("FUNDCHANNEL.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static void insertSelective(Fundchannel record) throws SQLException {
        getSqlMap().insert("FUNDCHANNEL.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Fundchannel> selectByExample(FundchannelExample example) throws SQLException {
        List<Fundchannel> list = getSqlMap().queryForList("FUNDCHANNEL.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static Fundchannel selectByPrimaryKey(String fundchannelcode) throws SQLException {
        Fundchannel _key = new Fundchannel();
        _key.setFundchannelcode(fundchannelcode);
        Fundchannel record = (Fundchannel) getSqlMap().queryForObject("FUNDCHANNEL.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Fundchannel record, FundchannelExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("FUNDCHANNEL.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int updateByExample(Fundchannel record, FundchannelExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("FUNDCHANNEL.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Fundchannel record) throws SQLException {
        int rows = getSqlMap().update("FUNDCHANNEL.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Fundchannel record) throws SQLException {
        int rows = getSqlMap().update("FUNDCHANNEL.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FUNDCHANNEL
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends FundchannelExample {
        private Object record;

        public UpdateByExampleParms(Object record, FundchannelExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}