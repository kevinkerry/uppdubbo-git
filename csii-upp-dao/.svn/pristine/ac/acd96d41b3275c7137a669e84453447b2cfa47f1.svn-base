package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Keyinfo;
import com.csii.upp.dto.generate.KeyinfoExample;

public class KeyinfoDAO extends BasePayDAO {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int countByExample(KeyinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("KEYINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(KeyinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("KEYINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String keyid) throws SQLException {
        Keyinfo _key = new Keyinfo();
        _key.setKeyid(keyid);
        int rows = getSqlMap().delete("KEYINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static void insert(Keyinfo record) throws SQLException {
        getSqlMap().insert("KEYINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Keyinfo record) throws SQLException {
        getSqlMap().insert("KEYINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Keyinfo> selectByExample(KeyinfoExample example) throws SQLException {
        List<Keyinfo> list = getSqlMap().queryForList("KEYINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static Keyinfo selectByPrimaryKey(String keyid) throws SQLException {
        Keyinfo _key = new Keyinfo();
        _key.setKeyid(keyid);
        Keyinfo record = (Keyinfo) getSqlMap().queryForObject("KEYINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Keyinfo record, KeyinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("KEYINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Keyinfo record, KeyinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("KEYINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Keyinfo record) throws SQLException {
        int rows = getSqlMap().update("KEYINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Keyinfo record) throws SQLException {
        int rows = getSqlMap().update("KEYINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table KEYINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends KeyinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, KeyinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}