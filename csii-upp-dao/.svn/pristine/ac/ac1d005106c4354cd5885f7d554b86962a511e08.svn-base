package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Batchfeeprofitdaysettle;
import com.csii.upp.dto.generate.BatchfeeprofitdaysettleExample;

public class BatchfeeprofitdaysettleDAO extends BasePayDAO{

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int countByExample(BatchfeeprofitdaysettleExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BATCHFEEPROFITDAYSETTLE.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int deleteByExample(BatchfeeprofitdaysettleExample example) throws SQLException {
        int rows = getSqlMap().delete("BATCHFEEPROFITDAYSETTLE.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int deleteByPrimaryKey(String settleseqnbr) throws SQLException {
        Batchfeeprofitdaysettle _key = new Batchfeeprofitdaysettle();
        _key.setSettleseqnbr(settleseqnbr);
        int rows = getSqlMap().delete("BATCHFEEPROFITDAYSETTLE.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  void insert(Batchfeeprofitdaysettle record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITDAYSETTLE.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  void insertSelective(Batchfeeprofitdaysettle record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITDAYSETTLE.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static  List<Batchfeeprofitdaysettle> selectByExample(BatchfeeprofitdaysettleExample example) throws SQLException {
        List<Batchfeeprofitdaysettle> list = getSqlMap().queryForList("BATCHFEEPROFITDAYSETTLE.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  Batchfeeprofitdaysettle selectByPrimaryKey(String settleseqnbr) throws SQLException {
        Batchfeeprofitdaysettle _key = new Batchfeeprofitdaysettle();
        _key.setSettleseqnbr(settleseqnbr);
        Batchfeeprofitdaysettle record = (Batchfeeprofitdaysettle) getSqlMap().queryForObject("BATCHFEEPROFITDAYSETTLE.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByExampleSelective(Batchfeeprofitdaysettle record, BatchfeeprofitdaysettleExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITDAYSETTLE.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByExample(Batchfeeprofitdaysettle record, BatchfeeprofitdaysettleExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITDAYSETTLE.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKeySelective(Batchfeeprofitdaysettle record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITDAYSETTLE.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKey(Batchfeeprofitdaysettle record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITDAYSETTLE.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BATCHFEEPROFITDAYSETTLE
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BatchfeeprofitdaysettleExample {
        private Object record;

        public UpdateByExampleParms(Object record, BatchfeeprofitdaysettleExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}