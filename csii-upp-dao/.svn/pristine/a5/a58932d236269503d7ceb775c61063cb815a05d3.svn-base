package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Overalltrans;
import com.csii.upp.dto.generate.OveralltransExample;

public class OveralltransDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int countByExample(OveralltransExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("OVERALLTRANS.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int deleteByExample(OveralltransExample example) throws SQLException {
        int rows = getSqlMap().delete("OVERALLTRANS.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String overalltransnbr) throws SQLException {
        Overalltrans _key = new Overalltrans();
        _key.setOveralltransnbr(overalltransnbr);
        int rows = getSqlMap().delete("OVERALLTRANS.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static void insert(Overalltrans record) throws SQLException {
        getSqlMap().insert("OVERALLTRANS.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static void insertSelective(Overalltrans record) throws SQLException {
        getSqlMap().insert("OVERALLTRANS.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Overalltrans> selectByExample(OveralltransExample example) throws SQLException {
        List<Overalltrans> list = getSqlMap().queryForList("OVERALLTRANS.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static Overalltrans selectByPrimaryKey(String overalltransnbr) throws SQLException {
        Overalltrans _key = new Overalltrans();
        _key.setOveralltransnbr(overalltransnbr);
        Overalltrans record = (Overalltrans) getSqlMap().queryForObject("OVERALLTRANS.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Overalltrans record, OveralltransExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLTRANS.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int updateByExample(Overalltrans record, OveralltransExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLTRANS.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Overalltrans record) throws SQLException {
        int rows = getSqlMap().update("OVERALLTRANS.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Overalltrans record) throws SQLException {
        int rows = getSqlMap().update("OVERALLTRANS.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table OVERALLTRANS
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OveralltransExample {
        private Object record;

        public UpdateByExampleParms(Object record, OveralltransExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}