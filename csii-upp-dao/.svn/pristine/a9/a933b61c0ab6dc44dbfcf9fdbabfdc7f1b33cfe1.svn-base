package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Overalltranshist;
import com.csii.upp.dto.generate.OveralltranshistExample;

public class OveralltranshistDAO extends BasePayDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int countByExample(OveralltranshistExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("OVERALLTRANSHIST.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int deleteByExample(OveralltranshistExample example) throws SQLException {
        int rows = getSqlMap().delete("OVERALLTRANSHIST.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String overalltransnbr) throws SQLException {
        Overalltranshist _key = new Overalltranshist();
        _key.setOveralltransnbr(overalltransnbr);
        int rows = getSqlMap().delete("OVERALLTRANSHIST.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static void insert(Overalltranshist record) throws SQLException {
        getSqlMap().insert("OVERALLTRANSHIST.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static void insertSelective(Overalltranshist record) throws SQLException {
        getSqlMap().insert("OVERALLTRANSHIST.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Overalltranshist> selectByExample(OveralltranshistExample example) throws SQLException {
        List<Overalltranshist> list = getSqlMap().queryForList("OVERALLTRANSHIST.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static Overalltranshist selectByPrimaryKey(String overalltransnbr) throws SQLException {
        Overalltranshist _key = new Overalltranshist();
        _key.setOveralltransnbr(overalltransnbr);
        Overalltranshist record = (Overalltranshist) getSqlMap().queryForObject("OVERALLTRANSHIST.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Overalltranshist record, OveralltranshistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLTRANSHIST.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByExample(Overalltranshist record, OveralltranshistExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLTRANSHIST.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Overalltranshist record) throws SQLException {
        int rows = getSqlMap().update("OVERALLTRANSHIST.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Overalltranshist record) throws SQLException {
        int rows = getSqlMap().update("OVERALLTRANSHIST.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table OVERALLTRANSHIST
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OveralltranshistExample {
        private Object record;

        public UpdateByExampleParms(Object record, OveralltranshistExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}