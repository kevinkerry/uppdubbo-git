package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Userfundchannelsigninfo;
import com.csii.upp.dto.generate.UserfundchannelsigninfoExample;

public class UserfundchannelsigninfoDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int countByExample(UserfundchannelsigninfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("USERFUNDCHANNELSIGNINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(UserfundchannelsigninfoExample example) throws SQLException {
        int rows = getSqlMap().delete("USERFUNDCHANNELSIGNINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String signnbr, String signtypcd) throws SQLException {
        Userfundchannelsigninfo _key = new Userfundchannelsigninfo();
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        int rows = getSqlMap().delete("USERFUNDCHANNELSIGNINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static void insert(Userfundchannelsigninfo record) throws SQLException {
        getSqlMap().insert("USERFUNDCHANNELSIGNINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Userfundchannelsigninfo record) throws SQLException {
        getSqlMap().insert("USERFUNDCHANNELSIGNINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Userfundchannelsigninfo> selectByExample(UserfundchannelsigninfoExample example) throws SQLException {
        List<Userfundchannelsigninfo> list = getSqlMap().queryForList("USERFUNDCHANNELSIGNINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static Userfundchannelsigninfo selectByPrimaryKey(String signnbr, String signtypcd) throws SQLException {
        Userfundchannelsigninfo _key = new Userfundchannelsigninfo();
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        Userfundchannelsigninfo record = (Userfundchannelsigninfo) getSqlMap().queryForObject("USERFUNDCHANNELSIGNINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Userfundchannelsigninfo record, UserfundchannelsigninfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("USERFUNDCHANNELSIGNINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Userfundchannelsigninfo record, UserfundchannelsigninfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("USERFUNDCHANNELSIGNINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Userfundchannelsigninfo record) throws SQLException {
        int rows = getSqlMap().update("USERFUNDCHANNELSIGNINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Userfundchannelsigninfo record) throws SQLException {
        int rows = getSqlMap().update("USERFUNDCHANNELSIGNINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USERFUNDCHANNELSIGNINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends UserfundchannelsigninfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, UserfundchannelsigninfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}