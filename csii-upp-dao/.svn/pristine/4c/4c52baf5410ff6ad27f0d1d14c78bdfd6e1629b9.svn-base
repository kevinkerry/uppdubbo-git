package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Overalltranshistall;
import com.csii.upp.dto.generate.OveralltranshistallExample;

public class OveralltranshistallDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int countByExample(OveralltranshistallExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("OVERALLTRANSHISTALL.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int deleteByExample(OveralltranshistallExample example) throws SQLException {
        int rows = getSqlMap().delete("OVERALLTRANSHISTALL.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String overalltransnbr) throws SQLException {
        Overalltranshistall _key = new Overalltranshistall();
        _key.setOveralltransnbr(overalltransnbr);
        int rows = getSqlMap().delete("OVERALLTRANSHISTALL.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static void insert(Overalltranshistall record) throws SQLException {
        getSqlMap().insert("OVERALLTRANSHISTALL.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static void insertSelective(Overalltranshistall record) throws SQLException {
        getSqlMap().insert("OVERALLTRANSHISTALL.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Overalltranshistall> selectByExample(OveralltranshistallExample example) throws SQLException {
        List<Overalltranshistall> list = getSqlMap().queryForList("OVERALLTRANSHISTALL.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static Overalltranshistall selectByPrimaryKey(String overalltransnbr) throws SQLException {
        Overalltranshistall _key = new Overalltranshistall();
        _key.setOveralltransnbr(overalltransnbr);
        Overalltranshistall record = (Overalltranshistall) getSqlMap().queryForObject("OVERALLTRANSHISTALL.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Overalltranshistall record, OveralltranshistallExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLTRANSHISTALL.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int updateByExample(Overalltranshistall record, OveralltranshistallExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("OVERALLTRANSHISTALL.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Overalltranshistall record) throws SQLException {
        int rows = getSqlMap().update("OVERALLTRANSHISTALL.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Overalltranshistall record) throws SQLException {
        int rows = getSqlMap().update("OVERALLTRANSHISTALL.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table OVERALLTRANSHISTALL
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends OveralltranshistallExample {
        private Object record;

        public UpdateByExampleParms(Object record, OveralltranshistallExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}