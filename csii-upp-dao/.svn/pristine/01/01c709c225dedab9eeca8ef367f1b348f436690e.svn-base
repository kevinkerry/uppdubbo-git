package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Batchfeeprofitsettle;
import com.csii.upp.dto.generate.BatchfeeprofitsettleExample;

public class BatchfeeprofitsettleDAO extends BasePayDAO{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int countByExample(BatchfeeprofitsettleExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BATCHFEEPROFITSETTLE.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int deleteByExample(BatchfeeprofitsettleExample example) throws SQLException {
        int rows = getSqlMap().delete("BATCHFEEPROFITSETTLE.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int deleteByPrimaryKey(String settleseqnbr) throws SQLException {
        Batchfeeprofitsettle _key = new Batchfeeprofitsettle();
        _key.setSettleseqnbr(settleseqnbr);
        int rows = getSqlMap().delete("BATCHFEEPROFITSETTLE.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  void insert(Batchfeeprofitsettle record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITSETTLE.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  void insertSelective(Batchfeeprofitsettle record) throws SQLException {
        getSqlMap().insert("BATCHFEEPROFITSETTLE.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static  List<Batchfeeprofitsettle> selectByExample(BatchfeeprofitsettleExample example) throws SQLException {
        List<Batchfeeprofitsettle> list = getSqlMap().queryForList("BATCHFEEPROFITSETTLE.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  Batchfeeprofitsettle selectByPrimaryKey(String settleseqnbr) throws SQLException {
        Batchfeeprofitsettle _key = new Batchfeeprofitsettle();
        _key.setSettleseqnbr(settleseqnbr);
        Batchfeeprofitsettle record = (Batchfeeprofitsettle) getSqlMap().queryForObject("BATCHFEEPROFITSETTLE.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByExampleSelective(Batchfeeprofitsettle record, BatchfeeprofitsettleExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLE.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByExample(Batchfeeprofitsettle record, BatchfeeprofitsettleExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLE.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKeySelective(Batchfeeprofitsettle record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLE.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKey(Batchfeeprofitsettle record) throws SQLException {
        int rows = getSqlMap().update("BATCHFEEPROFITSETTLE.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BATCHFEEPROFITSETTLE
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BatchfeeprofitsettleExample {
        private Object record;

        public UpdateByExampleParms(Object record, BatchfeeprofitsettleExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}