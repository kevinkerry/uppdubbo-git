package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Supplier;
import com.csii.upp.dto.generate.SupplierExample;

public class SupplierDAO extends BasePayDAO{

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static int countByExample(SupplierExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("SUPPLIER.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static int deleteByExample(SupplierExample example) throws SQLException {
        int rows = getSqlMap().delete("SUPPLIER.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String suppliernbr) throws SQLException {
        Supplier _key = new Supplier();
        _key.setSuppliernbr(suppliernbr);
        int rows = getSqlMap().delete("SUPPLIER.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static void insert(Supplier record) throws SQLException {
        getSqlMap().insert("SUPPLIER.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static void insertSelective(Supplier record) throws SQLException {
        getSqlMap().insert("SUPPLIER.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Supplier> selectByExample(SupplierExample example) throws SQLException {
        List<Supplier> list = getSqlMap().queryForList("SUPPLIER.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static Supplier selectByPrimaryKey(String suppliernbr) throws SQLException {
        Supplier _key = new Supplier();
        _key.setSuppliernbr(suppliernbr);
        Supplier record = (Supplier) getSqlMap().queryForObject("SUPPLIER.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Supplier record, SupplierExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("SUPPLIER.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static int updateByExample(Supplier record, SupplierExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("SUPPLIER.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Supplier record) throws SQLException {
        int rows = getSqlMap().update("SUPPLIER.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    public int updateByPrimaryKey(Supplier record) throws SQLException {
        int rows = getSqlMap().update("SUPPLIER.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SUPPLIER
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends SupplierExample {
        private Object record;

        public UpdateByExampleParms(Object record, SupplierExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}