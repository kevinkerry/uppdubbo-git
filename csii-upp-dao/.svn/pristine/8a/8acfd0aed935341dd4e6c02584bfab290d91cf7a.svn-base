package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Merplatform;
import com.csii.upp.dto.generate.MerplatformExample;

public class MerplatformDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int countByExample(MerplatformExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERPLATFORM.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int deleteByExample(MerplatformExample example) throws SQLException {
        int rows = getSqlMap().delete("MERPLATFORM.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String merplatformnbr) throws SQLException {
        Merplatform _key = new Merplatform();
        _key.setMerplatformnbr(merplatformnbr);
        int rows = getSqlMap().delete("MERPLATFORM.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static void insert(Merplatform record) throws SQLException {
        getSqlMap().insert("MERPLATFORM.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static void insertSelective(Merplatform record) throws SQLException {
        getSqlMap().insert("MERPLATFORM.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Merplatform> selectByExample(MerplatformExample example) throws SQLException {
        List<Merplatform> list = getSqlMap().queryForList("MERPLATFORM.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static Merplatform selectByPrimaryKey(String merplatformnbr) throws SQLException {
        Merplatform _key = new Merplatform();
        _key.setMerplatformnbr(merplatformnbr);
        Merplatform record = (Merplatform) getSqlMap().queryForObject("MERPLATFORM.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Merplatform record, MerplatformExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERPLATFORM.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int updateByExample(Merplatform record, MerplatformExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERPLATFORM.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Merplatform record) throws SQLException {
        int rows = getSqlMap().update("MERPLATFORM.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Merplatform record) throws SQLException {
        int rows = getSqlMap().update("MERPLATFORM.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERPLATFORM
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MerplatformExample {
        private Object record;

        public UpdateByExampleParms(Object record, MerplatformExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}