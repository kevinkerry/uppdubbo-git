package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Mernotifiyreg;
import com.csii.upp.dto.generate.MernotifiyregExample;

public class MernotifiyregDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int countByExample(MernotifiyregExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERNOTIFIYREG.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int deleteByExample(MernotifiyregExample example) throws SQLException {
        int rows = getSqlMap().delete("MERNOTIFIYREG.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String transseqnbr) throws SQLException {
        Mernotifiyreg _key = new Mernotifiyreg();
        _key.setTransseqnbr(transseqnbr);
        int rows = getSqlMap().delete("MERNOTIFIYREG.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static void insert(Mernotifiyreg record) throws SQLException {
        getSqlMap().insert("MERNOTIFIYREG.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static void insertSelective(Mernotifiyreg record) throws SQLException {
        getSqlMap().insert("MERNOTIFIYREG.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Mernotifiyreg> selectByExample(MernotifiyregExample example) throws SQLException {
        List<Mernotifiyreg> list = getSqlMap().queryForList("MERNOTIFIYREG.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static Mernotifiyreg selectByPrimaryKey(String transseqnbr) throws SQLException {
        Mernotifiyreg _key = new Mernotifiyreg();
        _key.setTransseqnbr(transseqnbr);
        Mernotifiyreg record = (Mernotifiyreg) getSqlMap().queryForObject("MERNOTIFIYREG.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Mernotifiyreg record, MernotifiyregExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERNOTIFIYREG.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int updateByExample(Mernotifiyreg record, MernotifiyregExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERNOTIFIYREG.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Mernotifiyreg record) throws SQLException {
        int rows = getSqlMap().update("MERNOTIFIYREG.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Mernotifiyreg record) throws SQLException {
        int rows = getSqlMap().update("MERNOTIFIYREG.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERNOTIFIYREG
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MernotifiyregExample {
        private Object record;

        public UpdateByExampleParms(Object record, MernotifiyregExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}