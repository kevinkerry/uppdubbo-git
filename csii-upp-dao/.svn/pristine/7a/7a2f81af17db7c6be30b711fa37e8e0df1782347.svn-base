package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Blackgrayinfo;
import com.csii.upp.dto.generate.BlackgrayinfoExample;

public class BlackgrayinfoDAO extends BasePayDAO {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int countByExample(BlackgrayinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BLACKGRAYINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(BlackgrayinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("BLACKGRAYINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String blacknbr) throws SQLException {
        Blackgrayinfo _key = new Blackgrayinfo();
        _key.setBlacknbr(blacknbr);
        int rows = getSqlMap().delete("BLACKGRAYINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static void insert(Blackgrayinfo record) throws SQLException {
        getSqlMap().insert("BLACKGRAYINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Blackgrayinfo record) throws SQLException {
        getSqlMap().insert("BLACKGRAYINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Blackgrayinfo> selectByExample(BlackgrayinfoExample example) throws SQLException {
        List<Blackgrayinfo> list = getSqlMap().queryForList("BLACKGRAYINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static Blackgrayinfo selectByPrimaryKey(String blacknbr) throws SQLException {
        Blackgrayinfo _key = new Blackgrayinfo();
        _key.setBlacknbr(blacknbr);
        Blackgrayinfo record = (Blackgrayinfo) getSqlMap().queryForObject("BLACKGRAYINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Blackgrayinfo record, BlackgrayinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BLACKGRAYINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Blackgrayinfo record, BlackgrayinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BLACKGRAYINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Blackgrayinfo record) throws SQLException {
        int rows = getSqlMap().update("BLACKGRAYINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Blackgrayinfo record) throws SQLException {
        int rows = getSqlMap().update("BLACKGRAYINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BLACKGRAYINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BlackgrayinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, BlackgrayinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}