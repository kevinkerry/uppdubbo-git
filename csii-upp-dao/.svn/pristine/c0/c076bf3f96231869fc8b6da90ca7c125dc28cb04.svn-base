package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Mertranslimit;
import com.csii.upp.dto.generate.MertranslimitExample;

public class MertranslimitDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int countByExample(MertranslimitExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERTRANSLIMIT.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int deleteByExample(MertranslimitExample example) throws SQLException {
        int rows = getSqlMap().delete("MERTRANSLIMIT.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String mernbr, String transtypcd, String paytypcd, String cardtypcd, String channelnbr) throws SQLException {
        Mertranslimit _key = new Mertranslimit();
        _key.setMernbr(mernbr);
        _key.setTranstypcd(transtypcd);
        _key.setPaytypcd(paytypcd);
        _key.setCardtypcd(cardtypcd);
        _key.setChannelnbr(channelnbr);
        int rows = getSqlMap().delete("MERTRANSLIMIT.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static void insert(Mertranslimit record) throws SQLException {
        getSqlMap().insert("MERTRANSLIMIT.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static void insertSelective(Mertranslimit record) throws SQLException {
        getSqlMap().insert("MERTRANSLIMIT.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Mertranslimit> selectByExample(MertranslimitExample example) throws SQLException {
        List<Mertranslimit> list = getSqlMap().queryForList("MERTRANSLIMIT.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static Mertranslimit selectByPrimaryKey(String mernbr, String transtypcd, String paytypcd, String cardtypcd, String channelnbr) throws SQLException {
        Mertranslimit _key = new Mertranslimit();
        _key.setMernbr(mernbr);
        _key.setTranstypcd(transtypcd);
        _key.setPaytypcd(paytypcd);
        _key.setCardtypcd(cardtypcd);
        _key.setChannelnbr(channelnbr);
        Mertranslimit record = (Mertranslimit) getSqlMap().queryForObject("MERTRANSLIMIT.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Mertranslimit record, MertranslimitExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERTRANSLIMIT.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int updateByExample(Mertranslimit record, MertranslimitExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERTRANSLIMIT.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Mertranslimit record) throws SQLException {
        int rows = getSqlMap().update("MERTRANSLIMIT.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Mertranslimit record) throws SQLException {
        int rows = getSqlMap().update("MERTRANSLIMIT.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERTRANSLIMIT
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MertranslimitExample {
        private Object record;

        public UpdateByExampleParms(Object record, MertranslimitExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}