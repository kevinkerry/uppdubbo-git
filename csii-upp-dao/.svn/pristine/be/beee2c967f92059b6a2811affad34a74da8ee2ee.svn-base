package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Bankroleinfo;
import com.csii.upp.dto.generate.BankroleinfoExample;

public class BankroleinfoDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int countByExample(BankroleinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("BANKROLEINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(BankroleinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("BANKROLEINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String rolenbr) throws SQLException {
        Bankroleinfo _key = new Bankroleinfo();
        _key.setRolenbr(rolenbr);
        int rows = getSqlMap().delete("BANKROLEINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static void insert(Bankroleinfo record) throws SQLException {
        getSqlMap().insert("BANKROLEINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Bankroleinfo record) throws SQLException {
        getSqlMap().insert("BANKROLEINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Bankroleinfo> selectByExample(BankroleinfoExample example) throws SQLException {
        List<Bankroleinfo> list = getSqlMap().queryForList("BANKROLEINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static Bankroleinfo selectByPrimaryKey(String rolenbr) throws SQLException {
        Bankroleinfo _key = new Bankroleinfo();
        _key.setRolenbr(rolenbr);
        Bankroleinfo record = (Bankroleinfo) getSqlMap().queryForObject("BANKROLEINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Bankroleinfo record, BankroleinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BANKROLEINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Bankroleinfo record, BankroleinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("BANKROLEINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Bankroleinfo record) throws SQLException {
        int rows = getSqlMap().update("BANKROLEINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Bankroleinfo record) throws SQLException {
        int rows = getSqlMap().update("BANKROLEINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BANKROLEINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends BankroleinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, BankroleinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}