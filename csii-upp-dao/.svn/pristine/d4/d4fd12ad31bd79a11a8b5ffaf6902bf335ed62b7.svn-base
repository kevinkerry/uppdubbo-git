package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Custbonuspointdata;
import com.csii.upp.dto.generate.CustbonuspointdataExample;

public class CustbonuspointdataDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int countByExample(CustbonuspointdataExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("CUSTBONUSPOINTDATA.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int deleteByExample(CustbonuspointdataExample example) throws SQLException {
        int rows = getSqlMap().delete("CUSTBONUSPOINTDATA.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String custnbr) throws SQLException {
        Custbonuspointdata _key = new Custbonuspointdata();
        _key.setCustnbr(custnbr);
        int rows = getSqlMap().delete("CUSTBONUSPOINTDATA.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static void insert(Custbonuspointdata record) throws SQLException {
        getSqlMap().insert("CUSTBONUSPOINTDATA.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static void insertSelective(Custbonuspointdata record) throws SQLException {
        getSqlMap().insert("CUSTBONUSPOINTDATA.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Custbonuspointdata> selectByExample(CustbonuspointdataExample example) throws SQLException {
        List<Custbonuspointdata> list = getSqlMap().queryForList("CUSTBONUSPOINTDATA.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static Custbonuspointdata selectByPrimaryKey(String custnbr) throws SQLException {
        Custbonuspointdata _key = new Custbonuspointdata();
        _key.setCustnbr(custnbr);
        Custbonuspointdata record = (Custbonuspointdata) getSqlMap().queryForObject("CUSTBONUSPOINTDATA.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Custbonuspointdata record, CustbonuspointdataExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("CUSTBONUSPOINTDATA.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int updateByExample(Custbonuspointdata record, CustbonuspointdataExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("CUSTBONUSPOINTDATA.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Custbonuspointdata record) throws SQLException {
        int rows = getSqlMap().update("CUSTBONUSPOINTDATA.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Custbonuspointdata record) throws SQLException {
        int rows = getSqlMap().update("CUSTBONUSPOINTDATA.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CUSTBONUSPOINTDATA
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends CustbonuspointdataExample {
        private Object record;

        public UpdateByExampleParms(Object record, CustbonuspointdataExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}