package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Involvedtradinginfo;
import com.csii.upp.dto.generate.InvolvedtradinginfoExample;

public class InvolvedtradinginfoDAO extends BasePayDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int countByExample(InvolvedtradinginfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("INVOLVEDTRADINGINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(InvolvedtradinginfoExample example) throws SQLException {
        int rows = getSqlMap().delete("INVOLVEDTRADINGINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String blacktransnbr) throws SQLException {
        Involvedtradinginfo _key = new Involvedtradinginfo();
        _key.setBlacktransnbr(blacktransnbr);
        int rows = getSqlMap().delete("INVOLVEDTRADINGINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static void insert(Involvedtradinginfo record) throws SQLException {
        getSqlMap().insert("INVOLVEDTRADINGINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Involvedtradinginfo record) throws SQLException {
        getSqlMap().insert("INVOLVEDTRADINGINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Involvedtradinginfo> selectByExample(InvolvedtradinginfoExample example) throws SQLException {
        List<Involvedtradinginfo> list = getSqlMap().queryForList("INVOLVEDTRADINGINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static Involvedtradinginfo selectByPrimaryKey(String blacktransnbr) throws SQLException {
        Involvedtradinginfo _key = new Involvedtradinginfo();
        _key.setBlacktransnbr(blacktransnbr);
        Involvedtradinginfo record = (Involvedtradinginfo) getSqlMap().queryForObject("INVOLVEDTRADINGINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Involvedtradinginfo record, InvolvedtradinginfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("INVOLVEDTRADINGINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Involvedtradinginfo record, InvolvedtradinginfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("INVOLVEDTRADINGINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Involvedtradinginfo record) throws SQLException {
        int rows = getSqlMap().update("INVOLVEDTRADINGINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Involvedtradinginfo record) throws SQLException {
        int rows = getSqlMap().update("INVOLVEDTRADINGINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INVOLVEDTRADINGINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends InvolvedtradinginfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, InvolvedtradinginfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}