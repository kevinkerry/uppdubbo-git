package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Queapplhist;
import com.csii.upp.dto.generate.QueapplhistExample;

public class QueapplhistDAO extends BasePayDAO {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int countByExample(QueapplhistExample example) throws SQLException {
		Integer count = (Integer) getSqlMap().queryForObject(
				"QUEAPPLHIST.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int deleteByExample(QueapplhistExample example) throws SQLException {
		int rows = getSqlMap().delete("QUEAPPLHIST.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int deleteByPrimaryKey(Long quenbr, Long applnbr, Long quesubnbr,
			Long runseqnbr) throws SQLException {
		Queapplhist _key = new Queapplhist();
		_key.setQuenbr(quenbr);
		_key.setApplnbr(applnbr);
		_key.setQuesubnbr(quesubnbr);
		_key.setRunseqnbr(runseqnbr);
		int rows = getSqlMap().delete("QUEAPPLHIST.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static void insert(Queapplhist record) throws SQLException {
		getSqlMap().insert("QUEAPPLHIST.insert", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static void insertSelective(Queapplhist record) throws SQLException {
		getSqlMap().insert("QUEAPPLHIST.insertSelective", record);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Queapplhist> selectByExampleWithBLOBs(QueapplhistExample example)
			throws SQLException {
		List<Queapplhist> list = getSqlMap().queryForList(
				"QUEAPPLHIST.selectByExampleWithBLOBs", example);
		return list;
	}
	
	@SuppressWarnings("unchecked")
	public static List<Map<String, Object>> selectByExampleWithBLOBs(Map map)
			throws SQLException {
		List<Map<String, Object>> list = getSqlMap().queryForList(
				"QUEAPPLHISTADNAPPLGENERATE.selectByMapWithBLOBs", map);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	@SuppressWarnings("unchecked")
	public static List<Queapplhist> selectByExampleWithoutBLOBs(
			QueapplhistExample example) throws SQLException {
		List<Queapplhist> list = getSqlMap().queryForList(
				"QUEAPPLHIST.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static Queapplhist selectByPrimaryKey(Long quenbr, Long applnbr,
			Long quesubnbr, Long runseqnbr) throws SQLException {
		Queapplhist _key = new Queapplhist();
		_key.setQuenbr(quenbr);
		_key.setApplnbr(applnbr);
		_key.setQuesubnbr(quesubnbr);
		_key.setRunseqnbr(runseqnbr);
		Queapplhist record = (Queapplhist) getSqlMap().queryForObject(
				"QUEAPPLHIST.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int updateByExampleSelective(Queapplhist record,
			QueapplhistExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUEAPPLHIST.updateByExampleSelective",
				parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int updateByExampleWithBLOBs(Queapplhist record,
			QueapplhistExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUEAPPLHIST.updateByExampleWithBLOBs",
				parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int updateByExampleWithoutBLOBs(Queapplhist record,
			QueapplhistExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMap().update("QUEAPPLHIST.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeySelective(Queapplhist record)
			throws SQLException {
		int rows = getSqlMap().update(
				"QUEAPPLHIST.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeyWithBLOBs(Queapplhist record)
			throws SQLException {
		int rows = getSqlMap().update(
				"QUEAPPLHIST.updateByPrimaryKeyWithBLOBs", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	public static int updateByPrimaryKeyWithoutBLOBs(Queapplhist record)
			throws SQLException {
		int rows = getSqlMap().update("QUEAPPLHIST.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table QUEAPPLHIST
	 * @mbggenerated
	 */
	protected static class UpdateByExampleParms extends QueapplhistExample {
		private Object record;

		public UpdateByExampleParms(Object record, QueapplhistExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}