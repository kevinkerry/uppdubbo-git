package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Innercheckapply;
import com.csii.upp.dto.generate.InnercheckapplyExample;

public class InnercheckapplyDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int countByExample(InnercheckapplyExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("INNERCHECKAPPLY.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int deleteByExample(InnercheckapplyExample example) throws SQLException {
        int rows = getSqlMap().delete("INNERCHECKAPPLY.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String checkapplynbr) throws SQLException {
        Innercheckapply _key = new Innercheckapply();
        _key.setCheckapplynbr(checkapplynbr);
        int rows = getSqlMap().delete("INNERCHECKAPPLY.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static void insert(Innercheckapply record) throws SQLException {
        getSqlMap().insert("INNERCHECKAPPLY.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static void insertSelective(Innercheckapply record) throws SQLException {
        getSqlMap().insert("INNERCHECKAPPLY.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Innercheckapply> selectByExample(InnercheckapplyExample example) throws SQLException {
        List<Innercheckapply> list = getSqlMap().queryForList("INNERCHECKAPPLY.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static Innercheckapply selectByPrimaryKey(String checkapplynbr) throws SQLException {
        Innercheckapply _key = new Innercheckapply();
        _key.setCheckapplynbr(checkapplynbr);
        Innercheckapply record = (Innercheckapply) getSqlMap().queryForObject("INNERCHECKAPPLY.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Innercheckapply record, InnercheckapplyExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("INNERCHECKAPPLY.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int updateByExample(Innercheckapply record, InnercheckapplyExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("INNERCHECKAPPLY.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Innercheckapply record) throws SQLException {
        int rows = getSqlMap().update("INNERCHECKAPPLY.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Innercheckapply record) throws SQLException {
        int rows = getSqlMap().update("INNERCHECKAPPLY.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INNERCHECKAPPLY
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends InnercheckapplyExample {
        private Object record;

        public UpdateByExampleParms(Object record, InnercheckapplyExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}