package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Department;
import com.csii.upp.dto.generate.DepartmentExample;

public class DepartmentDAO extends BasePayDAO {

	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int countByExample(DepartmentExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("DEPARTMENT.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int deleteByExample(DepartmentExample example) throws SQLException {
        int rows = getSqlMap().delete("DEPARTMENT.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int deleteByPrimaryKey(String departmentnbr) throws SQLException {
        Department _key = new Department();
        _key.setDepartmentnbr(departmentnbr);
        int rows = getSqlMap().delete("DEPARTMENT.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  void insert(Department record) throws SQLException {
        getSqlMap().insert("DEPARTMENT.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  void insertSelective(Department record) throws SQLException {
        getSqlMap().insert("DEPARTMENT.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static  List<Department> selectByExample(DepartmentExample example) throws SQLException {
        List<Department> list = getSqlMap().queryForList("DEPARTMENT.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  Department selectByPrimaryKey(String departmentnbr) throws SQLException {
        Department _key = new Department();
        _key.setDepartmentnbr(departmentnbr);
        Department record = (Department) getSqlMap().queryForObject("DEPARTMENT.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int updateByExampleSelective(Department record, DepartmentExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("DEPARTMENT.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int updateByExample(Department record, DepartmentExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("DEPARTMENT.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKeySelective(Department record) throws SQLException {
        int rows = getSqlMap().update("DEPARTMENT.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKey(Department record) throws SQLException {
        int rows = getSqlMap().update("DEPARTMENT.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEPARTMENT
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends DepartmentExample {
        private Object record;

        public UpdateByExampleParms(Object record, DepartmentExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}