package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Merapplyinfo;
import com.csii.upp.dto.generate.MerapplyinfoExample;

public class MerapplyinfoDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int countByExample(MerapplyinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERAPPLYINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(MerapplyinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("MERAPPLYINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String merapplynbr) throws SQLException {
        Merapplyinfo _key = new Merapplyinfo();
        _key.setMerapplynbr(merapplynbr);
        int rows = getSqlMap().delete("MERAPPLYINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static void insert(Merapplyinfo record) throws SQLException {
        getSqlMap().insert("MERAPPLYINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Merapplyinfo record) throws SQLException {
        getSqlMap().insert("MERAPPLYINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Merapplyinfo> selectByExample(MerapplyinfoExample example) throws SQLException {
        List<Merapplyinfo> list = getSqlMap().queryForList("MERAPPLYINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static Merapplyinfo selectByPrimaryKey(String merapplynbr) throws SQLException {
        Merapplyinfo _key = new Merapplyinfo();
        _key.setMerapplynbr(merapplynbr);
        Merapplyinfo record = (Merapplyinfo) getSqlMap().queryForObject("MERAPPLYINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Merapplyinfo record, MerapplyinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERAPPLYINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Merapplyinfo record, MerapplyinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERAPPLYINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Merapplyinfo record) throws SQLException {
        int rows = getSqlMap().update("MERAPPLYINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Merapplyinfo record) throws SQLException {
        int rows = getSqlMap().update("MERAPPLYINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERAPPLYINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MerapplyinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, MerapplyinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}