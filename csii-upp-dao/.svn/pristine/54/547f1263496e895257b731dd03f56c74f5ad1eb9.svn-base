package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Meracctinfo;
import com.csii.upp.dto.generate.MeracctinfoExample;

public class MeracctinfoDAO extends BasePayDAO {
  
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int countByExample(MeracctinfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("MERACCTINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int deleteByExample(MeracctinfoExample example) throws SQLException {
        int rows = getSqlMap().delete("MERACCTINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int deleteByPrimaryKey(String mernbr) throws SQLException {
        Meracctinfo _key = new Meracctinfo();
        _key.setMernbr(mernbr);
        int rows = getSqlMap().delete("MERACCTINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static void insert(Meracctinfo record) throws SQLException {
        getSqlMap().insert("MERACCTINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static void insertSelective(Meracctinfo record) throws SQLException {
        getSqlMap().insert("MERACCTINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static List<Meracctinfo> selectByExample(MeracctinfoExample example) throws SQLException {
        List<Meracctinfo> list = getSqlMap().queryForList("MERACCTINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static Meracctinfo selectByPrimaryKey(String mernbr) throws SQLException {
        Meracctinfo _key = new Meracctinfo();
        _key.setMernbr(mernbr);
        Meracctinfo record = (Meracctinfo) getSqlMap().queryForObject("MERACCTINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int updateByExampleSelective(Meracctinfo record, MeracctinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERACCTINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int updateByExample(Meracctinfo record, MeracctinfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("MERACCTINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKeySelective(Meracctinfo record) throws SQLException {
        int rows = getSqlMap().update("MERACCTINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    public static int updateByPrimaryKey(Meracctinfo record) throws SQLException {
        int rows = getSqlMap().update("MERACCTINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERACCTINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MeracctinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, MeracctinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}