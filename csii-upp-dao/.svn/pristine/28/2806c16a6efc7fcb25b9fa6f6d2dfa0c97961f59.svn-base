package com.csii.upp.dao.generate;

import java.sql.SQLException;
import java.util.List;

import com.csii.upp.dao.BasePayDAO;
import com.csii.upp.dto.generate.Userpaytypsigninfo;
import com.csii.upp.dto.generate.UserpaytypsigninfoExample;

public class UserpaytypsigninfoDAO extends BasePayDAO {
	 /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int countByExample(UserpaytypsigninfoExample example) throws SQLException {
        Integer count = (Integer)  getSqlMap().queryForObject("USERPAYTYPSIGNINFO.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int deleteByExample(UserpaytypsigninfoExample example) throws SQLException {
        int rows = getSqlMap().delete("USERPAYTYPSIGNINFO.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int deleteByPrimaryKey(String signnbr, String signtypcd) throws SQLException {
        Userpaytypsigninfo _key = new Userpaytypsigninfo();
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        int rows = getSqlMap().delete("USERPAYTYPSIGNINFO.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  void insert(Userpaytypsigninfo record) throws SQLException {
        getSqlMap().insert("USERPAYTYPSIGNINFO.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  void insertSelective(Userpaytypsigninfo record) throws SQLException {
        getSqlMap().insert("USERPAYTYPSIGNINFO.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public static  List<Userpaytypsigninfo> selectByExample(UserpaytypsigninfoExample example) throws SQLException {
        List<Userpaytypsigninfo> list = getSqlMap().queryForList("USERPAYTYPSIGNINFO.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  Userpaytypsigninfo selectByPrimaryKey(String signnbr, String signtypcd) throws SQLException {
        Userpaytypsigninfo _key = new Userpaytypsigninfo();
        _key.setSignnbr(signnbr);
        _key.setSigntypcd(signtypcd);
        Userpaytypsigninfo record = (Userpaytypsigninfo) getSqlMap().queryForObject("USERPAYTYPSIGNINFO.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int updateByExampleSelective(Userpaytypsigninfo record, UserpaytypsigninfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("USERPAYTYPSIGNINFO.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int updateByExample(Userpaytypsigninfo record, UserpaytypsigninfoExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMap().update("USERPAYTYPSIGNINFO.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKeySelective(Userpaytypsigninfo record) throws SQLException {
        int rows = getSqlMap().update("USERPAYTYPSIGNINFO.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    public static  int updateByPrimaryKey(Userpaytypsigninfo record) throws SQLException {
        int rows = getSqlMap().update("USERPAYTYPSIGNINFO.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USERPAYTYPSIGNINFO
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends UserpaytypsigninfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, UserpaytypsigninfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}